var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Address.html",[0,1.314,1,1.027]],["body/interfaces/Address.html",[0,1.834,1,1.74,2,2.642,3,0.243,4,0.218,5,0.193,6,4.687,7,0.375,8,1.306,9,3.783,10,3.783,11,3.783,12,0.837,13,3.783,14,3.59,15,3.783,16,1.902,17,0.66,18,0.016,19,0.892,20,0.243,21,0.013,22,0.013]],["title/controllers/AddressController.html",[23,1.26,24,2.757]],["body/controllers/AddressController.html",[1,1.532,3,0.198,4,0.178,5,0.158,7,0.306,12,0.733,16,1.511,17,0.492,18,0.016,20,0.198,21,0.011,22,0.011,23,1.437,24,4.112,25,1.437,26,3.829,27,2.404,28,1.412,29,1.927,30,1.731,31,1.532,32,1.323,33,4.229,34,4.03,35,1.662,36,3.334,37,0.805,38,4.423,39,1.532,40,1.149,41,1.532,42,1.412,43,3.437,44,2.988,45,3.503,46,4.423,47,0.372,48,2.274,49,1.632,50,1.879,51,0.707,52,3.315,53,3.829,54,2.274,55,3.437,56,4.423,57,0.062,58,1.865,59,1.125,60,2.404,61,1.532,62,1.532,63,4.423,64,4.423,65,1.532,66,1.532,67,3.144,68,1.929,69,1.532,70,2.134,71,0.844,72,1.171,73,1.22,74,1.249,75,4.423,76,3.144,77,2.55,78,2.134,79,4.423,80,2.404,81,4.423,82,2.404,83,2.404,84,2.404,85,3.144,86,2.404,87,4.423,88,4.423,89,1.171,90,3.144]],["title/classes/AddressDto.html",[44,1.563,57,0.055]],["body/classes/AddressDto.html",[1,1.729,3,0.204,4,0.183,5,0.162,7,0.315,8,1.169,9,3.358,10,3.358,11,3.358,12,0.742,13,3.358,14,3.186,15,3.358,16,1.831,17,0.635,18,0.016,19,0.742,20,0.204,21,0.012,22,0.012,35,2.143,37,1.038,44,2.371,47,0.32,57,0.083,68,2.194,71,1.139,91,1.83,92,3.932,93,2.731,94,5.652,95,3.294,96,3.294,97,4.543,98,4.01,99,4.543,100,4.543,101,2.107,102,4.543,103,4.543,104,4.543,105,4.543,106,2.913,107,2.601,108,3.32,109,3.641,110,1.83,111,4.543]],["title/modules/AddressModule.html",[112,1.26,113,2.108]],["body/modules/AddressModule.html",[3,0.242,4,0.217,5,0.192,18,0.016,20,0.242,21,0.013,22,0.013,24,5.018,25,2.128,47,0.399,51,0.861,52,4.108,53,4.661,57,0.076,112,2.293,113,4.28,114,2.27,115,2.38,116,2.627,117,2.627,118,2.38,119,3.443,120,3.443,121,4.661,122,4.661,123,4.661,124,4.7,125,3.195,126,2.627,127,2.498,128,5.385,129,5.385,130,4.661]],["title/injectables/AddressRepository.html",[124,2.382,131,0.649]],["body/injectables/AddressRepository.html",[1,1.956,3,0.145,4,0.13,5,0.116,7,0.224,8,0.928,9,3.081,10,3.081,11,3.081,12,0.84,13,3.081,14,2.923,15,3.081,17,0.54,18,0.016,19,0.834,20,0.145,21,0.009,22,0.009,28,1.14,29,1.956,30,1.397,31,1.587,32,1.397,37,0.989,39,1.587,40,1.19,41,1.587,42,1.463,43,3.629,44,2.945,47,0.298,50,1.587,51,0.518,55,2.518,57,0.046,59,1.392,61,1.587,62,1.237,65,1.587,66,1.587,69,0.858,71,0.473,72,0.858,73,0.894,74,1.294,89,0.858,90,2.304,124,2.868,131,0.781,132,1.098,133,2.805,134,2.309,135,3.596,136,2.976,137,3.363,138,2.976,139,2.976,140,1.397,141,1.793,142,4.043,143,3.241,144,2.21,145,1.397,146,3.241,147,3.241,148,3.241,149,2.679,150,2.559,151,2.15,152,4.671,153,3.241,154,3.241,155,2.538,156,3.241,157,2.538,158,3.257,159,3.241,160,3.241,161,2.402,162,1.581,163,1.761,164,1.947,165,1.761,166,4.671,167,4.671,168,4.671,169,4.671,170,4.671,171,4.671,172,3.257,173,1.761,174,2.816,175,3.257,176,2.21,177,2.976,178,1.761,179,2.11,180,2.309,181,1.761,182,2.805,183,1.761,184,1.761,185,1.761,186,0.931,187,1.99,188,1.581,189,1.432]],["title/injectables/AddressService.html",[52,1.994,131,0.649]],["body/injectables/AddressService.html",[3,0.169,4,0.151,5,0.134,7,0.26,9,1.932,10,1.932,11,1.932,12,0.824,13,1.932,14,1.833,15,1.932,17,0.571,18,0.016,19,0.875,20,0.169,21,0.01,22,0.01,28,1.266,29,2.008,30,1.551,31,1.373,32,1.551,37,0.934,39,1.778,40,1.334,41,1.778,42,1.562,43,4.029,44,3.096,47,0.323,49,1.386,50,1.695,51,0.601,52,2.666,55,2.92,57,0.053,58,1.585,59,0.956,61,1.695,62,1.695,65,1.695,66,1.695,69,0.995,70,1.386,71,0.548,72,1.373,73,1.43,74,0.811,78,2.477,85,5.153,89,1.373,90,2.671,124,4.263,130,3.253,131,0.867,132,1.273,140,1.551,141,1.551,142,4.488,144,2.361,145,1.551,151,2.181,164,2.181,176,2.477,186,1.489,190,3.253,191,2.042,192,3.758,193,3.758,194,3.758,195,2.391,196,4.568,197,3.758,198,2.989,199,3.758,200,3.758,201,2.818,202,2.818,203,3.758,204,2.042,205,3.649,206,3.478,207,3.758,208,5.185,209,3.758,210,2.818,211,3.758,212,2.042,213,2.042,214,2.166,215,2.308,216,2.671,217,2.671,218,2.671,219,2.671,220,2.671,221,2.671]],["title/controllers/AppController.html",[23,1.26,222,2.757]],["body/controllers/AppController.html",[3,0.258,4,0.232,5,0.205,7,0.399,16,1.598,18,0.016,20,0.258,21,0.013,22,0.013,23,2.214,25,1.869,28,1.664,35,1.653,37,0.8,42,1.405,47,0.37,51,0.92,57,0.081,58,2.426,59,1.463,164,1.869,222,4.845,223,4.981,224,6.499,225,5.754,226,4.46,227,4.981,228,5.754]],["title/modules/AppModule.html",[112,1.26,229,2.757]],["body/modules/AppModule.html",[3,0.202,4,0.181,5,0.161,18,0.016,20,0.202,21,0.012,22,0.012,25,1.901,47,0.428,51,0.719,57,0.064,112,2.112,113,3.974,114,1.898,115,1.989,116,2.195,117,2.195,118,1.989,119,3.171,120,2.195,125,2.854,126,2.195,127,2.087,222,4.621,226,4.491,227,3.895,229,5.719,230,3.895,231,3.895,232,3.895,233,4.812,234,4.812,235,4.812,236,4.812,237,4.812,238,4.491,239,4.812,240,4.5,241,3.85,242,4.5,243,4.5,244,3.895,245,4.5,246,3.895,247,4.5,248,4.5,249,4.5,250,4.5,251,2.961,252,4.5,253,2.594,254,4.5,255,4.5,256,4.5,257,4.5,258,4.5,259,2.314]],["title/injectables/AppService.html",[131,0.649,226,2.382]],["body/injectables/AppService.html",[3,0.264,4,0.237,5,0.21,7,0.408,16,1.619,18,0.016,20,0.264,21,0.014,22,0.014,28,1.686,37,0.818,42,1.437,47,0.32,51,0.941,57,0.083,131,1.155,132,1.993,164,1.912,224,6.547,226,4.241,260,5.094,261,5.885,262,5.885,263,5.885]],["title/interfaces/Beehive.html",[0,1.314,264,1.371]],["body/interfaces/Beehive.html",[0,1.881,2,2.709,3,0.249,4,0.223,5,0.198,7,0.385,8,1.325,12,0.844,16,1.855,17,0.646,18,0.016,19,0.902,20,0.249,21,0.013,22,0.013,40,1.474,47,0.302,264,2.358,265,4.806,266,4.277,267,2.663,268,4.277,269,5.552]],["title/controllers/BeehiveController.html",[23,1.26,270,2.757]],["body/controllers/BeehiveController.html",[3,0.129,4,0.116,5,0.103,7,0.2,12,0.821,16,1.692,17,0.54,18,0.016,19,0.715,20,0.129,21,0.008,22,0.008,23,0.938,25,0.938,27,1.569,28,1.048,29,2.002,30,1.284,31,1.136,32,0.864,33,4.315,34,4.13,35,1.824,36,2.473,37,0.883,39,1.682,40,1.262,41,1.682,42,1.551,45,2.783,47,0.308,48,1.484,49,1.065,50,1.932,51,0.461,54,1.484,57,0.041,58,1.217,59,0.734,60,1.569,61,1.682,62,1.682,65,1.682,66,1.682,67,3.452,68,2.133,69,1.682,70,1.889,71,1.053,72,0.764,73,0.796,74,1.491,76,3.452,77,1.664,78,2.547,80,3.082,82,3.082,83,3.293,84,3.082,86,3.082,89,1.356,140,1.284,141,1.532,145,0.864,179,1.653,186,0.829,189,2.263,195,1.163,264,2.004,270,3.05,271,2.498,272,2.206,273,2.635,274,2.243,275,3.689,276,3.145,277,2.886,278,2.824,279,2.886,280,1.899,281,3.334,282,2.886,283,2.052,284,3.714,285,2.886,286,2.886,287,2.243,288,2.886,289,3.145,290,2.498,291,2.243,292,2.886,293,1.772,294,2.886,295,2.886,296,3.791,297,2.886,298,4.291,299,1.772,300,3.714,301,3.714,302,2.886,303,1.772,304,2.243,305,1.569,306,1.772,307,2.886,308,2.498,309,2.243,310,2.243,311,1.276,312,1.772,313,3.334,314,2.886,315,4.291,316,4.291,317,2.243,318,1.899,319,1.899,320,1.569,321,2.886]],["title/classes/BeehiveDto.html",[57,0.055,275,1.892]],["body/classes/BeehiveDto.html",[3,0.214,4,0.192,5,0.17,7,0.33,8,1.205,12,0.759,16,1.74,17,0.642,18,0.016,19,0.765,20,0.214,21,0.012,22,0.012,35,2.086,37,1.01,40,1.327,47,0.382,57,0.094,68,2.104,71,1.114,91,1.919,93,2.815,95,3.221,96,3.181,98,4.101,101,2.21,106,3.062,107,2.682,108,2.815,109,3.43,110,1.919,264,2.36,266,3.849,267,2.262,268,3.849,275,2.96,322,4.123,323,4.763,324,3.262,325,2.925,326,2.324,327,4.763,328,4.763,329,4.763,330,4.763,331,4.763,332,2.815,333,2.105,334,3.701]],["title/modules/BeehiveModule.html",[112,1.26,233,2.553]],["body/modules/BeehiveModule.html",[3,0.247,4,0.221,5,0.196,18,0.016,20,0.247,21,0.013,22,0.013,25,2.155,47,0.402,51,0.879,57,0.078,112,2.314,114,2.319,115,2.43,116,2.682,117,2.682,118,2.43,119,3.475,120,2.682,125,3.236,126,2.682,127,2.551,233,5.164,270,5.064,289,4.723,290,4.76,335,4.76,336,4.76,337,4.723,338,5.499,339,5.499,340,4.76]],["title/injectables/BeehiveRepository.html",[131,0.649,337,2.382]],["body/injectables/BeehiveRepository.html",[3,0.119,4,0.107,5,0.095,7,0.183,8,0.799,12,0.849,17,0.523,18,0.016,19,0.893,20,0.119,21,0.008,22,0.008,28,0.982,29,1.976,30,1.203,31,1.438,32,1.203,37,0.997,39,1.628,40,1.366,41,1.628,42,1.501,47,0.264,50,1.628,51,0.423,57,0.037,59,1.236,61,1.628,62,1.628,65,1.628,66,1.628,69,1.546,71,0.709,72,0.701,73,0.73,74,1.261,89,1.288,131,0.672,132,0.897,134,2.05,135,2.951,136,2.642,137,2.986,138,2.642,139,2.642,140,1.203,141,1.625,144,2.268,145,1.203,149,2.694,150,2.574,151,2.139,155,3.341,157,2.185,158,2.951,161,3.161,162,1.292,163,1.439,164,1.997,165,1.439,172,3.341,173,1.439,174,3.161,175,3.341,176,2.268,177,1.439,178,1.439,179,2.537,180,2.776,181,1.439,183,1.439,184,1.439,185,1.439,186,0.76,187,1.626,188,2.372,189,2.149,264,2.637,266,3.13,267,1.978,268,3.13,272,2.068,273,2.469,274,3.125,275,3.409,280,2.646,283,2.859,287,3.125,291,2.057,337,2.469,341,2.292,342,4.209,343,4.209,344,2.648,345,2.648,346,2.648,347,2.648,348,2.648,349,2.648,350,4.022,351,2.648,352,2.648,353,6.583,354,5.43,355,4.219,356,4.219,357,5.322,358,4.7,359,3.775,360,3.775,361,5.43,362,4.777,363,1.516,364,2.859,365,3.86,366,2.648,367,2.648,368,2.648,369,5.43,370,2.648,371,2.648,372,3.481,373,3.481,374,3.481,375,4.022,376,2.648,377,2.292,378,2.292]],["title/injectables/BeehiveService.html",[131,0.649,289,2.382]],["body/injectables/BeehiveService.html",[1,1.159,3,0.133,4,0.119,5,0.106,7,0.205,12,0.883,17,0.564,18,0.016,19,0.915,20,0.133,21,0.009,22,0.009,28,1.069,29,2.01,30,1.309,31,1.159,32,1.309,37,0.923,39,1.757,40,1.457,41,1.757,42,1.566,47,0.283,49,1.093,50,1.698,51,0.474,57,0.042,58,1.25,59,0.754,61,1.698,62,1.698,65,1.698,66,1.698,69,0.785,70,1.093,71,0.838,72,1.159,73,1.207,74,1.123,78,2.645,89,1.159,131,0.732,132,1.004,140,1.309,141,1.309,144,2.366,145,1.309,151,2.155,164,2.259,176,2.447,179,2.214,180,1.845,186,1.257,191,1.611,195,2.096,196,2.88,198,3.311,201,2.378,202,3.122,204,1.611,205,3.605,206,3.485,210,3.701,212,2.827,213,1.611,214,1.709,215,1.82,264,1.547,266,3.311,267,1.946,268,3.311,272,2.25,273,2.687,274,3.401,275,3.703,280,2.88,283,3.111,287,3.401,289,2.687,291,2.303,296,4.007,313,4.464,337,3.938,340,2.566,363,1.364,372,2.566,373,2.566,374,2.566,379,2.566,380,2.964,381,2.964,382,2.964,383,2.964,384,2.964,385,2.964,386,2.964,387,4.377,388,2.964,389,2.964,390,2.964,391,2.964,392,2.964,393,2.964,394,2.303,395,2.107,396,2.303,397,2.964,398,2.964,399,3.788,400,4.377,401,4.377,402,4.377,403,4.377,404,2.378,405,4.377,406,5.203,407,4.377,408,2.964,409,2.964]],["title/interfaces/Beekeeper.html",[0,1.314,363,1.209]],["body/interfaces/Beekeeper.html",[0,1.787,1,2.063,2,2.573,3,0.237,4,0.212,5,0.188,7,0.365,8,1.285,12,0.829,16,1.897,17,0.662,18,0.016,19,0.882,20,0.237,21,0.013,22,0.013,47,0.287,363,2.016,410,4.566,411,3.383,412,3.383,413,3.383,414,4.203,415,3.383,416,4.203,417,4.566]],["title/controllers/BeekeeperController.html",[23,1.26,418,2.757]],["body/controllers/BeekeeperController.html",[3,0.149,4,0.134,5,0.119,7,0.23,12,0.758,16,1.564,17,0.545,18,0.016,20,0.149,21,0.009,22,0.009,23,1.079,25,1.079,27,1.804,28,1.16,29,2.01,30,1.422,31,1.258,32,0.993,33,4.301,34,4.149,35,1.842,36,2.739,37,0.892,39,1.698,40,1.274,41,1.698,42,1.566,45,3.016,47,0.329,48,1.707,49,1.225,50,1.922,51,0.531,54,1.707,57,0.047,58,1.4,59,0.844,60,1.804,61,1.698,62,1.698,65,1.698,66,1.698,67,3.485,68,2.102,69,1.698,70,2.365,71,0.935,72,0.879,73,0.916,74,1.308,76,3.485,77,1.914,78,2.461,80,2.583,82,2.583,83,3.016,84,2.583,86,2.583,89,1.258,140,1.422,141,1.661,145,0.993,179,1.279,186,0.954,195,1.338,276,3.408,278,3.127,293,2.039,299,2.039,303,2.039,305,1.804,306,2.039,318,3.127,319,3.127,320,3.016,363,1.73,418,3.378,419,2.874,420,2.918,421,2.58,422,3.472,423,3.32,424,3.32,425,2.874,426,3.32,427,3.32,428,2.58,429,3.32,430,3.408,431,2.874,432,2.58,433,3.32,434,3.32,435,3.32,436,3.493,437,3.32,438,3.32,439,3.32,440,3.32,441,2.58,442,3.32,443,3.32,444,2.874,445,2.874,446,3.32,447,3.32,448,2.874]],["title/classes/BeekeeperDto.html",[57,0.055,422,1.799]],["body/classes/BeekeeperDto.html",[1,1.674,3,0.191,4,0.171,5,0.152,7,0.294,8,1.12,12,0.719,16,1.813,17,0.648,18,0.016,19,0.711,20,0.191,21,0.011,22,0.011,35,2.142,37,1.037,44,2.712,47,0.366,57,0.089,68,2.258,71,1.14,91,1.713,93,2.615,94,3.68,95,3.297,96,3.281,98,3.882,101,1.972,106,3.036,107,2.491,108,3.123,109,3.417,110,1.713,325,2.611,326,2.074,332,2.615,333,1.879,363,1.971,411,2.933,412,2.933,413,2.933,414,3.644,415,2.933,416,3.644,422,2.615,449,3.68,450,4.252,451,3.68,452,4.252,453,4.252,454,4.252,455,4.252,456,4.252,457,3.68,458,4.252,459,4.252,460,4.878,461,3.68,462,2.798,463,4.252,464,3.68]],["title/modules/BeekeeperModule.html",[112,1.26,234,2.553]],["body/modules/BeekeeperModule.html",[3,0.239,4,0.215,5,0.19,18,0.016,20,0.239,21,0.013,22,0.013,25,2.116,47,0.408,51,0.853,57,0.075,112,2.284,113,4.15,114,2.249,115,2.357,116,2.602,117,2.602,118,2.357,119,3.429,120,2.602,125,3.177,126,2.602,127,2.474,234,5.205,241,4.285,418,4.997,430,4.689,431,4.617,465,4.617,466,5.334,467,4.617,468,4.402,469,5.334,470,5.334,471,4.617,472,4.617]],["title/injectables/BeekeeperRepository.html",[131,0.649,468,2.236]],["body/injectables/BeekeeperRepository.html",[1,1.145,3,0.131,4,0.117,5,0.104,7,0.202,8,0.859,12,0.801,17,0.485,18,0.016,19,0.873,20,0.131,21,0.009,22,0.009,28,1.056,29,1.968,30,1.294,31,1.509,32,1.294,37,0.994,39,1.509,40,1.132,41,1.509,42,1.486,47,0.28,50,1.612,51,0.466,57,0.041,59,1.31,61,1.612,62,1.612,65,1.612,66,1.612,69,1.145,71,0.63,72,0.772,73,0.804,74,1.314,89,1.145,131,0.723,132,0.988,134,2.173,135,3.097,136,2.8,137,3.164,138,2.8,139,2.8,140,1.294,141,1.705,144,2.245,145,1.294,149,2.688,150,2.568,151,2.144,155,3.097,157,2.35,158,3.097,161,2.649,162,1.422,163,1.585,164,1.977,165,1.585,172,3.308,173,1.585,174,2.93,175,3.308,176,2.245,177,2.8,178,1.585,179,2.196,180,2.403,181,1.585,183,1.585,184,1.585,185,1.585,186,0.837,187,1.791,188,2.109,189,1.911,359,2.655,360,2.655,363,2.317,411,2.644,412,2.644,413,2.644,414,3.285,415,2.644,416,3.285,420,3.499,421,3.359,422,3.315,428,3.359,432,2.266,436,1.681,468,2.492,473,2.524,474,5.153,475,4.729,476,2.916,477,2.916,478,2.916,479,2.916,480,2.916,481,3.742,482,2.916,483,2.916,484,2.916,485,4.428,486,3.073,487,3.073,488,3.073,489,3.073,490,3.073,491,3.073,492,3.742,493,3.073,494,3.742,495,2.916,496,3.359,497,2.916,498,2.916,499,3.742,500,3.742,501,3.742,502,3.742,503,3.742,504,3.742,505,2.916,506,2.916]],["title/injectables/BeekeeperService.html",[131,0.649,430,2.382]],["body/injectables/BeekeeperService.html",[1,1.661,3,0.141,4,0.126,5,0.112,7,0.218,9,1.615,10,1.615,11,1.615,12,0.835,13,1.615,14,1.532,15,1.615,17,0.534,18,0.016,19,0.825,20,0.141,21,0.009,22,0.009,28,1.115,29,1.993,30,1.366,31,1.209,32,1.366,37,0.91,39,1.661,40,1.246,41,1.661,42,1.532,44,2.167,47,0.341,49,1.159,50,1.564,51,0.502,52,3.473,57,0.044,59,1.161,61,1.661,62,1.833,65,1.661,66,1.661,69,0.832,70,1.159,71,0.458,72,1.209,73,1.259,74,1.568,78,2.603,85,4.653,89,1.564,131,0.763,132,1.064,134,1.925,140,1.366,141,1.366,144,2.314,145,1.366,151,2.127,164,2.127,176,2.414,186,1.311,191,2.481,195,2.167,198,3.773,201,2.481,202,2.481,204,1.707,205,3.557,206,3.409,210,3.209,212,1.707,213,1.707,214,1.81,215,1.929,216,2.233,217,2.233,218,2.233,219,2.233,220,2.233,221,2.233,320,3.557,363,0.979,411,2.118,412,2.118,413,2.118,414,2.632,415,2.118,416,2.632,420,3.626,421,3.548,422,3.491,428,3.548,430,2.804,432,2.44,436,3.101,448,3.952,462,2.067,468,3.773,471,2.719,499,2.719,500,2.719,501,2.719,502,2.719,503,2.719,504,2.719,507,2.719,508,3.141,509,3.141,510,3.141,511,5.086,512,5.086,513,3.141,514,3.141,515,3.548,516,2.227,517,3.141,518,3.952,519,4.566,520,3.141,521,2.719,522,2.44,523,3.141,524,3.141,525,2.719,526,3.141,527,2.44,528,4.566,529,3.141,530,3.141,531,3.141,532,3.141,533,2.44,534,2.44,535,2.44,536,2.719,537,2.719,538,2.44,539,2.44]],["title/interfaces/Beeyard.html",[0,1.314,267,1.314]],["body/interfaces/Beeyard.html",[0,1.863,1,2.078,2,2.682,3,0.247,4,0.221,5,0.196,7,0.381,8,1.318,12,0.841,16,1.803,17,0.644,18,0.016,19,0.898,20,0.247,21,0.013,22,0.013,40,1.469,47,0.361,267,2.247,363,2.446,404,4.02,417,4.76,540,4.76,541,5.499]],["title/controllers/BeeyardController.html",[23,1.26,542,2.757]],["body/controllers/BeeyardController.html",[3,0.143,4,0.129,5,0.114,7,0.221,12,0.806,16,1.661,17,0.537,18,0.016,19,0.685,20,0.143,21,0.009,22,0.009,23,1.039,25,1.039,27,1.738,28,1.129,29,1.998,30,1.384,31,1.225,32,0.957,33,4.31,34,4.126,35,1.815,36,2.666,37,0.879,39,1.673,40,1.255,41,1.673,42,1.543,45,2.953,47,0.324,48,1.644,49,1.179,50,1.93,51,0.511,54,1.644,57,0.045,58,1.348,59,0.813,60,1.738,61,1.673,62,1.673,65,1.673,66,1.673,67,3.434,68,2.12,69,1.673,70,2.331,71,0.921,72,0.847,73,0.882,76,3.434,77,1.843,78,2.505,80,2.953,82,2.953,83,3.236,84,2.953,86,2.953,89,1.225,140,1.384,141,1.626,145,0.957,179,1.232,186,0.918,195,1.288,267,2.017,276,3.337,278,3.044,293,1.963,299,1.963,303,1.963,305,1.738,306,1.963,309,3.594,310,3.594,311,2.632,312,4.044,318,2.104,319,2.104,320,1.738,324,3.541,441,2.484,542,3.288,543,2.767,544,3.594,545,2.484,546,3.197,547,3.197,548,2.484,549,4.625,550,3.197,551,3.197,552,2.484,553,3.197,554,3.337,555,2.767,556,2.484,557,3.197,558,3.197,559,3.197,560,3.197,561,4.625,562,3.197,563,3.197,564,3.197,565,3.197,566,2.484,567,3.197,568,3.197,569,2.767]],["title/classes/BeeyardDto.html",[57,0.055,324,1.799]],["body/classes/BeeyardDto.html",[1,1.757,3,0.211,4,0.189,5,0.168,7,0.326,8,1.195,12,0.755,16,1.64,17,0.648,18,0.016,19,0.759,20,0.211,21,0.012,22,0.012,35,2.077,37,1.006,40,1.318,44,2.819,47,0.393,57,0.094,68,2.093,71,1.111,91,1.894,93,2.791,95,3.212,96,3.12,98,3.695,101,2.18,106,3.05,107,2.659,108,2.791,109,3.238,110,1.894,267,2.248,324,2.791,325,3.695,326,2.935,332,3.079,333,2.077,363,2.069,404,3.607,422,3.246,462,3.093,570,4.069,571,4.701,572,4.701,573,4.701,574,4.701,575,4.701,576,3.652,577,4.701]],["title/modules/BeeyardModule.html",[112,1.26,235,2.553]],["body/modules/BeeyardModule.html",[3,0.239,4,0.215,5,0.19,18,0.016,20,0.239,21,0.013,22,0.013,25,2.116,47,0.408,51,0.853,57,0.075,112,2.284,113,4.15,114,2.249,115,2.357,116,2.602,117,2.602,118,2.357,119,3.429,120,2.602,125,3.177,126,2.602,127,2.474,235,5.205,241,4.285,472,4.617,542,4.997,554,4.689,555,4.617,578,4.617,579,5.334,580,4.617,581,4.689,582,5.334,583,4.617,584,5.334]],["title/injectables/BeeyardRepository.html",[131,0.649,581,2.382]],["body/injectables/BeeyardRepository.html",[1,1.488,3,0.127,4,0.114,5,0.101,7,0.196,8,0.841,12,0.826,17,0.512,18,0.016,19,0.907,20,0.127,21,0.008,22,0.008,28,1.034,29,1.959,30,1.267,31,1.488,32,1.267,37,0.988,39,1.593,40,1.365,41,1.593,42,1.468,47,0.305,50,1.671,51,0.453,57,0.04,59,1.288,61,1.593,62,1.593,65,1.593,66,1.593,69,1.121,71,0.617,72,0.751,73,0.782,74,1.214,89,1.121,131,0.708,132,0.96,134,2.137,135,3.054,136,2.754,137,3.111,138,2.754,139,2.754,140,1.267,141,1.681,144,2.218,145,1.267,149,2.66,150,2.542,151,2.124,155,3.054,157,2.301,158,3.054,161,2.605,162,1.383,163,1.54,164,1.954,165,1.54,172,3.054,173,1.54,174,2.89,175,3.268,176,2.218,177,2.754,178,1.54,179,2.166,180,2.37,181,1.54,183,1.54,184,1.54,185,1.54,186,0.814,187,1.741,188,2.065,189,1.871,267,2.506,311,1.253,312,1.741,324,3.294,357,3.664,358,3.664,359,3.874,360,3.874,363,1.579,364,3.009,365,3.995,404,3.054,468,1.634,475,4.673,481,3.664,485,4.367,486,3.995,487,3.995,488,3.995,489,3.995,490,3.995,491,3.995,492,3.664,493,3.995,494,3.664,496,4.367,544,3.289,545,3.289,548,3.289,552,3.289,556,2.203,581,2.6,585,2.454,586,5.067,587,2.835,588,2.835,589,2.835,590,2.835,591,2.835,592,2.835,593,2.835,594,2.835,595,2.835,596,5.62,597,2.835,598,2.835,599,2.835,600,3.664,601,3.664,602,4.234,603,2.835,604,2.835,605,2.835,606,2.454,607,2.454]],["title/injectables/BeeyardService.html",[131,0.649,554,2.382]],["body/injectables/BeeyardService.html",[1,1.748,3,0.131,4,0.117,5,0.104,7,0.202,9,2.225,10,2.225,11,2.225,12,0.856,13,2.225,14,2.111,15,2.225,17,0.542,18,0.016,19,0.873,20,0.131,21,0.009,22,0.009,28,1.056,29,1.969,30,1.294,31,1.146,32,1.294,37,0.887,39,1.689,40,1.376,41,1.689,42,1.487,44,2.569,47,0.331,49,1.077,50,1.612,51,0.467,52,3.394,57,0.041,59,1.1,61,1.612,62,1.795,65,1.612,66,1.612,69,0.773,70,1.077,71,0.426,72,1.146,74,1.464,78,2.669,85,4.053,89,1.51,90,3.076,131,0.723,132,0.989,134,1.824,140,1.294,141,1.294,144,2.246,145,1.294,151,2.072,164,2.145,176,2.352,182,2.526,186,1.243,191,2.351,195,2.077,198,3.907,201,2.351,202,2.351,204,1.586,205,3.466,206,3.309,210,3.309,212,2.351,213,1.586,214,1.682,216,2.075,217,2.075,218,2.075,219,2.075,220,2.075,221,2.075,267,1.466,305,3.099,311,2.278,312,4.252,320,2.351,324,3.494,363,1.607,395,2.075,404,2.802,436,2.494,462,1.921,511,4.43,512,4.43,515,3.362,516,2.781,518,4.935,521,2.526,522,2.268,527,2.268,533,2.268,544,3.362,545,3.362,548,3.362,552,3.362,554,2.657,556,2.268,566,3.362,569,3.745,581,3.916,583,2.526,600,2.526,601,2.526,608,2.526,609,2.919,610,2.919,611,2.919,612,2.919,613,4.327,614,2.919,615,4.327,616,5.702,617,2.919,618,2.919,619,4.327,620,2.919,621,2.919,622,2.919,623,2.919,624,4.327,625,2.919,626,2.919,627,2.919,628,2.268,629,2.919,630,2.919,631,2.919,632,2.919,633,2.919,634,2.919,635,2.919,636,2.919,637,2.919,638,2.526,639,2.919,640,2.919,641,2.919,642,2.919]],["title/interfaces/Client.html",[0,1.314,643,1.994]],["body/interfaces/Client.html",[0,1.848,1,2.075,2,2.662,3,0.245,4,0.22,5,0.195,7,0.378,8,1.312,12,0.839,16,1.876,17,0.653,18,0.016,19,0.895,20,0.245,21,0.013,22,0.013,47,0.297,411,3.422,412,3.422,413,3.422,415,3.422,643,3.395,644,4.723,645,5.457]],["title/controllers/ClientController.html",[23,1.26,251,2.553]],["body/controllers/ClientController.html",[3,0.159,4,0.143,5,0.127,7,0.246,12,0.775,16,1.598,17,0.531,18,0.016,20,0.159,21,0.01,22,0.01,23,1.153,25,1.153,27,1.928,28,1.216,29,1.989,30,1.49,31,1.319,32,1.061,33,4.299,34,4.113,35,1.793,36,2.871,37,0.868,39,1.653,40,1.24,41,1.653,42,1.524,45,3.128,47,0.339,48,1.824,49,1.309,50,1.923,51,0.567,54,1.824,57,0.05,58,1.496,59,0.902,60,1.928,61,1.653,62,1.653,65,1.653,66,1.653,67,3.392,68,2.095,69,1.653,70,2.302,71,0.91,72,0.939,73,0.978,74,0.766,76,3.392,77,2.045,78,2.425,80,2.707,82,2.707,83,3.128,84,2.707,86,2.707,89,0.939,140,1.49,141,1.722,145,1.061,186,1.019,195,1.429,251,3.278,253,3.318,276,3.535,278,3.278,293,2.178,299,2.178,303,2.178,305,1.928,306,2.178,311,2.544,320,1.928,436,2.045,441,2.756,643,3.675,646,3.071,647,2.756,648,4.648,649,3.548,650,3.548,651,3.548,652,2.756,653,3.548,654,3.071,655,2.756,656,3.548,657,3.548,658,3.548,659,3.548,660,3.548,661,3.548,662,4.981,663,4.981,664,3.548,665,3.548,666,3.548]],["title/classes/ClientDto.html",[57,0.055,648,2.382]],["body/classes/ClientDto.html",[1,1.731,3,0.204,4,0.183,5,0.162,7,0.315,8,1.171,12,0.743,16,1.774,17,0.644,18,0.016,19,0.743,20,0.204,21,0.012,22,0.012,35,2.107,37,1.02,44,2.785,47,0.376,57,0.092,68,2.234,71,1.125,91,1.833,93,2.733,95,3.252,96,3.225,98,3.618,101,2.111,106,3.019,107,2.604,108,3.032,109,3.188,110,1.833,325,2.794,326,2.22,332,2.733,333,2.011,411,3.032,412,3.032,413,3.032,415,3.032,451,3.939,457,3.939,460,5.1,461,3.939,464,3.939,643,3.36,648,3.618,667,3.939,668,4.55,669,4.55,670,4.55,671,4.55,672,4.55,673,4.55,674,4.55,675,3.536]],["title/modules/ClientModule.html",[112,1.26,236,2.553]],["body/modules/ClientModule.html",[3,0.239,4,0.215,5,0.19,18,0.016,20,0.239,21,0.013,22,0.013,25,2.116,47,0.408,51,0.853,57,0.075,112,2.284,113,4.15,114,2.249,115,2.357,116,2.602,117,2.602,118,2.357,119,3.429,120,2.602,125,3.177,126,2.602,127,2.474,236,5.205,241,4.285,246,4.617,251,4.626,253,4.402,654,4.617,676,4.617,677,4.617,678,5.334,679,4.689,680,5.334,681,5.334,682,4.617]],["title/injectables/ClientRepository.html",[131,0.649,679,2.382]],["body/injectables/ClientRepository.html",[1,1.218,3,0.142,4,0.128,5,0.113,7,0.22,8,0.914,12,0.817,17,0.505,18,0.016,19,0.892,20,0.142,21,0.009,22,0.009,28,1.123,29,1.948,30,1.376,31,1.571,32,1.376,37,0.984,39,1.571,40,1.179,41,1.571,42,1.449,47,0.294,50,1.668,51,0.507,57,0.045,59,1.376,61,1.571,62,1.571,65,1.571,66,1.571,69,0.84,71,0.463,72,0.84,73,0.875,74,1.168,89,0.84,131,0.769,132,1.075,134,2.281,135,3.224,136,2.94,137,3.322,138,2.94,139,2.94,140,1.376,141,1.775,144,2.189,145,1.376,149,2.656,150,2.538,151,2.134,155,2.499,157,2.499,158,3.224,161,2.365,162,1.548,163,1.724,164,1.928,165,1.724,172,3.224,173,1.724,174,2.782,175,3.224,176,2.189,177,2.94,178,1.724,179,2.085,180,2.281,181,1.724,183,1.724,184,1.724,185,1.724,186,0.911,187,1.948,188,1.548,189,1.402,311,1.402,359,2.824,360,2.824,411,2.752,412,2.752,413,2.752,415,2.752,475,4.894,486,3.269,487,3.269,488,3.269,489,3.269,490,3.269,491,3.269,493,3.269,496,4.61,643,3.817,647,3.574,648,4.468,652,3.574,655,2.465,679,2.824,683,2.746,684,3.172,685,3.172,686,3.172,687,3.172,688,4.599,689,3.172,690,3.172,691,5.136,692,4.599,693,4.599,694,3.172,695,3.172,696,3.172,697,3.981,698,3.981,699,3.981,700,3.981,701,3.172,702,3.172]],["title/injectables/ClientService.html",[131,0.649,253,2.236]],["body/injectables/ClientService.html",[1,1.724,3,0.155,4,0.139,5,0.123,7,0.239,9,1.778,10,1.778,11,1.778,12,0.832,13,1.778,14,1.687,15,1.778,17,0.554,18,0.016,19,0.852,20,0.155,21,0.01,22,0.01,28,1.194,29,1.979,30,1.463,31,1.295,32,1.463,37,0.906,39,1.724,40,1.294,41,1.724,42,1.507,44,2.287,47,0.354,49,1.275,50,1.634,51,0.553,52,3.574,57,0.049,59,1.244,61,1.634,62,1.841,65,1.634,66,1.634,69,0.915,70,1.275,71,0.504,72,1.295,73,1.349,78,2.619,89,1.295,131,0.818,132,1.171,134,2.063,140,1.463,141,1.463,144,2.276,145,1.463,151,2.116,164,2.116,176,2.402,186,1.405,191,2.658,195,2.287,198,4.092,201,2.658,202,2.658,204,1.879,205,3.539,206,3.354,210,2.658,212,1.879,213,1.879,214,1.993,215,2.123,216,2.458,217,2.458,218,2.458,219,2.458,220,2.458,221,2.458,253,2.819,311,1.528,411,2.269,412,2.269,413,2.269,415,2.269,522,2.686,525,2.992,527,2.686,533,2.686,534,2.686,535,2.686,538,2.686,539,2.686,643,3.764,647,3.8,648,4.689,652,3.8,655,2.686,675,2.686,679,4.151,682,2.992,697,2.992,698,2.992,699,2.992,700,2.992,703,2.992,704,3.457,705,3.457,706,3.457,707,3.457,708,3.457,709,3.457,710,3.457,711,3.457,712,3.457,713,3.457,714,4.891,715,3.457,716,3.457,717,3.457]],["title/interfaces/Harvesthoney.html",[0,1.314,718,1.495]],["body/interfaces/Harvesthoney.html",[0,1.866,2,2.688,3,0.247,4,0.222,5,0.197,7,0.382,8,1.319,12,0.841,16,1.671,17,0.654,18,0.016,19,1.01,20,0.247,21,0.013,22,0.013,718,2.559,719,4.769,720,4.022,721,3.433,722,3.806,723,4.022,724,4.022,725,3.874]],["title/classes/HarvesthoneyByBeehiveDto.html",[57,0.055,726,2.757]],["body/classes/HarvesthoneyByBeehiveDto.html",[3,0.174,4,0.156,5,0.139,7,0.269,8,1.053,12,0.686,16,1.242,17,0.649,18,0.016,19,0.921,20,0.174,21,0.01,22,0.01,35,2.098,37,1.016,47,0.369,57,0.085,68,2.281,71,1.145,74,1.401,91,1.564,93,2.459,95,3.287,96,3.124,101,1.8,106,2.956,107,3.001,108,3.009,109,2.586,110,1.564,149,1.637,150,1.564,259,2.725,264,2.133,275,3.165,326,2.586,332,1.8,333,1.715,516,2.586,718,2.326,720,3.281,721,2.8,722,3.104,723,3.281,724,3.281,725,3.9,726,3.768,727,3.359,728,3.48,729,3.768,730,3.881,731,3.914,732,2.554,733,2.343,734,3.488,735,3.739,736,3.255,737,3.488,738,3.881,739,2.735,740,3.255,741,3.255,742,3.055,743,3.488,744,3.055,745,2.383,746,3.881,747,3.881,748,3.48,749,3.881,750,2.759,751,3.881,752,3.881,753,3.881,754,2.759,755,3.488,756,2.554,757,3.359,758,2.383,759,3.016]],["title/classes/HarvesthoneyByBeekeeperDto.html",[57,0.055,760,2.757]],["body/classes/HarvesthoneyByBeekeeperDto.html",[3,0.174,4,0.156,5,0.139,7,0.269,8,1.053,12,0.686,16,1.242,17,0.649,18,0.016,19,0.921,20,0.174,21,0.01,22,0.01,35,2.098,37,1.016,47,0.369,57,0.085,68,2.281,71,1.145,74,1.401,91,1.564,93,2.459,95,3.287,96,3.124,101,1.8,106,2.956,107,3.001,108,3.009,109,2.586,110,1.564,149,1.637,150,1.564,259,2.725,326,2.586,332,1.8,333,1.715,363,1.882,422,3.009,516,2.586,576,3.016,718,2.326,720,3.281,721,2.8,722,3.104,723,3.281,724,3.281,725,3.9,728,3.48,729,3.768,731,3.914,732,2.554,733,2.343,734,3.488,735,3.739,736,3.255,737,3.488,739,2.735,740,3.255,741,3.255,742,3.055,743,3.488,744,3.055,745,2.383,748,3.48,750,2.759,754,2.759,755,3.488,756,2.554,758,2.383,759,3.016,760,3.768,761,3.359,762,3.881,763,3.881,764,3.881,765,3.881,766,3.881,767,3.881,768,3.881,769,3.881]],["title/classes/HarvesthoneyByBeeyardDto.html",[57,0.055,770,2.757]],["body/classes/HarvesthoneyByBeeyardDto.html",[3,0.174,4,0.156,5,0.139,7,0.269,8,1.053,12,0.686,16,1.242,17,0.649,18,0.016,19,0.921,20,0.174,21,0.01,22,0.01,35,2.098,37,1.016,47,0.369,57,0.085,68,2.281,71,1.145,74,1.401,91,1.564,93,2.459,95,3.287,96,3.124,101,1.8,106,2.956,107,3.001,108,3.009,109,2.586,110,1.564,149,1.637,150,1.564,259,2.725,267,2.045,324,3.009,326,2.586,332,1.8,333,1.715,334,3.016,516,2.586,718,2.326,720,3.281,721,2.8,722,3.104,723,3.281,724,3.281,725,3.9,728,3.48,729,3.768,731,3.914,732,2.554,733,2.343,734,3.488,735,3.739,736,3.255,737,3.488,739,2.735,740,3.255,741,3.255,742,3.055,743,3.488,744,3.055,745,2.383,748,3.48,750,2.759,754,2.759,755,3.488,756,2.554,758,2.383,759,3.016,770,3.768,771,3.359,772,3.881,773,3.881,774,3.881,775,3.881,776,3.881,777,3.881,778,3.881,779,3.881]],["title/controllers/HarvesthoneyController.html",[23,1.26,780,2.757]],["body/controllers/HarvesthoneyController.html",[3,0.125,4,0.112,5,0.099,7,0.193,12,0.76,16,1.679,17,0.553,18,0.016,19,0.702,20,0.125,21,0.008,22,0.008,23,0.904,25,0.904,27,1.512,28,1.019,29,2.02,31,1.105,33,4.296,34,4.163,35,1.866,37,0.904,39,1.721,40,1.291,41,1.721,42,1.586,45,2.723,47,0.324,48,2.146,49,1.026,50,0.737,51,0.445,54,1.43,57,0.039,58,1.173,59,0.707,60,1.512,61,1.721,62,1.721,65,1.721,66,1.721,67,3.531,68,2.167,69,1.721,70,2.054,71,1.056,72,1.105,73,1.151,74,1.503,76,3.531,78,2.465,80,3.026,82,3.026,83,3.405,84,3.026,86,3.026,89,1.327,140,1.249,141,1.499,145,0.832,151,1.356,161,1.43,164,0.904,179,1.931,180,2.113,186,0.799,189,2.214,195,1.121,259,2.576,272,2.146,273,2.563,276,2.563,278,2.747,280,1.831,281,3.244,283,1.978,284,3.613,293,1.708,296,1.604,299,1.708,300,2.408,301,2.408,303,2.563,304,3.244,305,2.269,306,2.563,308,2.408,309,2.162,310,2.162,311,1.229,312,1.708,317,2.162,318,1.831,319,1.831,436,1.604,718,2.145,733,2.769,780,2.968,781,2.408,782,4.337,783,3.244,784,2.408,785,3.494,786,2.782,787,5.011,788,2.782,789,2.782,790,2.408,791,3.847,792,4.175,793,2.782,794,2.782,795,4.175,796,2.782,797,2.782,798,2.782,799,2.162,800,2.782,801,4.175,802,3.077,803,2.408,804,2.162,805,2.162,806,2.782,807,2.782,808,2.782,809,2.782,810,2.782,811,4.175,812,2.782,813,2.782,814,2.782,815,2.782,816,2.782,817,2.782,818,2.782,819,2.782,820,2.782,821,2.782,822,2.782,823,2.782,824,2.782,825,2.782,826,5.011,827,2.782,828,2.782]],["title/classes/HarvesthoneyDto.html",[57,0.055,785,1.892]],["body/classes/HarvesthoneyDto.html",[3,0.181,4,0.162,5,0.144,7,0.279,8,1.081,12,0.7,16,1.276,17,0.642,18,0.016,19,0.929,20,0.181,21,0.011,22,0.011,35,2.082,37,1.008,47,0.358,57,0.087,68,2.279,71,1.142,74,1.423,91,1.626,93,2.525,95,3.274,96,3.108,101,1.872,106,2.99,107,3.042,108,2.857,109,2.655,110,1.626,149,1.701,150,1.626,259,2.798,326,1.968,332,2.525,333,1.783,516,2.655,718,2.373,720,3.347,721,2.857,722,3.167,723,3.347,724,3.347,725,3.939,728,3.55,729,2.868,731,3.967,732,2.655,733,2.405,734,3.581,735,3.8,736,3.342,737,3.581,739,2.78,740,3.342,741,3.342,742,3.137,743,3.581,744,3.137,745,2.478,748,3.55,750,2.868,754,2.868,755,3.581,756,2.655,758,2.478,785,2.655,829,3.492,830,4.035,831,4.035,832,4.035,833,4.035,834,4.035,835,4.035,836,4.035,837,2.868]],["title/modules/HarvesthoneyModule.html",[112,1.26,237,2.553]],["body/modules/HarvesthoneyModule.html",[3,0.239,4,0.215,5,0.19,18,0.016,20,0.239,21,0.013,22,0.013,25,2.116,47,0.408,51,0.853,57,0.075,112,2.284,114,2.249,115,2.357,116,2.602,117,2.602,118,2.357,119,3.429,120,2.602,125,3.177,126,2.602,127,2.474,237,5.205,238,4.689,241,4.285,780,4.997,802,4.689,803,4.617,838,4.617,839,5.334,840,4.617,841,4.689,842,5.334,843,5.334,844,4.617,845,5.334]],["title/injectables/HarvesthoneyRepository.html",[131,0.649,841,2.382]],["body/injectables/HarvesthoneyRepository.html",[3,0.086,4,0.077,5,0.068,7,0.132,8,0.618,12,0.641,17,0.5,18,0.016,19,0.823,20,0.086,21,0.006,22,0.006,28,0.759,29,1.94,31,1.201,37,0.97,39,1.557,40,1.168,41,1.557,42,1.435,47,0.246,50,1.557,51,0.305,57,0.027,59,1,61,1.557,62,1.321,65,1.557,66,1.557,69,1.417,71,0.661,72,0.506,73,0.527,74,1.155,89,1.042,131,0.52,132,0.647,134,1.659,135,2.464,136,2.138,138,2.138,139,2.138,140,0.931,141,1.601,144,2.168,145,0.931,149,2.563,150,2.449,151,2.03,155,2.907,157,2.464,158,2.907,161,2.9,162,0.932,163,1.038,164,1.91,165,1.038,172,3.195,173,1.69,174,3.023,175,3.195,176,2.168,177,1.69,178,1.69,179,2.408,180,2.635,181,1.038,183,1.038,184,1.038,185,1.69,186,0.893,188,1.919,189,2.004,264,1.89,267,1.536,272,1.599,273,1.91,342,3.405,343,3.405,355,4.157,356,3.523,359,4.5,360,4.5,362,5.233,363,0.97,364,2.211,365,3.803,377,1.654,378,1.654,718,2.735,720,2.464,721,2.103,722,2.331,723,2.464,724,2.464,783,2.417,784,2.692,785,3.12,791,3.463,799,2.417,804,1.485,805,1.485,841,1.91,846,1.654,847,3.934,848,3.934,849,3.934,850,3.111,851,3.111,852,1.911,853,3.111,854,1.911,855,4.32,856,1.911,857,3.111,858,1.911,859,2.692,860,1.911,861,3.405,862,2.211,863,1.911,864,2.796,865,2.692,866,1.911,867,3.405,868,1.911,869,3.111,870,1.911,871,1.911,872,5.409,873,3.924,874,4.534,875,1.911,876,4.63,877,6.524,878,5.647,879,4.63,880,4.63,881,4.63,882,4.63,883,4.63,884,4.63,885,4.63,886,4.63,887,4.63,888,4.63,889,4.63,890,4.63,891,5.35,892,2.364,893,4.63,894,4.63,895,4.63,896,1.911,897,5.409,898,3.924,899,3.924,900,3.924,901,3.924,902,3.924,903,2.692,904,2.692,905,2.692,906,2.692,907,2.692,908,2.692,909,2.692,910,2.692,911,2.692,912,3.924,913,3.924,914,1.911,915,1.911,916,1.911,917,1.911,918,1.911,919,2.692,920,2.692,921,2.692,922,2.692,923,2.692,924,1.911,925,3.111,926,3.111,927,1.654,928,1.911,929,1.911]],["title/injectables/HarvesthoneyService.html",[131,0.649,802,2.382]],["body/injectables/HarvesthoneyService.html",[1,1.128,3,0.096,4,0.087,5,0.077,7,0.149,12,0.858,17,0.522,18,0.016,19,0.849,20,0.096,21,0.007,22,0.007,28,0.835,29,1.946,31,0.906,37,0.854,39,1.626,40,1.407,41,1.626,42,1.445,44,1.956,47,0.366,49,0.793,50,1.567,51,0.344,57,0.03,59,0.87,61,1.567,62,1.753,65,1.567,66,1.567,69,0.569,70,0.793,71,0.896,72,1.128,73,1.175,74,1.555,78,2.523,89,1.494,131,0.572,132,0.728,134,1.442,144,2.183,151,1.995,164,2.107,176,2.265,179,2.174,180,1.442,186,1.621,191,1.859,195,2.273,196,3.194,198,2.798,201,1.859,202,1.859,204,1.168,205,3.338,206,3.216,210,3.439,212,2.315,213,2.315,264,1.505,266,2.455,267,1.443,268,2.455,272,1.759,273,2.1,296,1.971,311,2.494,312,2.1,320,1.859,324,1.587,334,1.671,363,1.066,394,2.658,396,2.658,404,1.859,411,0.997,412,0.997,413,0.997,414,1.239,415,0.997,416,1.239,422,1.587,462,1.415,511,4.117,512,2.658,516,2.753,576,1.671,628,1.671,718,1.318,720,2.638,721,2.252,722,2.496,723,3.216,724,2.638,726,2.431,728,2.798,733,2.926,739,2.234,740,3.771,756,1.415,760,2.431,770,2.431,782,2.961,783,2.658,785,3.336,790,2.961,791,3.771,799,2.658,802,2.1,804,1.671,805,1.671,841,3.465,844,1.861,855,1.861,859,2.961,861,2.961,862,2.431,864,2.431,865,2.961,867,2.961,892,1.512,919,1.861,920,1.861,921,1.861,922,1.861,923,1.861,927,1.861,930,1.861,931,3.42,932,3.42,933,2.15,934,3.411,935,2.15,936,3.42,937,2.15,938,6.486,939,3.42,940,2.15,941,4.854,942,3.42,943,2.15,944,3.42,945,3.42,946,2.15,947,4.854,948,2.15,949,2.15,950,3.42,951,2.15,952,2.15,953,2.15,954,2.15,955,2.15,956,2.15,957,2.15,958,2.15,959,2.15,960,1.671,961,2.15,962,2.15,963,2.15,964,3.42,965,2.15,966,1.671,967,1.528,968,1.861,969,2.15,970,2.15,971,2.15,972,2.15,973,2.15,974,1.861,975,2.15,976,2.15,977,2.15,978,2.15,979,2.15,980,2.15,981,2.15,982,5.643,983,4.259,984,4.259,985,4.259,986,4.259,987,4.259,988,4.259,989,2.15,990,2.15,991,2.15,992,2.15,993,3.42,994,4.259,995,3.687,996,4.259,997,2.455,998,3.309,999,2.455,1000,3.309,1001,2.15,1002,2.15,1003,2.15,1004,2.15,1005,2.15,1006,2.961,1007,3.42,1008,2.15,1009,2.15,1010,2.15,1011,2.15,1012,2.15,1013,2.15,1014,2.15,1015,2.15,1016,2.15,1017,1.861,1018,1.861,1019,2.15]],["title/interfaces/Honeycrop.html",[0,1.314,892,1.714]],["body/interfaces/Honeycrop.html",[0,1.881,2,2.709,3,0.249,4,0.223,5,0.198,7,0.385,8,1.325,12,0.844,16,1.677,17,0.646,18,0.016,19,0.998,20,0.249,21,0.013,22,0.013,40,1.474,47,0.302,264,2.778,892,2.949,997,4.277,999,4.277,1020,4.806,1021,5.552]],["title/controllers/HoneycropController.html",[23,1.26,1022,2.757]],["body/controllers/HoneycropController.html",[3,0.197,4,0.177,5,0.157,7,0.304,12,0.73,16,1.505,17,0.49,18,0.016,20,0.197,21,0.011,22,0.011,23,1.426,25,1.426,27,2.385,28,1.405,29,1.923,30,1.722,31,1.524,32,1.313,33,4.224,34,4.023,35,1.653,36,3.318,37,0.801,39,1.524,40,1.143,41,1.524,42,1.405,45,3.49,47,0.371,48,2.257,49,1.619,50,1.874,51,0.702,54,2.257,57,0.062,58,1.851,59,1.116,60,2.385,61,1.524,62,1.524,65,1.524,66,1.524,67,3.128,68,1.921,69,1.524,70,1.619,71,0.994,72,1.162,73,1.21,74,1.387,76,3.128,77,2.53,78,2.369,80,2.385,82,2.385,83,2.385,84,2.385,86,2.385,89,1.162,189,1.94,733,2.838,739,3.121,892,2.838,934,3.702,1022,4.091,1023,3.799,1024,4.389,1025,3.41,1026,4.389,1027,3.799,1028,3.41,1029,4.389,1030,4.389,1031,5.756,1032,4.389,1033,4.389,1034,4.389]],["title/classes/HoneycropDto.html",[57,0.055,739,1.636]],["body/classes/HoneycropDto.html",[3,0.208,4,0.187,5,0.166,7,0.321,8,1.185,12,0.75,16,1.399,17,0.638,18,0.016,19,0.93,20,0.208,21,0.012,22,0.012,35,2.069,37,1.002,40,1.31,47,0.378,57,0.093,68,2.206,71,1.128,91,1.869,93,2.768,95,3.203,96,3.109,98,2.849,101,2.152,106,3.037,107,3.077,108,2.768,109,2.911,110,1.869,264,2.331,275,3.397,296,3.439,333,2.05,731,3.802,735,3.439,739,2.516,742,3.439,744,3.439,748,3.439,757,4.016,892,2.915,997,3.802,999,3.802,1035,4.016,1036,4.636,1037,4.016,1038,4.639,1039,4.639,1040,4.639,1041,4.639,1042,4.639,1043,4.639,1044,4.016]],["title/modules/HoneycropModule.html",[112,1.26,238,2.382]],["body/modules/HoneycropModule.html",[3,0.242,4,0.217,5,0.192,18,0.016,20,0.242,21,0.013,22,0.013,25,2.128,47,0.399,51,0.861,57,0.076,112,2.293,114,2.27,115,2.38,116,2.627,117,2.627,118,2.38,119,3.443,120,3.443,125,3.195,126,2.627,127,2.498,238,4.836,934,4.606,1022,5.018,1027,4.661,1045,4.661,1046,4.661,1047,4.661,1048,4.7,1049,5.385,1050,5.385,1051,4.661]],["title/injectables/HoneycropRepository.html",[131,0.649,1048,2.382]],["body/injectables/HoneycropRepository.html",[3,0.149,4,0.134,5,0.119,7,0.23,8,0.944,12,0.844,17,0.515,18,0.016,19,0.841,20,0.149,21,0.009,22,0.009,28,1.16,29,1.965,30,1.422,31,1.605,32,1.422,37,0.995,39,1.605,40,1.396,41,1.605,42,1.479,47,0.302,50,1.605,51,0.531,57,0.047,59,1.411,61,1.605,62,1.605,65,1.605,66,1.605,69,1.47,71,0.693,72,0.879,73,0.916,74,1.198,89,0.879,131,0.795,132,1.125,134,2.341,135,3.293,136,3.016,137,3.408,138,3.016,139,3.016,140,1.422,141,1.813,144,2.235,145,1.422,149,2.704,150,2.583,151,2.167,155,2.583,157,2.583,158,3.293,161,3.116,162,1.62,163,1.804,164,1.969,165,1.804,172,3.293,173,1.804,174,3.116,175,3.293,176,2.235,177,1.804,178,1.804,179,2.471,180,2.704,181,1.804,183,1.804,184,1.804,185,1.804,186,0.954,187,2.039,188,1.62,189,2.1,739,3.097,892,3.279,997,3.493,999,3.493,1025,3.693,1028,2.58,1048,2.918,1052,2.874,1053,4.114,1054,3.32,1055,3.32,1056,3.32,1057,3.32,1058,4.753,1059,3.32,1060,3.32,1061,3.32,1062,6.06,1063,3.32,1064,3.32,1065,4.114,1066,4.114,1067,4.114,1068,4.753,1069,3.32]],["title/injectables/HoneycropService.html",[131,0.649,934,2.236]],["body/injectables/HoneycropService.html",[3,0.166,4,0.149,5,0.132,7,0.256,12,0.844,17,0.568,18,0.016,19,0.871,20,0.166,21,0.01,22,0.01,28,1.251,29,2.003,30,1.533,31,1.357,32,1.533,37,0.928,39,1.767,40,1.407,41,1.767,42,1.551,47,0.32,49,1.363,50,1.682,51,0.591,57,0.052,58,1.558,59,0.939,61,1.682,62,1.682,65,1.682,66,1.682,69,0.978,70,1.363,71,0.747,72,1.357,73,1.413,74,0.798,78,2.462,89,1.357,131,0.857,132,1.252,140,1.533,141,1.533,144,2.343,145,1.533,151,2.168,164,2.168,176,2.462,186,1.472,191,2.008,195,2.37,196,4.884,201,2.785,202,3.453,204,2.008,205,3.627,206,3.453,210,2.785,212,2.008,213,2.008,214,2.13,215,2.269,264,1.811,296,2.954,395,2.626,733,3.239,739,3.233,934,2.954,997,2.954,998,2.871,999,2.954,1000,2.871,1025,3.982,1028,2.871,1048,4.24,1051,3.198,1053,4.435,1065,3.198,1066,3.198,1067,3.198,1070,3.198,1071,3.695,1072,3.695,1073,3.695,1074,3.695,1075,3.695,1076,3.695,1077,3.695,1078,3.695,1079,3.695,1080,3.695,1081,3.695,1082,3.695]],["title/interfaces/Product.html",[0,1.314,1083,1.994]],["body/interfaces/Product.html",[0,1.714,2,2.468,3,0.227,4,0.204,5,0.181,7,0.35,8,1.252,12,0.817,17,0.679,18,0.016,19,1.017,20,0.227,21,0.012,22,0.012,47,0.343,718,2.769,721,3.334,725,4.097,785,3.506,1083,3.241,1084,4.379,1085,5.109,1086,5.109,1087,4.729,1088,5.109,1089,5.109,1090,5.109,1091,5.584,1092,3.596,1093,4.379]],["title/controllers/ProductController.html",[23,1.26,1094,2.757]],["body/controllers/ProductController.html",[3,0.114,4,0.103,5,0.091,7,0.176,12,0.825,16,1.701,17,0.553,18,0.016,19,0.724,20,0.114,21,0.008,22,0.008,23,0.828,25,0.828,27,1.385,28,0.954,29,2.021,30,1.169,31,1.034,32,0.762,33,4.323,34,4.163,35,1.868,36,2.251,37,0.905,39,1.722,40,1.292,41,1.722,42,1.588,45,2.581,47,0.289,48,1.31,49,0.94,50,1.937,51,0.407,54,1.31,57,0.036,58,1.075,59,0.648,60,1.385,61,1.722,62,1.722,65,1.722,66,1.722,67,3.535,68,2.15,69,1.722,70,1.752,71,0.973,72,0.675,73,0.703,74,1.361,76,3.535,77,1.469,78,2.554,80,3.12,82,3.12,83,3.291,84,3.12,86,3.12,89,1.52,140,1.169,141,1.717,145,0.762,179,2.212,180,2.421,186,0.732,189,2.537,195,1.027,272,2.008,276,2.916,280,1.677,281,3.035,293,1.565,299,1.565,303,1.565,304,1.98,305,1.385,306,1.565,311,2.677,317,1.98,318,1.677,319,1.677,420,2.398,425,2.206,436,1.469,444,2.206,733,1.126,1083,2.442,1094,2.776,1095,2.206,1096,3.035,1097,3.035,1098,1.98,1099,4.143,1100,2.548,1101,2.548,1102,2.548,1103,2.548,1104,2.548,1105,3.906,1106,2.548,1107,2.548,1108,1.98,1109,3.906,1110,2.548,1111,1.98,1112,2.548,1113,2.916,1114,2.206,1115,1.98,1116,2.548,1117,2.548,1118,3.906,1119,4.899,1120,2.548,1121,2.548,1122,4.749,1123,4.749,1124,2.548,1125,2.548,1126,4.608,1127,2.548,1128,5.324,1129,2.548,1130,2.548,1131,2.548,1132,2.548,1133,2.548,1134,2.548,1135,2.548]],["title/classes/ProductDto.html",[57,0.055,1099,2.236]],["body/classes/ProductDto.html",[3,0.158,4,0.142,5,0.126,7,0.244,8,0.983,12,0.651,17,0.663,18,0.016,19,0.945,20,0.158,21,0.01,22,0.01,35,2.11,37,1.022,47,0.356,57,0.081,68,2.323,71,1.158,74,1.343,91,1.417,93,2.297,95,3.297,96,3.162,101,2.297,106,3.057,107,3.087,108,2.658,110,1.417,259,2.545,326,1.716,332,2.297,333,1.554,718,2.208,721,2.658,725,4.075,731,4.11,732,3.258,733,2.188,734,4.092,735,3.919,736,3.818,737,4.474,741,3.04,742,2.854,744,3.584,745,2.16,748,3.584,755,3.77,758,2.16,785,3.033,837,2.5,966,3.847,1036,3.847,1083,2.946,1085,4.073,1086,4.659,1087,3.77,1088,4.073,1089,4.073,1090,4.073,1091,4.452,1092,2.5,1093,3.044,1099,2.854,1136,3.044,1137,4.951,1138,3.517,1139,3.517,1140,3.517,1141,3.517,1142,3.517,1143,3.517,1144,3.517,1145,3.517,1146,3.517,1147,4.951,1148,4.285,1149,4.951,1150,3.517,1151,3.517,1152,3.517,1153,3.517,1154,3.517]],["title/modules/ProductModule.html",[112,1.26,239,2.553]],["body/modules/ProductModule.html",[3,0.247,4,0.221,5,0.196,18,0.016,20,0.247,21,0.013,22,0.013,25,2.155,47,0.402,51,0.879,57,0.078,112,2.314,114,2.319,115,2.43,116,2.682,117,2.682,118,2.43,119,3.475,120,2.682,125,3.236,126,2.682,127,2.551,239,5.164,1094,5.064,1113,4.723,1114,4.76,1155,4.76,1156,4.76,1157,4.723,1158,5.499,1159,5.499,1160,4.76]],["title/injectables/ProductRepository.html",[131,0.649,1157,2.382]],["body/injectables/ProductRepository.html",[1,1.105,3,0.075,4,0.067,5,0.06,7,0.115,8,0.552,9,2.145,10,2.145,11,2.145,12,0.75,13,2.145,14,2.035,15,2.145,17,0.521,18,0.016,19,0.831,20,0.075,21,0.005,22,0.005,28,0.679,29,1.896,30,0.832,31,1.105,32,0.832,37,0.94,39,1.407,40,1.055,41,1.407,42,1.359,47,0.194,50,1.407,51,0.267,57,0.024,59,0.909,61,1.474,62,1.326,65,1.474,66,1.474,69,1.407,71,0.73,72,0.441,73,0.46,74,1.147,89,1.228,131,0.465,132,0.565,134,1.508,135,2.267,136,1.943,138,1.943,139,1.943,140,0.832,141,1.248,144,2.053,145,0.832,149,2.437,150,2.329,151,1.938,155,3.471,157,1.511,158,2.267,161,2.862,162,0.813,163,0.906,164,1.808,165,0.906,172,2.887,173,0.906,174,2.862,175,3.025,176,2.053,177,0.906,178,0.906,179,2.227,180,2.437,181,0.906,183,0.906,184,0.906,185,0.906,186,0.479,188,2.262,189,2.213,264,1.877,266,1.602,267,1.799,268,1.602,272,1.429,355,2.778,356,2.778,359,4.59,360,4.59,362,4.325,363,1.735,364,3.296,365,4.24,404,1.511,411,1.289,412,1.289,413,1.289,414,1.602,415,1.289,416,1.602,420,2.562,486,1.976,487,1.976,488,1.976,489,1.976,490,1.976,491,1.976,493,2.966,606,1.443,607,1.443,718,2.145,721,1.935,728,1.602,862,1.976,864,2.541,872,4.013,873,3.611,876,3.611,878,4.818,879,3.094,880,3.094,881,3.094,882,3.094,883,3.094,884,3.094,885,3.094,886,3.094,887,3.094,888,4.013,889,4.013,890,4.013,892,2.049,893,4.013,894,4.013,895,4.013,897,4.818,898,3.094,899,3.094,900,3.094,901,3.094,902,1.443,903,3.094,904,3.094,905,3.094,906,3.094,907,3.094,908,3.094,909,3.094,910,4.013,911,3.094,912,4.013,913,4.013,967,2.541,997,1.602,999,1.602,1083,3.659,1085,2.966,1086,2.966,1087,2.745,1088,2.966,1089,2.966,1090,2.966,1096,2.16,1097,2.16,1098,2.16,1099,3.53,1108,2.16,1111,2.16,1115,1.295,1157,1.707,1161,1.443,1162,3.575,1163,3.575,1164,3.575,1165,3.575,1166,4.172,1167,1.667,1168,1.667,1169,1.667,1170,1.667,1171,2.406,1172,1.667,1173,1.667,1174,1.667,1175,1.667,1176,1.667,1177,6.496,1178,5.312,1179,5.312,1180,6.762,1181,1.667,1182,1.667,1183,1.667,1184,3.575,1185,3.575,1186,3.575,1187,3.575,1188,3.575,1189,3.575,1190,3.575,1191,2.78,1192,6.263,1193,2.78,1194,4.172,1195,2.78,1196,4.172,1197,2.78,1198,2.78,1199,2.78,1200,2.78,1201,2.78,1202,2.78,1203,2.78,1204,3.575,1205,1.667,1206,2.78,1207,1.667,1208,1.667,1209,1.667,1210,1.667,1211,2.406,1212,2.406,1213,2.406,1214,2.406,1215,2.406,1216,2.406,1217,2.406,1218,2.406,1219,2.406,1220,1.667,1221,1.667,1222,1.667,1223,1.667,1224,1.667,1225,1.667,1226,1.667,1227,1.667]],["title/injectables/ProductService.html",[131,0.649,1113,2.382]],["body/injectables/ProductService.html",[1,1.202,3,0.086,4,0.077,5,0.068,7,0.133,9,1.603,10,1.603,11,1.603,12,0.854,13,1.603,14,1.521,15,1.603,17,0.565,18,0.016,19,0.861,20,0.086,21,0.006,22,0.006,28,0.761,29,1.99,30,0.933,31,0.825,32,0.933,37,0.89,39,1.656,40,1.372,41,1.656,42,1.527,44,2.013,47,0.34,49,0.707,50,1.611,51,0.306,57,0.027,58,0.808,59,0.487,61,1.558,62,1.729,65,1.558,66,1.558,69,0.507,70,0.707,71,0.279,72,0.825,73,0.86,74,1.455,78,2.674,89,1.558,131,0.521,132,0.649,134,2.481,140,0.933,141,0.933,144,2.307,145,0.933,151,1.977,164,2.218,176,2.244,186,0.895,191,1.041,195,1.588,196,2.051,198,3.605,201,1.694,202,1.694,204,1.041,205,3.307,206,3.198,210,3.479,212,2.716,213,2.911,214,1.104,215,1.914,264,1.393,266,1.797,267,1.335,268,1.797,272,1.603,275,2.438,311,1.742,313,2.422,320,1.694,324,2.318,363,1.228,394,1.489,395,2.216,396,1.489,399,1.658,404,1.694,411,1.446,412,1.446,413,1.446,414,1.797,415,1.446,416,1.797,420,2.788,422,2.485,445,2.698,515,4.162,516,2.613,534,1.489,535,1.489,536,1.658,537,1.658,538,1.489,539,1.489,566,2.422,628,1.489,638,1.658,643,0.985,675,1.489,718,1.926,720,1.041,721,2.106,722,0.985,723,1.041,724,1.041,728,1.797,733,1.378,736,1.914,739,2.107,785,1.923,862,2.216,864,2.216,892,1.742,960,2.422,967,2.216,974,1.658,995,1.658,997,1.797,998,1.489,999,1.797,1000,1.489,1006,2.698,1017,2.698,1018,1.658,1083,1.603,1085,2.801,1086,2.801,1087,2.593,1088,2.801,1089,2.801,1090,2.801,1092,1.362,1096,2.422,1097,2.422,1098,2.422,1099,4.179,1108,2.422,1111,2.422,1113,1.914,1115,1.489,1119,4.86,1126,2.698,1148,3.931,1157,3.289,1160,1.658,1171,2.698,1211,1.658,1212,1.658,1213,1.658,1214,1.658,1215,1.658,1216,1.658,1217,1.658,1218,1.658,1219,1.658,1228,1.658,1229,3.117,1230,3.117,1231,1.916,1232,1.916,1233,1.916,1234,1.916,1235,1.916,1236,5.357,1237,3.117,1238,1.916,1239,1.916,1240,1.916,1241,1.916,1242,5.357,1243,3.117,1244,3.117,1245,3.117,1246,1.916,1247,3.117,1248,4.541,1249,4.541,1250,3.117,1251,3.117,1252,4.541,1253,3.117,1254,3.117,1255,1.916,1256,3.117,1257,3.117,1258,1.916,1259,1.658,1260,1.658,1261,1.658,1262,1.658,1263,3.228,1264,1.916,1265,1.916,1266,1.916,1267,1.916,1268,1.916,1269,3.117,1270,1.916,1271,3.941,1272,1.916,1273,1.916,1274,1.916,1275,3.117,1276,3.117,1277,3.117,1278,3.117,1279,3.117,1280,3.941,1281,3.117,1282,3.117,1283,1.916,1284,1.916,1285,1.916,1286,1.916,1287,1.916,1288,1.916,1289,1.916,1290,4.541,1291,3.117,1292,1.916,1293,1.916,1294,1.916,1295,1.916,1296,3.117,1297,1.916,1298,1.916,1299,1.916,1300,1.916,1301,3.117,1302,1.916,1303,1.916,1304,1.916,1305,1.916,1306,1.916,1307,1.916,1308,1.916,1309,1.916,1310,1.916,1311,1.916,1312,3.117,1313,1.916,1314,1.916,1315,1.916,1316,1.916,1317,1.916,1318,1.916,1319,1.916,1320,1.916,1321,1.916,1322,1.916,1323,1.916,1324,1.916,1325,1.916,1326,1.916,1327,3.117,1328,1.916,1329,1.916]],["title/classes/RelHarvestHoneycropDto.html",[57,0.055,791,2.382]],["body/classes/RelHarvestHoneycropDto.html",[3,0.247,4,0.222,5,0.197,7,0.382,8,1.319,17,0.565,18,0.016,19,0.933,20,0.247,21,0.013,22,0.013,35,1.907,37,0.924,47,0.299,57,0.094,68,1.987,71,1.079,91,2.22,95,3.121,96,2.8,106,3.006,107,3.151,110,2.22,325,4.078,332,3.307,748,3.828,791,4.078,967,5.068,968,6.171,1330,4.769,1331,5.51,1332,5.51]],["title/classes/TrackingDto.html",[57,0.055,1263,2.757]],["body/classes/TrackingDto.html",[3,0.175,4,0.157,5,0.139,7,0.27,8,1.056,17,0.653,18,0.016,20,0.175,21,0.01,22,0.01,35,2.016,37,0.976,47,0.397,57,0.085,68,2.283,71,1.137,74,1.403,91,1.57,95,3.162,96,2.868,106,3.029,110,1.57,259,3.609,264,2.138,267,2.049,275,3.17,296,3.064,324,3.014,325,3.264,326,3.318,332,3.256,333,1.722,363,1.886,422,3.014,516,2.593,718,2.331,731,3.746,733,2.349,735,4.214,739,2.74,740,3.264,741,3.99,742,4.214,743,3.498,744,4.214,745,3.715,758,3.715,785,3.17,837,4.3,892,2.674,1036,5.454,1037,3.373,1044,3.373,1092,2.77,1099,4.14,1119,4.13,1259,3.373,1260,3.373,1261,3.373,1262,3.373,1263,3.779,1333,3.373,1334,3.897,1335,3.897,1336,3.897,1337,3.897,1338,3.897,1339,3.897,1340,3.897]],["title/coverage.html",[1341,4.117]],["body/coverage.html",[0,2.456,1,0.995,5,0.134,6,3.253,17,0.32,18,0.016,21,0.01,22,0.01,23,2.39,24,2.671,26,3.253,44,1.514,52,1.932,57,0.108,92,3.253,118,1.661,124,2.308,131,1.303,133,3.253,151,1.221,162,1.833,190,3.253,222,2.671,223,3.253,226,2.308,251,2.473,253,2.166,260,3.253,264,1.328,265,3.253,267,1.273,270,2.671,271,3.253,275,1.833,289,2.308,322,3.253,324,1.743,337,2.308,341,3.253,363,1.171,379,3.253,410,3.253,418,2.671,419,3.253,422,1.743,430,2.308,449,3.253,468,2.166,473,3.253,507,3.253,540,3.253,542,2.671,543,3.253,554,2.308,570,3.253,581,2.308,585,3.253,608,3.253,643,1.932,644,3.253,646,3.253,648,2.308,667,3.253,679,2.308,683,3.253,703,3.253,718,1.448,719,3.253,726,2.671,727,3.253,739,1.585,760,2.671,761,3.253,770,2.671,771,3.253,780,2.671,781,3.253,785,1.833,791,2.308,802,2.308,829,3.253,841,2.308,846,3.253,892,1.661,930,3.253,934,2.166,960,6.31,1020,3.253,1022,2.671,1023,3.253,1035,3.253,1048,2.308,1052,3.253,1070,3.253,1083,1.932,1084,3.253,1094,2.671,1095,3.253,1099,2.166,1113,2.308,1136,3.253,1157,2.308,1161,3.253,1228,3.253,1263,2.671,1330,3.253,1333,3.253,1341,2.92,1342,3.253,1343,3.758,1344,3.758,1345,5.185,1346,5.936,1347,5.936,1348,5.936,1349,5.936,1350,6.4,1351,6.715,1352,3.758,1353,3.758,1354,3.758,1355,7.249,1356,5.185,1357,5.185,1358,5.185,1359,6.942,1360,5.185,1361,3.758,1362,3.758,1363,4.488,1364,5.185,1365,3.253,1366,5.936,1367,3.253,1368,3.758,1369,3.758,1370,5.185,1371,3.758,1372,3.758,1373,3.758,1374,3.758]],["title/dependencies.html",[115,2.062,1375,2.802]],["body/dependencies.html",[18,0.016,21,0.013,22,0.013,51,0.916,54,2.947,57,0.096,110,2.309,115,2.533,244,4.961,333,2.533,1376,7.25,1377,5.731,1378,5.731,1379,5.731,1380,5.731,1381,5.731,1382,5.731,1383,5.731,1384,5.731,1385,5.731,1386,5.731,1387,5.731,1388,5.731,1389,5.731,1390,6.8,1391,5.731,1392,5.731,1393,5.731,1394,4.961,1395,5.731,1396,5.731,1397,5.731,1398,5.731]],["title/miscellaneous/enumerations.html",[1399,1.988,1400,4.039]],["body/miscellaneous/enumerations.html",[7,0.425,18,0.015,21,0.014,22,0.014,150,2.852,1091,5.5,1399,3.769,1400,5.313,1401,6.139,1402,6.139,1403,7.079,1404,7.079]],["title/miscellaneous/functions.html",[1399,1.988,1405,4.039]],["body/miscellaneous/functions.html",[7,0.432,18,0.014,21,0.014,22,0.014,118,3.317,1367,5.395,1399,3.827,1405,5.395,1406,6.233]],["title/index.html",[7,0.224,188,1.579,1407,2.515]],["body/index.html",[1,1.253,18,0.016,21,0.012,22,0.012,71,0.881,74,1.514,180,1.995,264,1.672,267,1.603,305,2.571,311,2.091,363,1.475,516,2.308,643,2.433,892,2.091,966,3.677,1083,3.107,1341,3.677,1342,5.23,1408,4.732,1409,4.732,1410,4.096,1411,5.762,1412,4.096,1413,4.096,1414,5.23,1415,4.096,1416,3.677,1417,4.096,1418,4.732,1419,6.415,1420,6.043,1421,6.043,1422,4.096,1423,4.732,1424,4.096,1425,4.732,1426,4.732,1427,6.043,1428,4.732,1429,4.096,1430,4.732,1431,4.732,1432,4.732,1433,4.096,1434,4.732,1435,4.732,1436,6.521,1437,4.732,1438,4.732,1439,4.732,1440,4.732,1441,4.732,1442,4.732,1443,4.732,1444,4.732,1445,4.732,1446,4.732,1447,4.732,1448,4.732,1449,4.732,1450,4.732,1451,7.533,1452,4.732,1453,4.732,1454,4.732,1455,4.096,1456,4.732,1457,5.23,1458,4.732,1459,4.732,1460,4.732,1461,4.732,1462,6.043,1463,6.043,1464,4.732,1465,4.732,1466,4.732,1467,4.732,1468,3.677,1469,4.096,1470,4.096]],["title/license.html",[188,1.579,1407,2.515,1471,2.515]],["body/license.html",[0,0.493,1,0.385,2,0.71,4,0.259,5,0.089,14,1.209,17,0.211,18,0.011,19,0.408,21,0.005,22,0.005,40,0.289,48,0.748,114,0.614,127,0.675,151,1.516,174,1.274,259,0.748,485,2.516,691,4.541,722,0.748,725,0.791,837,3.73,1087,0.957,1394,1.259,1407,1.131,1416,2.516,1419,5.055,1424,1.259,1429,2.145,1433,1.259,1436,1.259,1455,1.259,1457,1.259,1468,1.926,1471,5.887,1472,4.541,1473,6.35,1474,6.447,1475,5.3,1476,4.982,1477,1.455,1478,2.479,1479,6.243,1480,2.479,1481,7.147,1482,7.361,1483,5.473,1484,3.238,1485,2.479,1486,2.479,1487,2.479,1488,2.479,1489,2.479,1490,2.479,1491,2.479,1492,2.479,1493,1.455,1494,3.238,1495,3.824,1496,6.615,1497,6.688,1498,3.238,1499,5.247,1500,1.455,1501,1.455,1502,2.479,1503,1.455,1504,3.824,1505,2.479,1506,1.455,1507,1.455,1508,3.824,1509,2.479,1510,4.289,1511,1.455,1512,3.824,1513,1.455,1514,5.473,1515,3.238,1516,2.479,1517,3.238,1518,1.455,1519,7.821,1520,3.238,1521,2.479,1522,1.455,1523,1.455,1524,3.238,1525,2.479,1526,2.479,1527,4.668,1528,4.668,1529,1.455,1530,1.455,1531,4.289,1532,1.455,1533,3.238,1534,3.824,1535,6.447,1536,4.289,1537,5.473,1538,1.455,1539,1.455,1540,2.479,1541,5.84,1542,2.479,1543,3.238,1544,1.455,1545,1.455,1546,1.455,1547,2.479,1548,1.455,1549,1.455,1550,3.824,1551,1.455,1552,5.473,1553,5.99,1554,3.238,1555,1.455,1556,3.238,1557,3.238,1558,3.824,1559,5.247,1560,6.615,1561,2.479,1562,1.455,1563,4.668,1564,4.289,1565,1.455,1566,1.455,1567,3.238,1568,4.982,1569,1.455,1570,2.479,1571,1.455,1572,1.455,1573,6.124,1574,3.824,1575,1.455,1576,1.455,1577,3.824,1578,2.479,1579,1.455,1580,1.455,1581,1.455,1582,1.455,1583,1.455,1584,1.455,1585,3.238,1586,1.455,1587,1.455,1588,1.455,1589,1.455,1590,1.455,1591,4.289,1592,1.455,1593,2.479,1594,3.238,1595,1.455,1596,3.824,1597,2.479,1598,3.824,1599,1.455,1600,1.455,1601,6.124,1602,3.824,1603,6.447,1604,3.824,1605,1.455,1606,6.979,1607,3.238,1608,4.668,1609,1.455,1610,3.824,1611,2.479,1612,4.982,1613,6.688,1614,1.455,1615,1.455,1616,5.99,1617,3.238,1618,3.238,1619,3.824,1620,1.455,1621,3.238,1622,3.238,1623,1.455,1624,2.479,1625,1.455,1626,1.455,1627,1.455,1628,1.455,1629,3.824,1630,3.238,1631,1.455,1632,2.479,1633,1.455,1634,1.455,1635,1.455,1636,2.479,1637,2.479,1638,3.238,1639,2.479,1640,2.479,1641,1.455,1642,1.455,1643,2.479,1644,1.455,1645,1.455,1646,1.455,1647,3.824,1648,3.824,1649,1.455,1650,1.455,1651,3.238,1652,3.238,1653,2.479,1654,1.455,1655,1.455,1656,3.238,1657,1.455,1658,1.455,1659,3.238,1660,1.455,1661,1.455,1662,3.238,1663,1.455,1664,3.824,1665,1.455,1666,5.473,1667,4.289,1668,1.455,1669,3.238,1670,3.238,1671,1.455,1672,1.455,1673,1.455,1674,1.455,1675,4.982,1676,3.824,1677,2.479,1678,1.455,1679,4.289,1680,4.982,1681,3.238,1682,1.455,1683,3.238,1684,1.455,1685,3.824,1686,1.455,1687,3.238,1688,3.238,1689,1.455,1690,2.479,1691,3.824,1692,2.479,1693,4.668,1694,1.455,1695,1.259,1696,1.455,1697,2.479,1698,2.479,1699,3.238,1700,1.455,1701,1.455,1702,1.455,1703,4.668,1704,1.455,1705,1.455,1706,2.479,1707,4.289,1708,1.455,1709,3.238,1710,2.479,1711,1.455,1712,1.455,1713,1.455,1714,2.479,1715,1.455,1716,1.455,1717,2.479,1718,1.455,1719,2.479,1720,3.824,1721,2.479,1722,2.479,1723,2.479,1724,2.479,1725,1.455,1726,1.455,1727,1.455,1728,1.455,1729,1.455,1730,1.455,1731,3.309,1732,4.982,1733,3.824,1734,1.455,1735,3.238,1736,3.238,1737,3.238,1738,3.238,1739,2.479,1740,2.479,1741,2.479,1742,3.238,1743,2.479,1744,1.455,1745,1.455,1746,1.455,1747,3.238,1748,3.238,1749,2.479,1750,1.455,1751,1.455,1752,2.479,1753,3.824,1754,1.455,1755,1.455,1756,1.455,1757,1.455,1758,1.455,1759,1.455,1760,1.455,1761,1.455,1762,1.455,1763,1.455,1764,2.479,1765,1.455,1766,1.455,1767,1.455,1768,1.455,1769,1.455,1770,1.455,1771,1.455,1772,1.455,1773,4.289,1774,1.455,1775,2.479,1776,1.455,1777,1.455,1778,2.479,1779,2.479,1780,1.455,1781,2.479,1782,1.455,1783,1.455,1784,3.824,1785,1.455,1786,1.455,1787,2.479,1788,2.479,1789,1.455,1790,1.455,1791,3.238,1792,1.455,1793,2.479,1794,1.455,1795,1.455,1796,1.455,1797,1.455,1798,2.479,1799,2.479,1800,2.479,1801,1.455,1802,1.455,1803,1.455,1804,1.455,1805,1.455,1806,1.455,1807,2.479,1808,2.479,1809,1.455,1810,1.455,1811,3.238,1812,1.455,1813,1.455,1814,1.455,1815,1.455,1816,2.479,1817,1.455,1818,1.455,1819,1.455,1820,1.455,1821,1.455,1822,3.238,1823,2.479,1824,1.455,1825,1.455,1826,1.455,1827,1.455,1828,3.238,1829,1.455,1830,1.455,1831,1.455,1832,1.455,1833,1.455,1834,2.479,1835,1.455,1836,2.479,1837,1.455,1838,3.238,1839,1.455,1840,1.455,1841,1.455,1842,1.455,1843,3.238,1844,1.455,1845,1.455,1846,1.455,1847,1.455,1848,1.455,1849,3.238,1850,1.455,1851,1.455,1852,1.455,1853,3.824,1854,1.455,1855,1.455,1856,1.455,1857,2.479,1858,1.455,1859,1.455,1860,1.455,1861,1.455,1862,1.455,1863,1.455,1864,1.455,1865,1.455,1866,1.455,1867,1.455,1868,1.455,1869,1.455,1870,1.455,1871,1.455,1872,1.455,1873,1.455,1874,1.455,1875,1.455,1876,1.455,1877,1.455,1878,1.455,1879,1.455,1880,1.455,1881,3.238,1882,2.479,1883,1.455,1884,2.479,1885,1.455,1886,1.455,1887,1.455,1888,1.455,1889,1.455,1890,1.455,1891,1.455,1892,2.479,1893,1.455,1894,1.455,1895,1.455,1896,1.455,1897,1.455,1898,1.455,1899,1.455,1900,1.455,1901,1.455,1902,3.238,1903,3.238,1904,1.455,1905,1.455,1906,1.455,1907,2.479,1908,1.455,1909,3.238,1910,1.455,1911,1.455,1912,1.455,1913,1.455,1914,1.455,1915,1.455,1916,1.455,1917,1.455,1918,1.455,1919,1.455,1920,1.455,1921,1.455,1922,1.455,1923,2.479,1924,1.455,1925,2.479,1926,1.455,1927,1.455,1928,1.455,1929,3.238,1930,1.455,1931,2.479,1932,2.479,1933,1.455,1934,1.455,1935,1.455,1936,1.455,1937,1.455,1938,1.455,1939,2.479,1940,1.455,1941,1.455,1942,1.455,1943,1.455,1944,1.455,1945,1.455,1946,3.238,1947,1.455,1948,1.455,1949,1.455,1950,1.455,1951,1.455,1952,1.455,1953,1.455,1954,1.455,1955,1.455,1956,1.455,1957,1.455,1958,1.455,1959,1.455,1960,1.455,1961,1.455,1962,1.455,1963,1.455,1964,1.455,1965,1.455,1966,1.455,1967,2.479,1968,1.455,1969,1.455,1970,1.455,1971,1.455,1972,1.455,1973,1.455,1974,1.455,1975,1.455,1976,2.479,1977,1.455,1978,2.479,1979,1.455,1980,1.455,1981,1.455,1982,1.455,1983,1.455,1984,1.455,1985,1.455,1986,3.238,1987,1.455,1988,1.455,1989,1.455,1990,1.455,1991,3.238,1992,1.455,1993,1.455,1994,1.455,1995,1.455,1996,1.455,1997,1.455,1998,1.455,1999,1.455,2000,1.455,2001,1.455,2002,1.455,2003,1.455,2004,1.455,2005,1.455,2006,1.455,2007,1.455,2008,1.455,2009,1.455,2010,1.455,2011,1.455,2012,1.455,2013,1.455,2014,1.455,2015,1.455,2016,1.455,2017,1.455,2018,1.455,2019,1.455,2020,1.455,2021,1.455,2022,1.455,2023,1.455,2024,1.455,2025,1.455,2026,1.455,2027,1.455,2028,2.479,2029,1.455,2030,1.455,2031,1.455]],["title/modules.html",[114,2.234]],["body/modules.html",[18,0.013,21,0.013,22,0.013,113,3.127,114,2.426,229,4.09,233,3.786,234,3.786,235,3.786,236,3.786,237,3.786,238,3.533,239,3.786,2032,7.958,2033,7.958,2034,7.958,2035,7.958]],["title/overview.html",[2036,4.587]],["body/overview.html",[2,2.068,18,0.016,21,0.011,22,0.011,25,1.377,52,3.774,91,1.708,112,1.377,113,4.173,114,1.787,115,1.873,116,2.068,117,2.068,118,1.873,119,2.068,120,2.068,121,3.669,122,3.669,123,3.669,124,3.877,125,2.744,126,2.068,127,1.966,132,1.436,226,3.877,229,5.666,230,3.669,231,3.669,232,3.669,233,4.829,234,4.964,235,4.964,236,4.964,237,4.964,238,4.632,239,4.829,253,3.639,289,3.877,335,3.669,336,3.669,337,3.877,430,3.877,465,3.669,467,3.669,468,3.639,554,3.877,578,3.669,580,3.669,581,3.877,676,3.669,677,3.669,679,3.877,802,3.877,838,3.669,840,3.669,841,3.877,934,4.23,1045,3.669,1046,3.669,1047,3.669,1048,3.877,1113,3.877,1155,3.669,1156,3.669,1157,3.877,2036,3.669,2037,5.625,2038,4.239,2039,4.239,2040,4.239]],["title/properties.html",[8,0.927,1375,2.802]],["body/properties.html",[8,1.201,18,0.015,21,0.014,22,0.014,1083,3.109,1410,5.234,1411,5.234,1412,5.234,1413,5.234,1414,5.234,1415,5.234,1416,4.699,1417,5.234,1468,4.699,1469,5.234,1470,5.234,1471,4.699,1472,5.234,1475,5.234,2041,6.047,2042,6.047]],["title/miscellaneous/variables.html",[1399,1.988,2043,4.039]],["body/miscellaneous/variables.html",[7,0.414,17,0.508,18,0.016,21,0.014,22,0.014,149,2.937,150,2.806,162,3.398,1363,5.168,1365,6.029,1399,3.667,1422,5.168,1695,5.168,1731,5.168,2043,5.168,2044,6.966,2045,5.971,2046,5.971,2047,5.971,2048,5.971,2049,5.971]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"interfaces/Address.html":{},"controllers/AddressController.html":{},"classes/AddressDto.html":{},"modules/AddressModule.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"modules/BeehiveModule.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"modules/BeekeeperModule.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"modules/BeeyardModule.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"interfaces/Client.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"modules/ClientModule.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"modules/HarvesthoneyModule.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"modules/HoneycropModule.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":960,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2041,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":1387,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1396,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1386,"title":{},"body":{"dependencies.html":{}}}],["0.7.0",{"_index":1391,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1366,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1347,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1370,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1356,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1352,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1360,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1345,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1346,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1369,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1355,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1351,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1350,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1359,"title":{},"body":{"coverage.html":{}}}],["02110",{"_index":1491,"title":{},"body":{"license.html":{}}}],["1",{"_index":1563,"title":{},"body":{"license.html":{}}}],["10.0.0",{"_index":1376,"title":{},"body":{"dependencies.html":{}}}],["10.0.3",{"_index":1382,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":1380,"title":{},"body":{"dependencies.html":{}}}],["10/12",{"_index":1372,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":2039,"title":{},"body":{"overview.html":{}}}],["1301",{"_index":1492,"title":{},"body":{"license.html":{}}}],["17",{"_index":2038,"title":{},"body":{"overview.html":{}}}],["1989",{"_index":1480,"title":{},"body":{"license.html":{}}}],["1991",{"_index":1478,"title":{},"body":{"license.html":{}}}],["2",{"_index":1476,"title":{},"body":{"license.html":{}}}],["3.10.3",{"_index":1389,"title":{},"body":{"dependencies.html":{}}}],["3.2.3",{"_index":1377,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1393,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":1349,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":1354,"title":{},"body":{"coverage.html":{}}}],["5.1.1",{"_index":1385,"title":{},"body":{"dependencies.html":{}}}],["5/7",{"_index":1358,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1353,"title":{},"body":{"coverage.html":{}}}],["51",{"_index":1485,"title":{},"body":{"license.html":{}}}],["66",{"_index":1348,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":1987,"title":{},"body":{"license.html":{}}}],["7.8.1",{"_index":1398,"title":{},"body":{"dependencies.html":{}}}],["7/9",{"_index":1362,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":1357,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":1361,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2040,"title":{},"body":{"overview.html":{}}}],["83",{"_index":1371,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2037,"title":{},"body":{"overview.html":{}}}],["a.additional_address",{"_index":487,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/ProductRepository.html":{}}}],["a.city",{"_index":489,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/ProductRepository.html":{}}}],["a.country",{"_index":491,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/ProductRepository.html":{}}}],["a.id",{"_index":493,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/ProductRepository.html":{}}}],["a.state",{"_index":490,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/ProductRepository.html":{}}}],["a.street",{"_index":486,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/ProductRepository.html":{}}}],["a.zipcode",{"_index":488,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/ProductRepository.html":{}}}],["ab",{"_index":1203,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["ab.additional_address",{"_index":1198,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["ab.city",{"_index":1200,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["ab.country",{"_index":1202,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["ab.id",{"_index":1196,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["ab.state",{"_index":1201,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["ab.street",{"_index":1197,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["ab.zipcode",{"_index":1199,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["above",{"_index":1667,"title":{},"body":{"license.html":{}}}],["above.)the",{"_index":1758,"title":{},"body":{"license.html":{}}}],["absence",{"_index":1658,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":1990,"title":{},"body":{"license.html":{}}}],["accept",{"_index":1800,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":1810,"title":{},"body":{"license.html":{}}}],["access",{"_index":1779,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":1777,"title":{},"body":{"license.html":{}}}],["accompany",{"_index":1736,"title":{},"body":{"license.html":{}}}],["accord",{"_index":1756,"title":{},"body":{"license.html":{}}}],["achieve",{"_index":1966,"title":{},"body":{"license.html":{}}}],["act",{"_index":1637,"title":{},"body":{"license.html":{}}}],["actions",{"_index":1804,"title":{},"body":{"license.html":{}}}],["activities",{"_index":1634,"title":{},"body":{"license.html":{}}}],["add",{"_index":1884,"title":{},"body":{"license.html":{}}}],["addition",{"_index":1726,"title":{},"body":{"license.html":{}}}],["additional_address",{"_index":9,"title":{},"body":{"interfaces/Address.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["address",{"_index":1,"title":{"interfaces/Address.html":{}},"body":{"interfaces/Address.html":{},"controllers/AddressController.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"interfaces/Client.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"coverage.html":{},"index.html":{},"license.html":{}}}],["address.controller",{"_index":129,"title":{},"body":{"modules/AddressModule.html":{}}}],["address.id",{"_index":525,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/ClientService.html":{}}}],["address.repository",{"_index":130,"title":{},"body":{"modules/AddressModule.html":{},"injectables/AddressService.html":{}}}],["address.service",{"_index":53,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{}}}],["address/address.module",{"_index":472,"title":{},"body":{"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{}}}],["address/address.service",{"_index":521,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{}}}],["address/dto/address.dto",{"_index":462,"title":{},"body":{"classes/BeekeeperDto.html":{},"injectables/BeekeeperService.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardService.html":{},"injectables/HarvesthoneyService.html":{}}}],["address/interfaces/address.interface",{"_index":417,"title":{},"body":{"interfaces/Beekeeper.html":{},"interfaces/Beeyard.html":{}}}],["address_beekeeper",{"_index":1195,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["address_beeyard",{"_index":1193,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["address_id",{"_index":1194,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["addresscontroller",{"_index":24,"title":{"controllers/AddressController.html":{}},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"coverage.html":{}}}],["addressdelete",{"_index":208,"title":{},"body":{"injectables/AddressService.html":{}}}],["addressdto",{"_index":44,"title":{"classes/AddressDto.html":{}},"body":{"controllers/AddressController.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperService.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardService.html":{},"classes/ClientDto.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["addressdto.additional_address",{"_index":167,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["addressdto.city",{"_index":169,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["addressdto.country",{"_index":171,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["addressdto.id",{"_index":182,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeeyardService.html":{}}}],["addressdto.state",{"_index":170,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["addressdto.street",{"_index":166,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["addressdto.zipcode",{"_index":168,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["addressed",{"_index":1633,"title":{},"body":{"license.html":{}}}],["addressid",{"_index":79,"title":{},"body":{"controllers/AddressController.html":{}}}],["addressmodule",{"_index":113,"title":{"modules/AddressModule.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules.html":{},"overview.html":{}}}],["addressrepository",{"_index":124,"title":{"injectables/AddressRepository.html":{}},"body":{"modules/AddressModule.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"coverage.html":{},"overview.html":{}}}],["addressservice",{"_index":52,"title":{"injectables/AddressService.html":{}},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"coverage.html":{},"overview.html":{}}}],["adresse",{"_index":85,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{}}}],["adresses",{"_index":615,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["advised",{"_index":1959,"title":{},"body":{"license.html":{}}}],["aggregation",{"_index":1728,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1944,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1831,"title":{},"body":{"license.html":{}}}],["allegation",{"_index":1825,"title":{},"body":{"license.html":{}}}],["allowed",{"_index":1502,"title":{},"body":{"license.html":{}}}],["along",{"_index":1659,"title":{},"body":{"license.html":{}}}],["alter",{"_index":2010,"title":{},"body":{"license.html":{}}}],["alternative",{"_index":1754,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1568,"title":{},"body":{"license.html":{}}}],["announcement",{"_index":1690,"title":{},"body":{"license.html":{}}}],["announcement.)these",{"_index":1700,"title":{},"body":{"license.html":{}}}],["another",{"_index":1624,"title":{},"body":{"license.html":{}}}],["any).insertid",{"_index":204,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["anyone",{"_index":1545,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1766,"title":{},"body":{"license.html":{}}}],["api",{"_index":1420,"title":{},"body":{"index.html":{}}}],["api'c",{"_index":1409,"title":{},"body":{"index.html":{}}}],["apiculteur",{"_index":320,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{}}}],["apiculteurs",{"_index":448,"title":{},"body":{"controllers/BeekeeperController.html":{},"injectables/BeekeeperService.html":{}}}],["app",{"_index":1453,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":242,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":227,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":222,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicable",{"_index":1923,"title":{},"body":{"license.html":{}}}],["application",{"_index":1872,"title":{},"body":{"license.html":{}}}],["applications",{"_index":2031,"title":{},"body":{"license.html":{}}}],["applies",{"_index":1517,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1527,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":229,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appropriate",{"_index":1652,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":1650,"title":{},"body":{"license.html":{}}}],["appservice",{"_index":226,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["april",{"_index":2021,"title":{},"body":{"license.html":{}}}],["arising",{"_index":1949,"title":{},"body":{"license.html":{}}}],["ask",{"_index":1547,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1760,"title":{},"body":{"license.html":{}}}],["association",{"_index":944,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["associée",{"_index":613,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["assume",{"_index":1938,"title":{},"body":{"license.html":{}}}],["async",{"_index":29,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["attach",{"_index":1967,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":1790,"title":{},"body":{"license.html":{}}}],["au",{"_index":945,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["author",{"_index":1468,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["author's",{"_index":1569,"title":{},"body":{"license.html":{}}}],["author/donor",{"_index":1874,"title":{},"body":{"license.html":{}}}],["authors",{"_index":1521,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":1793,"title":{},"body":{"license.html":{}}}],["avec",{"_index":305,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/ProductController.html":{},"index.html":{}}}],["avoid",{"_index":1586,"title":{},"body":{"license.html":{}}}],["await",{"_index":62,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["away",{"_index":1507,"title":{},"body":{"license.html":{}}}],["b",{"_index":485,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"license.html":{}}}],["b.id",{"_index":494,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{}}}],["b.id_address",{"_index":492,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{}}}],["badrequestexception",{"_index":161,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["badrequestexception(`données",{"_index":812,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["badrequestexception(`erreur",{"_index":177,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["balance",{"_index":1851,"title":{},"body":{"license.html":{}}}],["base",{"_index":1427,"title":{},"body":{"index.html":{}}}],["based",{"_index":1616,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":1384,"title":{},"body":{"dependencies.html":{}}}],["be.bee_type",{"_index":886,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["be.environment",{"_index":354,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["be.id",{"_index":362,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["be.id_address",{"_index":358,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/BeeyardRepository.html":{}}}],["be.id_beekeeper",{"_index":357,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/BeeyardRepository.html":{}}}],["be.id_beeyard",{"_index":888,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["be.name",{"_index":355,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["be.type_hive",{"_index":887,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bee",{"_index":1408,"title":{},"body":{"index.html":{}}}],["bee_type",{"_index":266,"title":{},"body":{"interfaces/Beehive.html":{},"classes/BeehiveDto.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["beehive",{"_index":264,"title":{"interfaces/Beehive.html":{}},"body":{"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"coverage.html":{},"index.html":{}}}],["beehive.bee_type",{"_index":401,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["beehive.beeyard_name",{"_index":406,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["beehive.controller",{"_index":339,"title":{},"body":{"modules/BeehiveModule.html":{}}}],["beehive.environment",{"_index":405,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["beehive.id",{"_index":400,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["beehive.id_address",{"_index":407,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["beehive.id_beeyard",{"_index":409,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["beehive.name",{"_index":402,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["beehive.repository",{"_index":340,"title":{},"body":{"modules/BeehiveModule.html":{},"injectables/BeehiveService.html":{}}}],["beehive.service",{"_index":290,"title":{},"body":{"controllers/BeehiveController.html":{},"modules/BeehiveModule.html":{}}}],["beehive.type_hive",{"_index":403,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["beehive/dto/beehive.dto",{"_index":757,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HoneycropDto.html":{}}}],["beehive/interfaces/beehive.interface",{"_index":1021,"title":{},"body":{"interfaces/Honeycrop.html":{}}}],["beehive_id",{"_index":884,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["beehive_name",{"_index":885,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["beehivecontroller",{"_index":270,"title":{"controllers/BeehiveController.html":{}},"body":{"controllers/BeehiveController.html":{},"modules/BeehiveModule.html":{},"coverage.html":{}}}],["beehivedto",{"_index":275,"title":{"classes/BeehiveDto.html":{}},"body":{"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HoneycropDto.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"coverage.html":{}}}],["beehivedto.bee_type",{"_index":372,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{}}}],["beehivedto.beeyard",{"_index":390,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["beehivedto.beeyard.id",{"_index":375,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["beehivedto.id",{"_index":376,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["beehivedto.name",{"_index":373,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{}}}],["beehivedto.type_hive",{"_index":374,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{}}}],["beehiveid",{"_index":300,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/HarvesthoneyController.html":{}}}],["beehivemodule",{"_index":233,"title":{"modules/BeehiveModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BeehiveModule.html":{},"modules.html":{},"overview.html":{}}}],["beehiverepository",{"_index":337,"title":{"injectables/BeehiveRepository.html":{}},"body":{"modules/BeehiveModule.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"coverage.html":{},"overview.html":{}}}],["beehives",{"_index":313,"title":{},"body":{"controllers/BeehiveController.html":{},"injectables/BeehiveService.html":{},"injectables/ProductService.html":{}}}],["beehives.find((el",{"_index":1295,"title":{},"body":{"injectables/ProductService.html":{}}}],["beehives.push",{"_index":399,"title":{},"body":{"injectables/BeehiveService.html":{},"injectables/ProductService.html":{}}}],["beehiveservice",{"_index":289,"title":{"injectables/BeehiveService.html":{}},"body":{"controllers/BeehiveController.html":{},"modules/BeehiveModule.html":{},"injectables/BeehiveService.html":{},"coverage.html":{},"overview.html":{}}}],["beekeeper",{"_index":363,"title":{"interfaces/Beekeeper.html":{}},"body":{"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"coverage.html":{},"index.html":{}}}],["beekeeper.controller",{"_index":470,"title":{},"body":{"modules/BeekeeperModule.html":{}}}],["beekeeper.repository",{"_index":471,"title":{},"body":{"modules/BeekeeperModule.html":{},"injectables/BeekeeperService.html":{}}}],["beekeeper.service",{"_index":431,"title":{},"body":{"controllers/BeekeeperController.html":{},"modules/BeekeeperModule.html":{}}}],["beekeeper/beekeeper.repository",{"_index":599,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["beekeeper/dto/beekeeper.dto",{"_index":576,"title":{},"body":{"classes/BeeyardDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"injectables/HarvesthoneyService.html":{}}}],["beekeeper/interfaces/beekeeper.interface",{"_index":541,"title":{},"body":{"interfaces/Beeyard.html":{}}}],["beekeeper_address",{"_index":911,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["beekeeper_id",{"_index":903,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["beekeepercontroller",{"_index":418,"title":{"controllers/BeekeeperController.html":{}},"body":{"controllers/BeekeeperController.html":{},"modules/BeekeeperModule.html":{},"coverage.html":{}}}],["beekeeperdelete",{"_index":528,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["beekeeperdto",{"_index":422,"title":{"classes/BeekeeperDto.html":{}},"body":{"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"classes/BeeyardDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"coverage.html":{}}}],["beekeeperdto.address",{"_index":523,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["beekeeperdto.email",{"_index":503,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{}}}],["beekeeperdto.firstname",{"_index":499,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{}}}],["beekeeperdto.id",{"_index":505,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["beekeeperdto.lastname",{"_index":500,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{}}}],["beekeeperdto.napi",{"_index":502,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{}}}],["beekeeperdto.phone",{"_index":504,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{}}}],["beekeeperdto.siret",{"_index":501,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{}}}],["beekeeperid",{"_index":318,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/ProductController.html":{}}}],["beekeepermodule",{"_index":234,"title":{"modules/BeekeeperModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BeekeeperModule.html":{},"modules.html":{},"overview.html":{}}}],["beekeeperrepository",{"_index":468,"title":{"injectables/BeekeeperRepository.html":{}},"body":{"modules/BeekeeperModule.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardRepository.html":{},"coverage.html":{},"overview.html":{}}}],["beekeepers",{"_index":445,"title":{},"body":{"controllers/BeekeeperController.html":{},"injectables/ProductService.html":{}}}],["beekeepers.find((el",{"_index":1311,"title":{},"body":{"injectables/ProductService.html":{}}}],["beekeepers.push",{"_index":1313,"title":{},"body":{"injectables/ProductService.html":{}}}],["beekeeperservice",{"_index":430,"title":{"injectables/BeekeeperService.html":{}},"body":{"controllers/BeekeeperController.html":{},"modules/BeekeeperModule.html":{},"injectables/BeekeeperService.html":{},"coverage.html":{},"overview.html":{}}}],["beekeeperupdated",{"_index":437,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["beekeeping",{"_index":1425,"title":{},"body":{"index.html":{}}}],["beekeeping/address/address.module",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{}}}],["beekeeping/address/address.service",{"_index":710,"title":{},"body":{"injectables/ClientService.html":{}}}],["beekeeping/address/dto/address.dto",{"_index":675,"title":{},"body":{"classes/ClientDto.html":{},"injectables/ClientService.html":{},"injectables/ProductService.html":{}}}],["beekeeping/address/interfaces/address.interface",{"_index":645,"title":{},"body":{"interfaces/Client.html":{}}}],["beekeeping/beehive/beehive.module",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["beekeeping/beehive/dto/beehive.dto",{"_index":1261,"title":{},"body":{"injectables/ProductService.html":{},"classes/TrackingDto.html":{}}}],["beekeeping/beekeeper/beekeeper.module",{"_index":245,"title":{},"body":{"modules/AppModule.html":{}}}],["beekeeping/beekeeper/dto/beekeeper.dto",{"_index":1262,"title":{},"body":{"injectables/ProductService.html":{},"classes/TrackingDto.html":{}}}],["beekeeping/beeyard/beeyard.module",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["beekeeping/beeyard/dto/beeyard.dto",{"_index":1259,"title":{},"body":{"injectables/ProductService.html":{},"classes/TrackingDto.html":{}}}],["beekeeping/honey/harvesthoney/dto/harvesthoney.dto",{"_index":1092,"title":{},"body":{"interfaces/Product.html":{},"classes/ProductDto.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{}}}],["beekeeping/honey/harvesthoney/harvesthoney.module",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["beekeeping/honey/honeycrop/dto/honeycrop.dto",{"_index":1260,"title":{},"body":{"injectables/ProductService.html":{},"classes/TrackingDto.html":{}}}],["beekeeping/honey/honeycrop/honeycrop.module",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["beeyard",{"_index":267,"title":{"interfaces/Beeyard.html":{}},"body":{"interfaces/Beehive.html":{},"classes/BeehiveDto.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"coverage.html":{},"index.html":{}}}],["beeyard.additional_address",{"_index":633,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyard.city",{"_index":635,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyard.controller",{"_index":584,"title":{},"body":{"modules/BeeyardModule.html":{}}}],["beeyard.country",{"_index":637,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyard.environment",{"_index":640,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyard.id",{"_index":639,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyard.id_address",{"_index":631,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyard.id_beekeeper",{"_index":642,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyard.name",{"_index":641,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyard.repository",{"_index":583,"title":{},"body":{"modules/BeeyardModule.html":{},"injectables/BeeyardService.html":{}}}],["beeyard.service",{"_index":555,"title":{},"body":{"controllers/BeeyardController.html":{},"modules/BeeyardModule.html":{}}}],["beeyard.state",{"_index":636,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyard.street",{"_index":632,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyard.zipcode",{"_index":634,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyard/dto/beeyard.dto",{"_index":334,"title":{},"body":{"classes/BeehiveDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"injectables/HarvesthoneyService.html":{}}}],["beeyard/interfaces/beeyard.interface",{"_index":269,"title":{},"body":{"interfaces/Beehive.html":{}}}],["beeyard_address",{"_index":902,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["beeyard_id",{"_index":898,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["beeyard_name",{"_index":356,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["beeyardcontroller",{"_index":542,"title":{"controllers/BeeyardController.html":{}},"body":{"controllers/BeeyardController.html":{},"modules/BeeyardModule.html":{},"coverage.html":{}}}],["beeyarddelete",{"_index":624,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyarddto",{"_index":324,"title":{"classes/BeeyardDto.html":{}},"body":{"classes/BeehiveDto.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"coverage.html":{}}}],["beeyarddto.address",{"_index":620,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyarddto.address.id",{"_index":603,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["beeyarddto.beekeeper",{"_index":622,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["beeyarddto.beekeeper.id",{"_index":602,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["beeyarddto.environment",{"_index":600,"title":{},"body":{"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{}}}],["beeyarddto.id",{"_index":604,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["beeyarddto.name",{"_index":601,"title":{},"body":{"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{}}}],["beeyardid",{"_index":309,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeeyardController.html":{},"controllers/HarvesthoneyController.html":{}}}],["beeyardmodule",{"_index":235,"title":{"modules/BeeyardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BeeyardModule.html":{},"modules.html":{},"overview.html":{}}}],["beeyardrepository",{"_index":581,"title":{"injectables/BeeyardRepository.html":{}},"body":{"modules/BeeyardModule.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"coverage.html":{},"overview.html":{}}}],["beeyards",{"_index":566,"title":{},"body":{"controllers/BeeyardController.html":{},"injectables/BeeyardService.html":{},"injectables/ProductService.html":{}}}],["beeyards.find((el",{"_index":1300,"title":{},"body":{"injectables/ProductService.html":{}}}],["beeyards.push",{"_index":638,"title":{},"body":{"injectables/BeeyardService.html":{},"injectables/ProductService.html":{}}}],["beeyardservice",{"_index":554,"title":{"injectables/BeeyardService.html":{}},"body":{"controllers/BeeyardController.html":{},"modules/BeeyardModule.html":{},"injectables/BeeyardService.html":{},"coverage.html":{},"overview.html":{}}}],["being",{"_index":1952,"title":{},"body":{"license.html":{}}}],["believed",{"_index":1879,"title":{},"body":{"license.html":{}}}],["below",{"_index":1614,"title":{},"body":{"license.html":{}}}],["best",{"_index":1965,"title":{},"body":{"license.html":{}}}],["bh",{"_index":353,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["bh.id_beeyard",{"_index":361,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["binary",{"_index":1767,"title":{},"body":{"license.html":{}}}],["bk",{"_index":364,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bk.email",{"_index":908,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bk.firstname",{"_index":904,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bk.id",{"_index":365,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bk.id_address",{"_index":910,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bk.lastname",{"_index":905,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bk.napi",{"_index":907,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bk.phone",{"_index":909,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bk.siret",{"_index":906,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["body",{"_index":48,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{},"license.html":{}}}],["bootstrap",{"_index":118,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/BeehiveModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules/HarvesthoneyModule.html":{},"modules/HoneycropModule.html":{},"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["boston",{"_index":1489,"title":{},"body":{"license.html":{}}}],["both",{"_index":1844,"title":{},"body":{"license.html":{}}}],["bring",{"_index":1730,"title":{},"body":{"license.html":{}}}],["browse",{"_index":2035,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2032,"title":{},"body":{"modules.html":{}}}],["bya",{"_index":912,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bya.environment",{"_index":899,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bya.id",{"_index":897,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bya.id_address",{"_index":901,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bya.id_beekeeper",{"_index":913,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["bya.name",{"_index":900,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["c",{"_index":691,"title":{},"body":{"injectables/ClientRepository.html":{},"license.html":{}}}],["c'est",{"_index":957,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["c.id",{"_index":693,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["c.id_address",{"_index":692,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["called",{"_index":1996,"title":{},"body":{"license.html":{}}}],["carry",{"_index":1671,"title":{},"body":{"license.html":{}}}],["case",{"_index":1889,"title":{},"body":{"license.html":{}}}],["catch",{"_index":65,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["cause",{"_index":1669,"title":{},"body":{"license.html":{}}}],["certain",{"_index":1550,"title":{},"body":{"license.html":{}}}],["change",{"_index":1510,"title":{},"body":{"license.html":{}}}],["changed",{"_index":1674,"title":{},"body":{"license.html":{}}}],["changing",{"_index":1501,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1531,"title":{},"body":{"license.html":{}}}],["choice",{"_index":1877,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1905,"title":{},"body":{"license.html":{}}}],["chou",{"_index":96,"title":{},"body":{"classes/AddressDto.html":{},"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{}}}],["choué'})@isnumber",{"_index":748,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/RelHarvestHoneycropDto.html":{}}}],["choué'})@isstring",{"_index":750,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{}}}],["choué'})@type(undefined",{"_index":326,"title":{},"body":{"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/ProductDto.html":{},"classes/TrackingDto.html":{}}}],["choué'})@type(undefined)@isdate({message",{"_index":732,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/ProductDto.html":{}}}],["choué.'})@isenum(typeproduct",{"_index":1146,"title":{},"body":{"classes/ProductDto.html":{}}}],["circumstance",{"_index":1850,"title":{},"body":{"license.html":{}}}],["circumstances",{"_index":1852,"title":{},"body":{"license.html":{}}}],["city",{"_index":10,"title":{},"body":{"interfaces/Address.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["claim",{"_index":1718,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1857,"title":{},"body":{"license.html":{}}}],["class",{"_index":57,"title":{"classes/AddressDto.html":{},"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{}},"body":{"controllers/AddressController.html":{},"classes/AddressDto.html":{},"modules/AddressModule.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"modules/BeehiveModule.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"modules/BeekeeperModule.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"modules/BeeyardModule.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"modules/ClientModule.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"modules/HarvesthoneyModule.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"modules/HoneycropModule.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":91,"title":{},"body":{"classes/AddressDto.html":{},"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{},"overview.html":{}}}],["clear",{"_index":1597,"title":{},"body":{"license.html":{}}}],["clicks",{"_index":1999,"title":{},"body":{"license.html":{}}}],["client",{"_index":643,"title":{"interfaces/Client.html":{}},"body":{"interfaces/Client.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"injectables/ProductService.html":{},"coverage.html":{},"index.html":{}}}],["client.controller",{"_index":681,"title":{},"body":{"modules/ClientModule.html":{}}}],["client.repository",{"_index":682,"title":{},"body":{"modules/ClientModule.html":{},"injectables/ClientService.html":{}}}],["client.service",{"_index":654,"title":{},"body":{"controllers/ClientController.html":{},"modules/ClientModule.html":{}}}],["clientcontroller",{"_index":251,"title":{"controllers/ClientController.html":{}},"body":{"modules/AppModule.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"coverage.html":{}}}],["clientdelete",{"_index":714,"title":{},"body":{"injectables/ClientService.html":{}}}],["clientdto",{"_index":648,"title":{"classes/ClientDto.html":{}},"body":{"controllers/ClientController.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"coverage.html":{}}}],["clientdto.address",{"_index":711,"title":{},"body":{"injectables/ClientService.html":{}}}],["clientdto.address.id",{"_index":701,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["clientdto.email",{"_index":699,"title":{},"body":{"injectables/ClientRepository.html":{},"injectables/ClientService.html":{}}}],["clientdto.firstname",{"_index":697,"title":{},"body":{"injectables/ClientRepository.html":{},"injectables/ClientService.html":{}}}],["clientdto.id",{"_index":702,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["clientdto.lastname",{"_index":698,"title":{},"body":{"injectables/ClientRepository.html":{},"injectables/ClientService.html":{}}}],["clientdto.phone",{"_index":700,"title":{},"body":{"injectables/ClientRepository.html":{},"injectables/ClientService.html":{}}}],["clientid",{"_index":662,"title":{},"body":{"controllers/ClientController.html":{}}}],["clientmodule",{"_index":236,"title":{"modules/ClientModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientModule.html":{},"modules.html":{},"overview.html":{}}}],["clientrepository",{"_index":679,"title":{"injectables/ClientRepository.html":{}},"body":{"modules/ClientModule.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"coverage.html":{},"overview.html":{}}}],["clientservice",{"_index":253,"title":{"injectables/ClientService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientService.html":{},"coverage.html":{},"overview.html":{}}}],["clientupdated",{"_index":659,"title":{},"body":{"controllers/ClientController.html":{}}}],["cluster_addressmodule",{"_index":121,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_addressmodule_exports",{"_index":122,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_addressmodule_providers",{"_index":123,"title":{},"body":{"modules/AddressModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":232,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_beehivemodule",{"_index":335,"title":{},"body":{"modules/BeehiveModule.html":{},"overview.html":{}}}],["cluster_beehivemodule_providers",{"_index":336,"title":{},"body":{"modules/BeehiveModule.html":{},"overview.html":{}}}],["cluster_beekeepermodule",{"_index":465,"title":{},"body":{"modules/BeekeeperModule.html":{},"overview.html":{}}}],["cluster_beekeepermodule_imports",{"_index":466,"title":{},"body":{"modules/BeekeeperModule.html":{}}}],["cluster_beekeepermodule_providers",{"_index":467,"title":{},"body":{"modules/BeekeeperModule.html":{},"overview.html":{}}}],["cluster_beeyardmodule",{"_index":578,"title":{},"body":{"modules/BeeyardModule.html":{},"overview.html":{}}}],["cluster_beeyardmodule_imports",{"_index":579,"title":{},"body":{"modules/BeeyardModule.html":{}}}],["cluster_beeyardmodule_providers",{"_index":580,"title":{},"body":{"modules/BeeyardModule.html":{},"overview.html":{}}}],["cluster_clientmodule",{"_index":676,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_clientmodule_imports",{"_index":678,"title":{},"body":{"modules/ClientModule.html":{}}}],["cluster_clientmodule_providers",{"_index":677,"title":{},"body":{"modules/ClientModule.html":{},"overview.html":{}}}],["cluster_harvesthoneymodule",{"_index":838,"title":{},"body":{"modules/HarvesthoneyModule.html":{},"overview.html":{}}}],["cluster_harvesthoneymodule_imports",{"_index":839,"title":{},"body":{"modules/HarvesthoneyModule.html":{}}}],["cluster_harvesthoneymodule_providers",{"_index":840,"title":{},"body":{"modules/HarvesthoneyModule.html":{},"overview.html":{}}}],["cluster_honeycropmodule",{"_index":1045,"title":{},"body":{"modules/HoneycropModule.html":{},"overview.html":{}}}],["cluster_honeycropmodule_exports",{"_index":1046,"title":{},"body":{"modules/HoneycropModule.html":{},"overview.html":{}}}],["cluster_honeycropmodule_providers",{"_index":1047,"title":{},"body":{"modules/HoneycropModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":1155,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":1156,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["code",{"_index":1535,"title":{},"body":{"license.html":{}}}],["colas",{"_index":1469,"title":{},"body":{"index.html":{},"properties.html":{}}}],["collective",{"_index":1725,"title":{},"body":{"license.html":{}}}],["comes",{"_index":1989,"title":{},"body":{"license.html":{}}}],["commands",{"_index":1683,"title":{},"body":{"license.html":{}}}],["commit",{"_index":1522,"title":{},"body":{"license.html":{}}}],["compelled",{"_index":1786,"title":{},"body":{"license.html":{}}}],["compilation",{"_index":1763,"title":{},"body":{"license.html":{}}}],["compiler",{"_index":1770,"title":{},"body":{"license.html":{}}}],["compilers",{"_index":2018,"title":{},"body":{"license.html":{}}}],["complete",{"_index":1737,"title":{},"body":{"license.html":{}}}],["compliance",{"_index":1799,"title":{},"body":{"license.html":{}}}],["component",{"_index":1776,"title":{},"body":{"license.html":{}}}],["components",{"_index":1769,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":1898,"title":{},"body":{"license.html":{}}}],["conditionnement",{"_index":1137,"title":{},"body":{"classes/ProductDto.html":{}}}],["conditions",{"_index":1601,"title":{},"body":{"license.html":{}}}],["configmodule",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["configurations",{"_index":1443,"title":{},"body":{"index.html":{}}}],["consequence",{"_index":1822,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":1948,"title":{},"body":{"license.html":{}}}],["consider",{"_index":2029,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1705,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":1871,"title":{},"body":{"license.html":{}}}],["conspicuously",{"_index":1649,"title":{},"body":{"license.html":{}}}],["const",{"_index":78,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["constantly",{"_index":1584,"title":{},"body":{"license.html":{}}}],["constitute",{"_index":1642,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":191,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["constructor(addressrepository",{"_index":192,"title":{},"body":{"injectables/AddressService.html":{}}}],["constructor(beehiverepository",{"_index":380,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["constructor(beekeeperrepository",{"_index":508,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["constructor(beeyardrepository",{"_index":609,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["constructor(clientrepository",{"_index":704,"title":{},"body":{"injectables/ClientService.html":{}}}],["constructor(harvesthoneyrepository",{"_index":933,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["constructor(honeycroprepository",{"_index":1071,"title":{},"body":{"injectables/HoneycropService.html":{}}}],["constructor(private",{"_index":58,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["constructor(productrepository",{"_index":1231,"title":{},"body":{"injectables/ProductService.html":{}}}],["consulter",{"_index":1431,"title":{},"body":{"index.html":{}}}],["consumer",{"_index":1415,"title":{},"body":{"index.html":{},"properties.html":{}}}],["contact",{"_index":1980,"title":{},"body":{"license.html":{}}}],["containing",{"_index":1620,"title":{},"body":{"license.html":{}}}],["contains",{"_index":1607,"title":{},"body":{"license.html":{}}}],["contents",{"_index":1641,"title":{},"body":{"license.html":{}}}],["contest",{"_index":1719,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":1832,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":1511,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1867,"title":{},"body":{"license.html":{}}}],["control",{"_index":1724,"title":{},"body":{"license.html":{}}}],["controle",{"_index":956,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["controller",{"_index":23,"title":{"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}},"body":{"controllers/AddressController.html":{},"controllers/AppController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{},"coverage.html":{}}}],["controller('address",{"_index":56,"title":{},"body":{"controllers/AddressController.html":{}}}],["controller('beehive",{"_index":292,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["controller('beekeeper",{"_index":433,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["controller('beeyard",{"_index":557,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["controller('client",{"_index":656,"title":{},"body":{"controllers/ClientController.html":{}}}],["controller('harvesthoney",{"_index":806,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["controller('honeycrop",{"_index":1029,"title":{},"body":{"controllers/HoneycropController.html":{}}}],["controller('product",{"_index":1116,"title":{},"body":{"controllers/ProductController.html":{}}}],["controllers",{"_index":25,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BeehiveController.html":{},"modules/BeehiveModule.html":{},"controllers/BeekeeperController.html":{},"modules/BeekeeperModule.html":{},"controllers/BeeyardController.html":{},"modules/BeeyardModule.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"controllers/HarvesthoneyController.html":{},"modules/HarvesthoneyModule.html":{},"controllers/HoneycropController.html":{},"modules/HoneycropModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["convey",{"_index":1970,"title":{},"body":{"license.html":{}}}],["coon",{"_index":2023,"title":{},"body":{"license.html":{}}}],["copies",{"_index":1499,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1496,"title":{},"body":{"license.html":{}}}],["copying",{"_index":1602,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1479,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":1882,"title":{},"body":{"license.html":{}}}],["correction",{"_index":1942,"title":{},"body":{"license.html":{}}}],["corresponding",{"_index":1738,"title":{},"body":{"license.html":{}}}],["cost",{"_index":1749,"title":{},"body":{"license.html":{}}}],["countries",{"_index":1881,"title":{},"body":{"license.html":{}}}],["country",{"_index":11,"title":{},"body":{"interfaces/Address.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["counts",{"_index":1783,"title":{},"body":{"license.html":{}}}],["course",{"_index":1995,"title":{},"body":{"license.html":{}}}],["court",{"_index":1823,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1341,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["covered",{"_index":1524,"title":{},"body":{"license.html":{}}}],["cr",{"_index":1237,"title":{},"body":{"injectables/ProductService.html":{}}}],["create",{"_index":140,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["create(@body",{"_index":293,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/ProductController.html":{}}}],["create(addressdto",{"_index":142,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/AddressService.html":{}}}],["create(beehivedto",{"_index":274,"title":{},"body":{"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{}}}],["create(beekeeperdto",{"_index":421,"title":{},"body":{"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{}}}],["create(beeyarddto",{"_index":545,"title":{},"body":{"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{}}}],["create(clientdto",{"_index":647,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{}}}],["create(harvesthoneydto",{"_index":784,"title":{},"body":{"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{}}}],["create(honeycropdto",{"_index":1053,"title":{},"body":{"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{}}}],["create(productdto",{"_index":1098,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["createhoneycrop",{"_index":931,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["createhoneycrop(harvesthoneydto",{"_index":936,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["createrelhoneycrop",{"_index":850,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["createrelhoneycrop(relharvesthoney",{"_index":853,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["création",{"_index":195,"title":{},"body":{"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["customarily",{"_index":1741,"title":{},"body":{"license.html":{}}}],["d'insertion",{"_index":178,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["d'objet",{"_index":1251,"title":{},"body":{"injectables/ProductService.html":{}}}],["d'un",{"_index":198,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{}}}],["d'une",{"_index":196,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeehiveService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["damages",{"_index":1946,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1587,"title":{},"body":{"license.html":{}}}],["dans",{"_index":70,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["data",{"_index":174,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{},"license.html":{}}}],["database",{"_index":1422,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["database/mysql.config",{"_index":163,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["database_host=localhost",{"_index":1444,"title":{},"body":{"index.html":{}}}],["database_name=apic",{"_index":1448,"title":{},"body":{"index.html":{}}}],["database_password",{"_index":1447,"title":{},"body":{"index.html":{}}}],["database_port=3306",{"_index":1445,"title":{},"body":{"index.html":{}}}],["database_user=root",{"_index":1446,"title":{},"body":{"index.html":{}}}],["databasemodifier",{"_index":1439,"title":{},"body":{"index.html":{}}}],["date",{"_index":725,"title":{},"body":{"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"interfaces/Product.html":{},"classes/ProductDto.html":{},"license.html":{}}}],["date_harvest",{"_index":720,"title":{},"body":{"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{}}}],["date_packaging",{"_index":1085,"title":{},"body":{"interfaces/Product.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["de",{"_index":74,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"index.html":{}}}],["decide",{"_index":1875,"title":{},"body":{"license.html":{}}}],["decision",{"_index":1912,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":117,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/BeehiveModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules/HarvesthoneyModule.html":{},"modules/HoneycropModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["decorators",{"_index":35,"title":{},"body":{"controllers/AddressController.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{}}}],["default",{"_index":149,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{},"miscellaneous/variables.html":{}}}],["defective",{"_index":1937,"title":{},"body":{"license.html":{}}}],["defined",{"_index":37,"title":{},"body":{"controllers/AddressController.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{}}}],["definition",{"_index":1761,"title":{},"body":{"license.html":{}}}],["delete",{"_index":141,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["delete('/honeycrop",{"_index":792,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["delete(':id",{"_index":278,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{}}}],["delete(@param('id",{"_index":299,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/ProductController.html":{}}}],["delete(id",{"_index":145,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["deleteharvesthoney",{"_index":932,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["deleteharvesthoney(id",{"_index":939,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["deletehoneycrop",{"_index":782,"title":{},"body":{"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyService.html":{}}}],["deletehoneycrop(relharvesthoneycropdto",{"_index":790,"title":{},"body":{"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyService.html":{}}}],["deleterelhoneycrop",{"_index":851,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["deleterelhoneycrop(relharvesthoney",{"_index":857,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["deleting",{"_index":185,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["deny",{"_index":1546,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":115,"title":{"dependencies.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/BeehiveModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules/HarvesthoneyModule.html":{},"modules/HoneycropModule.html":{},"modules/ProductModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":1645,"title":{},"body":{"license.html":{}}}],["derivative",{"_index":1618,"title":{},"body":{"license.html":{}}}],["derivatives",{"_index":1917,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1677,"title":{},"body":{"license.html":{}}}],["des",{"_index":179,"title":{},"body":{"injectables/AddressRepository.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropRepository.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{}}}],["description",{"_index":1410,"title":{},"body":{"index.html":{},"properties.html":{}}}],["designated",{"_index":1780,"title":{},"body":{"license.html":{}}}],["designed",{"_index":1505,"title":{},"body":{"license.html":{}}}],["detail",{"_index":1897,"title":{},"body":{"license.html":{}}}],["details",{"_index":1978,"title":{},"body":{"license.html":{}}}],["details.the",{"_index":1993,"title":{},"body":{"license.html":{}}}],["dev",{"_index":1458,"title":{},"body":{"index.html":{}}}],["develop",{"_index":1962,"title":{},"body":{"license.html":{}}}],["development",{"_index":1454,"title":{},"body":{"index.html":{}}}],["differ",{"_index":1896,"title":{},"body":{"license.html":{}}}],["different",{"_index":1908,"title":{},"body":{"license.html":{}}}],["directly",{"_index":1841,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1653,"title":{},"body":{"license.html":{}}}],["disclaims",{"_index":2014,"title":{},"body":{"license.html":{}}}],["display",{"_index":1689,"title":{},"body":{"license.html":{}}}],["distinct",{"_index":876,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["distinguishing",{"_index":1900,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1497,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1612,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":1808,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1603,"title":{},"body":{"license.html":{}}}],["dluo",{"_index":1086,"title":{},"body":{"interfaces/Product.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["document",{"_index":1500,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1342,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doit",{"_index":734,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/ProductDto.html":{}}}],["donnée",{"_index":1435,"title":{},"body":{"index.html":{}}}],["données",{"_index":180,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropRepository.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"index.html":{}}}],["dto/address.dto",{"_index":55,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{}}}],["dto/beehive.dto",{"_index":291,"title":{},"body":{"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{}}}],["dto/beekeeper.dto",{"_index":432,"title":{},"body":{"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{}}}],["dto/beeyard.dto",{"_index":556,"title":{},"body":{"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{}}}],["dto/client.dto",{"_index":655,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{}}}],["dto/harvesthoney.dto",{"_index":804,"title":{},"body":{"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["dto/harvesthoneybebeekeeper.dto",{"_index":955,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["dto/harvesthoneybybeehive.dto",{"_index":953,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["dto/harvesthoneybybeeyard.dto",{"_index":954,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["dto/honeycrop.dto",{"_index":1028,"title":{},"body":{"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{}}}],["dto/product.dto",{"_index":1115,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["dto/relharvesthoneycropdto.dto",{"_index":805,"title":{},"body":{"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["dto/tracking.dto",{"_index":1264,"title":{},"body":{"injectables/ProductService.html":{}}}],["du",{"_index":311,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"index.html":{}}}],["dépendances",{"_index":1450,"title":{},"body":{"index.html":{}}}],["détail",{"_index":1430,"title":{},"body":{"index.html":{}}}],["e2e",{"_index":1464,"title":{},"body":{"index.html":{}}}],["each",{"_index":837,"title":{},"body":{"classes/HarvesthoneyDto.html":{},"classes/ProductDto.html":{},"classes/TrackingDto.html":{},"license.html":{}}}],["effect",{"_index":1592,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":1969,"title":{},"body":{"license.html":{}}}],["el.id",{"_index":1290,"title":{},"body":{"injectables/ProductService.html":{}}}],["electronic",{"_index":1981,"title":{},"body":{"license.html":{}}}],["email",{"_index":411,"title":{},"body":{"interfaces/Beekeeper.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Client.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["employer",{"_index":2004,"title":{},"body":{"license.html":{}}}],["en",{"_index":1252,"title":{},"body":{"injectables/ProductService.html":{}}}],["end",{"_index":1961,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":1821,"title":{},"body":{"license.html":{}}}],["entire",{"_index":1714,"title":{},"body":{"license.html":{}}}],["entirely",{"_index":1721,"title":{},"body":{"license.html":{}}}],["entre",{"_index":965,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["enum",{"_index":1149,"title":{},"body":{"classes/ProductDto.html":{}}}],["enumerations",{"_index":1400,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1441,"title":{},"body":{"index.html":{}}}],["environment",{"_index":404,"title":{},"body":{"injectables/BeehiveService.html":{},"interfaces/Beeyard.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["equivalent",{"_index":1782,"title":{},"body":{"license.html":{}}}],["err",{"_index":66,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["err.message",{"_index":76,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["err.stack",{"_index":175,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["erreur",{"_index":69,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["error",{"_index":607,"title":{},"body":{"injectables/BeeyardRepository.html":{},"injectables/ProductRepository.html":{}}}],["errors",{"_index":811,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["et",{"_index":511,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/HarvesthoneyService.html":{}}}],["even",{"_index":1784,"title":{},"body":{"license.html":{}}}],["event",{"_index":1943,"title":{},"body":{"license.html":{}}}],["everyone",{"_index":1494,"title":{},"body":{"license.html":{}}}],["everyone's",{"_index":1599,"title":{},"body":{"license.html":{}}}],["example",{"_index":1419,"title":{},"body":{"index.html":{},"license.html":{}}}],["except",{"_index":1788,"title":{},"body":{"license.html":{}}}],["exception",{"_index":1697,"title":{},"body":{"license.html":{}}}],["exceptionfactory",{"_index":810,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["exceptions",{"_index":1911,"title":{},"body":{"license.html":{}}}],["exchange",{"_index":1663,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":1888,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1887,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":1971,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":1833,"title":{},"body":{"license.html":{}}}],["executable",{"_index":1732,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":1722,"title":{},"body":{"license.html":{}}}],["explicit",{"_index":1885,"title":{},"body":{"license.html":{}}}],["export",{"_index":20,"title":{},"body":{"interfaces/Address.html":{},"controllers/AddressController.html":{},"classes/AddressDto.html":{},"modules/AddressModule.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"modules/BeehiveModule.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"modules/BeekeeperModule.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"modules/BeeyardModule.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"interfaces/Client.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"modules/ClientModule.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"modules/HarvesthoneyModule.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"modules/HoneycropModule.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{}}}],["exports",{"_index":120,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/BeehiveModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules/HarvesthoneyModule.html":{},"modules/HoneycropModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["express",{"_index":54,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{},"dependencies.html":{}}}],["expressed",{"_index":1928,"title":{},"body":{"license.html":{}}}],["expressly",{"_index":1789,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1713,"title":{},"body":{"license.html":{}}}],["extent",{"_index":1922,"title":{},"body":{"license.html":{}}}],["failure",{"_index":1957,"title":{},"body":{"license.html":{}}}],["fee",{"_index":1556,"title":{},"body":{"license.html":{}}}],["fichier",{"_index":1440,"title":{},"body":{"index.html":{}}}],["fifth",{"_index":1487,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Address.html":{},"controllers/AddressController.html":{},"classes/AddressDto.html":{},"modules/AddressModule.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"modules/BeehiveModule.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"modules/BeekeeperModule.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"modules/BeeyardModule.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"interfaces/Client.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"modules/ClientModule.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"modules/HarvesthoneyModule.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"modules/HoneycropModule.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{},"coverage.html":{},"license.html":{}}}],["files",{"_index":1670,"title":{},"body":{"license.html":{}}}],["finally",{"_index":1582,"title":{},"body":{"license.html":{}}}],["find_all",{"_index":1162,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["find_all_by_beekeeper",{"_index":1163,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["find_all_by_harvesthoney",{"_index":1164,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["find_one",{"_index":1165,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["findall",{"_index":420,"title":{},"body":{"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["findall(@res",{"_index":444,"title":{},"body":{"controllers/BeekeeperController.html":{},"controllers/ProductController.html":{}}}],["findall(res",{"_index":425,"title":{},"body":{"controllers/BeekeeperController.html":{},"controllers/ProductController.html":{}}}],["findallbybeehive",{"_index":783,"title":{},"body":{"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["findallbybeehive(@param('id",{"_index":824,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["findallbybeehive(id",{"_index":794,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["findallbybeehive(idbeehive",{"_index":859,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["findallbybeekeeper",{"_index":272,"title":{},"body":{"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["findallbybeekeeper(@param('id",{"_index":317,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/ProductController.html":{}}}],["findallbybeekeeper(id",{"_index":280,"title":{},"body":{"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/HarvesthoneyController.html":{},"controllers/ProductController.html":{}}}],["findallbybeekeeper(idbeekeeper",{"_index":862,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["findallbybeeyard",{"_index":273,"title":{},"body":{"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["findallbybeeyard(@param('id",{"_index":308,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/HarvesthoneyController.html":{}}}],["findallbybeeyard(id",{"_index":283,"title":{},"body":{"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/HarvesthoneyController.html":{}}}],["findallbybeeyard(idbeeyard",{"_index":865,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["findallbyharvesthoney",{"_index":1096,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["findallbyharvesthoney(@param('id",{"_index":1129,"title":{},"body":{"controllers/ProductController.html":{}}}],["findallbyharvesthoney(id",{"_index":1104,"title":{},"body":{"controllers/ProductController.html":{}}}],["findallbyharvesthoney(idharvesthoney",{"_index":1171,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["findallbyidbeekeeper",{"_index":544,"title":{},"body":{"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{}}}],["findallbyidbeekeeper(@param('id",{"_index":565,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["findallbyidbeekeeper(id",{"_index":548,"title":{},"body":{"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{}}}],["findone",{"_index":30,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["findone(@param('id",{"_index":77,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["findone(id",{"_index":32,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["firstname",{"_index":412,"title":{},"body":{"interfaces/Beekeeper.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Client.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["fitness",{"_index":1932,"title":{},"body":{"license.html":{}}}],["floor",{"_index":1488,"title":{},"body":{"license.html":{}}}],["follow",{"_index":1605,"title":{},"body":{"license.html":{}}}],["following",{"_index":1735,"title":{},"body":{"license.html":{}}}],["forbid",{"_index":1544,"title":{},"body":{"license.html":{}}}],["forbidnonwhitelisted",{"_index":808,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["form",{"_index":1733,"title":{},"body":{"license.html":{}}}],["forming",{"_index":1665,"title":{},"body":{"license.html":{}}}],["found",{"_index":1974,"title":{},"body":{"license.html":{}}}],["foundation",{"_index":1483,"title":{},"body":{"license.html":{}}}],["foundation's",{"_index":1518,"title":{},"body":{"license.html":{}}}],["franklin",{"_index":1486,"title":{},"body":{"license.html":{}}}],["free",{"_index":1481,"title":{},"body":{"license.html":{}}}],["freedom",{"_index":1508,"title":{},"body":{"license.html":{}}}],["full",{"_index":1798,"title":{},"body":{"license.html":{}}}],["function",{"_index":1368,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1405,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1817,"title":{},"body":{"license.html":{}}}],["general",{"_index":1473,"title":{},"body":{"license.html":{}}}],["generally",{"_index":1921,"title":{},"body":{"license.html":{}}}],["generous",{"_index":1866,"title":{},"body":{"license.html":{}}}],["geographical",{"_index":1886,"title":{},"body":{"license.html":{}}}],["get('/all/:id",{"_index":549,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["get('/beehive/:id",{"_index":795,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["get('/beekeeper/:id",{"_index":281,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/ProductController.html":{}}}],["get('/beeyard/:id",{"_index":284,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/HarvesthoneyController.html":{}}}],["get('/harvesthoney/:id",{"_index":1105,"title":{},"body":{"controllers/ProductController.html":{}}}],["get(':id",{"_index":36,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["get('tracking/:id",{"_index":1109,"title":{},"body":{"controllers/ProductController.html":{}}}],["get_tracking_product",{"_index":1166,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["gethello",{"_index":224,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":188,"title":{"index.html":{},"license.html":{}},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["gettracking",{"_index":1097,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["gettracking(@param('id",{"_index":1134,"title":{},"body":{"controllers/ProductController.html":{}}}],["gettracking(id",{"_index":1108,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["give",{"_index":1557,"title":{},"body":{"license.html":{}}}],["given",{"_index":1899,"title":{},"body":{"license.html":{}}}],["gives",{"_index":1565,"title":{},"body":{"license.html":{}}}],["gnomovision",{"_index":1986,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":1472,"title":{},"body":{"license.html":{},"properties.html":{}}}],["goals",{"_index":1914,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1818,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1803,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":1555,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":1963,"title":{},"body":{"license.html":{}}}],["guarantee",{"_index":1513,"title":{},"body":{"license.html":{}}}],["guided",{"_index":1913,"title":{},"body":{"license.html":{}}}],["h",{"_index":1178,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["h.date_harvest",{"_index":1185,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["h.id",{"_index":1180,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["h.lot_number",{"_index":1188,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["h.storage",{"_index":1190,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["h.total_honey_kg",{"_index":1186,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["h.total_sale_honey_kg",{"_index":1187,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["hacker",{"_index":2020,"title":{},"body":{"license.html":{}}}],["harvesthonay",{"_index":814,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["harvesthoneiid",{"_index":1130,"title":{},"body":{"controllers/ProductController.html":{}}}],["harvesthoney",{"_index":718,"title":{"interfaces/Harvesthoney.html":{}},"body":{"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Product.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"coverage.html":{}}}],["harvesthoney.controller",{"_index":843,"title":{},"body":{"modules/HarvesthoneyModule.html":{}}}],["harvesthoney.repository",{"_index":844,"title":{},"body":{"modules/HarvesthoneyModule.html":{},"injectables/HarvesthoneyService.html":{}}}],["harvesthoney.service",{"_index":803,"title":{},"body":{"controllers/HarvesthoneyController.html":{},"modules/HarvesthoneyModule.html":{}}}],["harvesthoney_id",{"_index":1184,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["harvesthoney_lot_number",{"_index":1189,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["harvesthoneybybeehivedto",{"_index":726,"title":{"classes/HarvesthoneyByBeehiveDto.html":{}},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"injectables/HarvesthoneyService.html":{},"coverage.html":{}}}],["harvesthoneybybeekeeperdto",{"_index":760,"title":{"classes/HarvesthoneyByBeekeeperDto.html":{}},"body":{"classes/HarvesthoneyByBeekeeperDto.html":{},"injectables/HarvesthoneyService.html":{},"coverage.html":{}}}],["harvesthoneybybeeyarddto",{"_index":770,"title":{"classes/HarvesthoneyByBeeyardDto.html":{}},"body":{"classes/HarvesthoneyByBeeyardDto.html":{},"injectables/HarvesthoneyService.html":{},"coverage.html":{}}}],["harvesthoneycontroller",{"_index":780,"title":{"controllers/HarvesthoneyController.html":{}},"body":{"controllers/HarvesthoneyController.html":{},"modules/HarvesthoneyModule.html":{},"coverage.html":{}}}],["harvesthoneydto",{"_index":785,"title":{"classes/HarvesthoneyDto.html":{}},"body":{"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Product.html":{},"classes/ProductDto.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"coverage.html":{}}}],["harvesthoneydto.date_harvest",{"_index":919,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["harvesthoneydto.honeycrops[0",{"_index":963,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["harvesthoneydto.id",{"_index":927,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["harvesthoneydto.lot_number",{"_index":922,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["harvesthoneydto.storage",{"_index":923,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["harvesthoneydto.total_honey_kg",{"_index":920,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["harvesthoneydto.total_sale_honey_kg",{"_index":921,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["harvesthoneyid",{"_index":819,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["harvesthoneymodule",{"_index":237,"title":{"modules/HarvesthoneyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HarvesthoneyModule.html":{},"modules.html":{},"overview.html":{}}}],["harvesthoneyrepository",{"_index":841,"title":{"injectables/HarvesthoneyRepository.html":{}},"body":{"modules/HarvesthoneyModule.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"coverage.html":{},"overview.html":{}}}],["harvesthoneys",{"_index":982,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["harvesthoneys.honeycrops.push",{"_index":994,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["harvesthoneyschéma",{"_index":1426,"title":{},"body":{"index.html":{}}}],["harvesthoneyservice",{"_index":802,"title":{"injectables/HarvesthoneyService.html":{}},"body":{"controllers/HarvesthoneyController.html":{},"modules/HarvesthoneyModule.html":{},"injectables/HarvesthoneyService.html":{},"coverage.html":{},"overview.html":{}}}],["having",{"_index":1644,"title":{},"body":{"license.html":{}}}],["hc",{"_index":893,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["hc.honey_kg",{"_index":882,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["hc.id",{"_index":878,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["hc.id_beehive",{"_index":895,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["hc.name",{"_index":880,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["hc.nb_hausses",{"_index":883,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["held",{"_index":1846,"title":{},"body":{"license.html":{}}}],["hello",{"_index":262,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":2008,"title":{},"body":{"license.html":{}}}],["hereby",{"_index":2013,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1819,"title":{},"body":{"license.html":{}}}],["hereinafter",{"_index":1626,"title":{},"body":{"license.html":{}}}],["hh",{"_index":877,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["hh.id",{"_index":891,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["holder",{"_index":1610,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1926,"title":{},"body":{"license.html":{}}}],["honey",{"_index":1414,"title":{},"body":{"index.html":{},"properties.html":{}}}],["honey_kg",{"_index":997,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["honeycrop",{"_index":892,"title":{"interfaces/Honeycrop.html":{}},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"coverage.html":{},"index.html":{}}}],["honeycrop.address_beekeeper.additional_address",{"_index":1322,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.address_beekeeper.address_id",{"_index":1320,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.address_beekeeper.city",{"_index":1324,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.address_beekeeper.country",{"_index":1326,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.address_beekeeper.state",{"_index":1325,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.address_beekeeper.street",{"_index":1321,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.address_beekeeper.zipcode",{"_index":1323,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.address_beeyard.additional_address",{"_index":1306,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.address_beeyard.address_id",{"_index":1304,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.address_beeyard.city",{"_index":1308,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.address_beeyard.country",{"_index":1310,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.address_beeyard.state",{"_index":1309,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.address_beeyard.street",{"_index":1305,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.address_beeyard.zipcode",{"_index":1307,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beehive.bee_type",{"_index":1297,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beehive.beehive_id",{"_index":1296,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beehive.beehive_name",{"_index":1298,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beehive.type_hive",{"_index":1299,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beekeeper.beekeeper_id",{"_index":1312,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beekeeper.email",{"_index":1318,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beekeeper.firstname",{"_index":1314,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beekeeper.lastname",{"_index":1315,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beekeeper.napi",{"_index":1317,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beekeeper.phone",{"_index":1319,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beekeeper.siret",{"_index":1316,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beeyard.beeyard_id",{"_index":1301,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beeyard.beeyard_name",{"_index":1302,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.beeyard.environment",{"_index":1303,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.controller",{"_index":1050,"title":{},"body":{"modules/HoneycropModule.html":{}}}],["honeycrop.honey_kg",{"_index":974,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{}}}],["honeycrop.honeycrop_id",{"_index":1291,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.honeycrop_name",{"_index":1293,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.id",{"_index":969,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["honeycrop.nb_hausses",{"_index":1294,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrop.repository",{"_index":1051,"title":{},"body":{"modules/HoneycropModule.html":{},"injectables/HoneycropService.html":{}}}],["honeycrop.service",{"_index":1027,"title":{},"body":{"controllers/HoneycropController.html":{},"modules/HoneycropModule.html":{}}}],["honeycrop/dto/honeycrop.dto",{"_index":756,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyService.html":{}}}],["honeycrop/honeycrop.module",{"_index":845,"title":{},"body":{"modules/HarvesthoneyModule.html":{}}}],["honeycrop/honeycrop.service",{"_index":952,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["honeycrop_id",{"_index":879,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["honeycrop_name",{"_index":881,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["honeycropcontroller",{"_index":1022,"title":{"controllers/HoneycropController.html":{}},"body":{"controllers/HoneycropController.html":{},"modules/HoneycropModule.html":{},"coverage.html":{}}}],["honeycropdto",{"_index":739,"title":{"classes/HoneycropDto.html":{}},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"coverage.html":{}}}],["honeycropdto.beehive",{"_index":1078,"title":{},"body":{"injectables/HoneycropService.html":{}}}],["honeycropdto.beehive.id",{"_index":1068,"title":{},"body":{"injectables/HoneycropRepository.html":{}}}],["honeycropdto.honey_kg",{"_index":1066,"title":{},"body":{"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{}}}],["honeycropdto.id",{"_index":1069,"title":{},"body":{"injectables/HoneycropRepository.html":{}}}],["honeycropdto.name",{"_index":1065,"title":{},"body":{"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{}}}],["honeycropdto.nb_hausses",{"_index":1067,"title":{},"body":{"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{}}}],["honeycropid",{"_index":1032,"title":{},"body":{"controllers/HoneycropController.html":{}}}],["honeycropmodule",{"_index":238,"title":{"modules/HoneycropModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HarvesthoneyModule.html":{},"modules/HoneycropModule.html":{},"modules.html":{},"overview.html":{}}}],["honeycroprepository",{"_index":1048,"title":{"injectables/HoneycropRepository.html":{}},"body":{"modules/HoneycropModule.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"coverage.html":{},"overview.html":{}}}],["honeycrops",{"_index":728,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["honeycrops.find((el",{"_index":1289,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycrops.push",{"_index":1292,"title":{},"body":{"injectables/ProductService.html":{}}}],["honeycropservice",{"_index":934,"title":{"injectables/HoneycropService.html":{}},"body":{"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"modules/HoneycropModule.html":{},"injectables/HoneycropService.html":{},"coverage.html":{},"overview.html":{}}}],["hope",{"_index":1975,"title":{},"body":{"license.html":{}}}],["httpexception",{"_index":201,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["httpexception(err.message",{"_index":206,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["httpstatus",{"_index":49,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["httpstatus.bad_request",{"_index":205,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["hypothetical",{"_index":1994,"title":{},"body":{"license.html":{}}}],["id",{"_index":12,"title":{},"body":{"interfaces/Address.html":{},"controllers/AddressController.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"interfaces/Client.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["id_address",{"_index":496,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{}}}],["id_beehive",{"_index":1062,"title":{},"body":{"injectables/HoneycropRepository.html":{}}}],["id_beekeeper",{"_index":596,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["id_beeyard",{"_index":369,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["id_harvesthoney",{"_index":873,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["id_honeycrop",{"_index":874,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["idaddress",{"_index":475,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{}}}],["idbeehive",{"_index":861,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["idbeekeeper",{"_index":864,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["idbeeyard",{"_index":867,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["identifiable",{"_index":1702,"title":{},"body":{"license.html":{}}}],["identifiant",{"_index":84,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["identifier",{"_index":1343,"title":{},"body":{"coverage.html":{}}}],["idharvesthoney",{"_index":967,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{}}}],["idhoneycrop",{"_index":968,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"classes/RelHarvestHoneycropDto.html":{}}}],["implemented",{"_index":1862,"title":{},"body":{"license.html":{}}}],["implements",{"_index":93,"title":{},"body":{"classes/AddressDto.html":{},"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{}}}],["implied",{"_index":1929,"title":{},"body":{"license.html":{}}}],["import",{"_index":47,"title":{},"body":{"controllers/AddressController.html":{},"classes/AddressDto.html":{},"modules/AddressModule.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"modules/BeehiveModule.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"modules/BeekeeperModule.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"modules/BeeyardModule.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"interfaces/Client.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"modules/ClientModule.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"modules/HarvesthoneyModule.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"modules/HoneycropModule.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{}}}],["imports",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules/HarvesthoneyModule.html":{}}}],["impose",{"_index":1816,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":1830,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1950,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":1954,"title":{},"body":{"license.html":{}}}],["inc",{"_index":1484,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1947,"title":{},"body":{"license.html":{}}}],["include",{"_index":1765,"title":{},"body":{"license.html":{}}}],["included",{"_index":1628,"title":{},"body":{"license.html":{}}}],["including",{"_index":1691,"title":{},"body":{"license.html":{}}}],["incorporate",{"_index":1906,"title":{},"body":{"license.html":{}}}],["incorporates",{"_index":1890,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":2026,"title":{},"body":{"license.html":{}}}],["independent",{"_index":1643,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Address.html":{},"controllers/AddressController.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"interfaces/Client.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indicate",{"_index":1809,"title":{},"body":{"license.html":{}}}],["indirectly",{"_index":1842,"title":{},"body":{"license.html":{}}}],["individually",{"_index":1589,"title":{},"body":{"license.html":{}}}],["induce",{"_index":1854,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Address.html":{},"controllers/AddressController.html":{},"classes/AddressDto.html":{},"modules/AddressModule.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"modules/BeehiveModule.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"modules/BeekeeperModule.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"modules/BeeyardModule.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"interfaces/Client.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"modules/ClientModule.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"modules/HarvesthoneyModule.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"modules/HoneycropModule.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{}}}],["information",{"_index":1752,"title":{},"body":{"license.html":{}}}],["informations",{"_index":387,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["infringe",{"_index":1855,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1826,"title":{},"body":{"license.html":{}}}],["injectable",{"_index":131,"title":{"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}},"body":{"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["injectables",{"_index":132,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"injectables/AppService.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"overview.html":{}}}],["inner",{"_index":359,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["insert",{"_index":157,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["inserting",{"_index":173,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["installation",{"_index":1433,"title":{},"body":{"index.html":{},"license.html":{}}}],["installer",{"_index":1434,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1452,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1526,"title":{},"body":{"license.html":{}}}],["intact",{"_index":1655,"title":{},"body":{"license.html":{}}}],["integrity",{"_index":1861,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1512,"title":{},"body":{"license.html":{}}}],["intent",{"_index":1717,"title":{},"body":{"license.html":{}}}],["interactive",{"_index":1685,"title":{},"body":{"license.html":{}}}],["interactively",{"_index":1684,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":1743,"title":{},"body":{"license.html":{}}}],["interest",{"_index":2015,"title":{},"body":{"license.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Address.html":{},"interfaces/Beehive.html":{},"interfaces/Beekeeper.html":{},"interfaces/Beeyard.html":{},"interfaces/Client.html":{},"interfaces/Harvesthoney.html":{},"interfaces/Honeycrop.html":{},"interfaces/Product.html":{}},"body":{"interfaces/Address.html":{},"interfaces/Beehive.html":{},"interfaces/Beekeeper.html":{},"interfaces/Beeyard.html":{},"interfaces/Client.html":{},"interfaces/Harvesthoney.html":{},"interfaces/Honeycrop.html":{},"interfaces/Product.html":{},"coverage.html":{},"license.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Beehive.html":{},"interfaces/Beekeeper.html":{},"interfaces/Beeyard.html":{},"interfaces/Client.html":{},"interfaces/Harvesthoney.html":{},"interfaces/Honeycrop.html":{},"interfaces/Product.html":{},"license.html":{},"overview.html":{}}}],["interfaces/address.interface",{"_index":111,"title":{},"body":{"classes/AddressDto.html":{}}}],["interfaces/beehive.interface",{"_index":331,"title":{},"body":{"classes/BeehiveDto.html":{}}}],["interfaces/beekeeper.interface",{"_index":463,"title":{},"body":{"classes/BeekeeperDto.html":{}}}],["interfaces/beeyard.interface",{"_index":577,"title":{},"body":{"classes/BeeyardDto.html":{}}}],["interfaces/client.interface",{"_index":674,"title":{},"body":{"classes/ClientDto.html":{}}}],["interfaces/harvesthoney.interface",{"_index":754,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{}}}],["interfaces/honeycrop.interface",{"_index":1043,"title":{},"body":{"classes/HoneycropDto.html":{}}}],["interfaces/product.interface",{"_index":1152,"title":{},"body":{"classes/ProductDto.html":{}}}],["introduced",{"_index":1579,"title":{},"body":{"license.html":{}}}],["invalid",{"_index":1847,"title":{},"body":{"license.html":{}}}],["invalide",{"_index":86,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["invalides",{"_index":813,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["isdate",{"_index":755,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/ProductDto.html":{}}}],["isemail",{"_index":460,"title":{},"body":{"classes/BeekeeperDto.html":{},"classes/ClientDto.html":{}}}],["isenum",{"_index":1153,"title":{},"body":{"classes/ProductDto.html":{}}}],["isenum(typeproduct",{"_index":1154,"title":{},"body":{"classes/ProductDto.html":{}}}],["isglobal",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["isnan(addressid",{"_index":81,"title":{},"body":{"controllers/AddressController.html":{}}}],["isnan(beehiveid",{"_index":301,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/HarvesthoneyController.html":{}}}],["isnan(beekeeperid",{"_index":319,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/ProductController.html":{}}}],["isnan(beeyardid",{"_index":310,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeeyardController.html":{},"controllers/HarvesthoneyController.html":{}}}],["isnan(clientid",{"_index":663,"title":{},"body":{"controllers/ClientController.html":{}}}],["isnan(harvesthoneiid",{"_index":1131,"title":{},"body":{"controllers/ProductController.html":{}}}],["isnan(harvesthoneyid",{"_index":820,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["isnan(honeycropid",{"_index":1033,"title":{},"body":{"controllers/HoneycropController.html":{}}}],["isnan(productid",{"_index":1123,"title":{},"body":{"controllers/ProductController.html":{}}}],["isnotempty",{"_index":106,"title":{},"body":{"classes/AddressDto.html":{},"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{}}}],["isnotempty()@isemail",{"_index":451,"title":{},"body":{"classes/BeekeeperDto.html":{},"classes/ClientDto.html":{}}}],["isnotempty()@isstring({message",{"_index":98,"title":{},"body":{"classes/AddressDto.html":{},"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HoneycropDto.html":{}}}],["isnotempty()@validatenested({message",{"_index":325,"title":{},"body":{"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{}}}],["isnotempty({message",{"_index":731,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/TrackingDto.html":{}}}],["isnumber",{"_index":107,"title":{},"body":{"classes/AddressDto.html":{},"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/RelHarvestHoneycropDto.html":{}}}],["isoptional",{"_index":108,"title":{},"body":{"classes/AddressDto.html":{},"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{}}}],["isoptional()@isnumber",{"_index":101,"title":{},"body":{"classes/AddressDto.html":{},"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{}}}],["isoptional()@isphonenumber('fr",{"_index":457,"title":{},"body":{"classes/BeekeeperDto.html":{},"classes/ClientDto.html":{}}}],["isoptional()@isstring({message",{"_index":94,"title":{},"body":{"classes/AddressDto.html":{},"classes/BeekeeperDto.html":{}}}],["isoptional({message",{"_index":729,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{}}}],["isphonenumber",{"_index":461,"title":{},"body":{"classes/BeekeeperDto.html":{},"classes/ClientDto.html":{}}}],["isphonenumber('fr",{"_index":464,"title":{},"body":{"classes/BeekeeperDto.html":{},"classes/ClientDto.html":{}}}],["isstring",{"_index":109,"title":{},"body":{"classes/AddressDto.html":{},"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{}}}],["issues",{"_index":1829,"title":{},"body":{"license.html":{}}}],["items",{"_index":2001,"title":{},"body":{"license.html":{}}}],["itself",{"_index":1698,"title":{},"body":{"license.html":{}}}],["james",{"_index":2019,"title":{},"body":{"license.html":{}}}],["jar",{"_index":1413,"title":{},"body":{"index.html":{},"properties.html":{}}}],["join",{"_index":360,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["jour",{"_index":73,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["jours",{"_index":619,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["json",{"_index":83,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["json_arrayagg",{"_index":1191,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["json_object",{"_index":1192,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["judgment",{"_index":1824,"title":{},"body":{"license.html":{}}}],["june",{"_index":1477,"title":{},"body":{"license.html":{}}}],["jwt",{"_index":1392,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":1654,"title":{},"body":{"license.html":{}}}],["kernel",{"_index":1771,"title":{},"body":{"license.html":{}}}],["kilo",{"_index":972,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["kind",{"_index":1927,"title":{},"body":{"license.html":{}}}],["know",{"_index":1416,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["l'address",{"_index":75,"title":{},"body":{"controllers/AddressController.html":{}}}],["l'adresse",{"_index":90,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"injectables/BeeyardService.html":{}}}],["l'apiculteur",{"_index":436,"title":{},"body":{"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/ProductController.html":{}}}],["l'histoire",{"_index":1244,"title":{},"body":{"injectables/ProductService.html":{}}}],["l'id",{"_index":616,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["la",{"_index":71,"title":{},"body":{"controllers/AddressController.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{},"index.html":{}}}],["language",{"_index":1625,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":413,"title":{},"body":{"interfaces/Beekeeper.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Client.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["later",{"_index":1902,"title":{},"body":{"license.html":{}}}],["law",{"_index":1619,"title":{},"body":{"license.html":{}}}],["le",{"_index":966,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"classes/ProductDto.html":{},"index.html":{}}}],["legal",{"_index":1566,"title":{},"body":{"license.html":{}}}],["legend",{"_index":116,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/BeehiveModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules/HarvesthoneyModule.html":{},"modules/HoneycropModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["les",{"_index":516,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"index.html":{}}}],["lesser",{"_index":1525,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1945,"title":{},"body":{"license.html":{}}}],["library",{"_index":2028,"title":{},"body":{"license.html":{}}}],["license",{"_index":1471,"title":{"license.html":{}},"body":{"license.html":{},"properties.html":{}}}],["licensed",{"_index":1598,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":1632,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":1712,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1504,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1814,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1630,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1828,"title":{},"body":{"license.html":{}}}],["line",{"_index":1972,"title":{},"body":{"license.html":{}}}],["linking",{"_index":2030,"title":{},"body":{"license.html":{}}}],["liste",{"_index":1253,"title":{},"body":{"injectables/ProductService.html":{}}}],["logger",{"_index":135,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["logger(addressrepository.name",{"_index":152,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["logger(beehiverepository.name",{"_index":350,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["logger(beekeeperrepository.name",{"_index":481,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{}}}],["logger(clientrepository.name",{"_index":688,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["logger(harvesthoneyrepository.name",{"_index":869,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["logger(honeycroprepository.name",{"_index":1058,"title":{},"body":{"injectables/HoneycropRepository.html":{}}}],["logger(productrepository.name",{"_index":1206,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["long",{"_index":1796,"title":{},"body":{"license.html":{}}}],["lors",{"_index":189,"title":{},"body":{"injectables/AddressRepository.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{}}}],["loss",{"_index":1951,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1955,"title":{},"body":{"license.html":{}}}],["lot_number",{"_index":721,"title":{},"body":{"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Product.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["ma",{"_index":1490,"title":{},"body":{"license.html":{}}}],["machine",{"_index":1739,"title":{},"body":{"license.html":{}}}],["made",{"_index":1596,"title":{},"body":{"license.html":{}}}],["mail",{"_index":1983,"title":{},"body":{"license.html":{}}}],["major",{"_index":1768,"title":{},"body":{"license.html":{}}}],["make",{"_index":1514,"title":{},"body":{"license.html":{}}}],["makes",{"_index":2016,"title":{},"body":{"license.html":{}}}],["making",{"_index":1593,"title":{},"body":{"license.html":{}}}],["many",{"_index":1864,"title":{},"body":{"license.html":{}}}],["mapper",{"_index":1249,"title":{},"body":{"injectables/ProductService.html":{}}}],["mapperlistproductdto",{"_index":1229,"title":{},"body":{"injectables/ProductService.html":{}}}],["mapperlistproductdto(rows",{"_index":1245,"title":{},"body":{"injectables/ProductService.html":{}}}],["mapperproductdto",{"_index":1230,"title":{},"body":{"injectables/ProductService.html":{}}}],["mapperproductdto(row",{"_index":1254,"title":{},"body":{"injectables/ProductService.html":{}}}],["matching",{"_index":22,"title":{},"body":{"interfaces/Address.html":{},"controllers/AddressController.html":{},"classes/AddressDto.html":{},"modules/AddressModule.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"modules/BeehiveModule.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"modules/BeekeeperModule.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"modules/BeeyardModule.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"interfaces/Client.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"modules/ClientModule.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"modules/HarvesthoneyModule.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"modules/HoneycropModule.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["means",{"_index":1617,"title":{},"body":{"license.html":{}}}],["medium",{"_index":1647,"title":{},"body":{"license.html":{}}}],["meet",{"_index":1668,"title":{},"body":{"license.html":{}}}],["menu",{"_index":2000,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1931,"title":{},"body":{"license.html":{}}}],["mere",{"_index":1727,"title":{},"body":{"license.html":{}}}],["message",{"_index":68,"title":{},"body":{"controllers/AddressController.html":{},"classes/AddressDto.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{}}}],["metadata",{"_index":1395,"title":{},"body":{"dependencies.html":{}}}],["methode",{"_index":1256,"title":{},"body":{"injectables/ProductService.html":{}}}],["methods",{"_index":28,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["miel",{"_index":741,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/ProductDto.html":{},"classes/TrackingDto.html":{}}}],["miscellaneous",{"_index":1399,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":72,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["mode",{"_index":1457,"title":{},"body":{"index.html":{},"license.html":{}}}],["model/typeproduct.enum",{"_index":1093,"title":{},"body":{"interfaces/Product.html":{},"classes/ProductDto.html":{}}}],["modification",{"_index":1604,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1622,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1574,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1552,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1807,"title":{},"body":{"license.html":{}}}],["module",{"_index":112,"title":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/BeehiveModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules/HarvesthoneyModule.html":{},"modules/HoneycropModule.html":{},"modules/ProductModule.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/BeehiveModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules/HarvesthoneyModule.html":{},"modules/HoneycropModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["modules",{"_index":114,"title":{"modules.html":{}},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/BeehiveModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules/HarvesthoneyModule.html":{},"modules/HoneycropModule.html":{},"modules/ProductModule.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":1748,"title":{},"body":{"license.html":{}}}],["mouse",{"_index":1998,"title":{},"body":{"license.html":{}}}],["mysql.createpool(mysqlconfig",{"_index":2049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":1388,"title":{},"body":{"dependencies.html":{}}}],["mysqlconfig",{"_index":1365,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["méthode",{"_index":1247,"title":{},"body":{"injectables/ProductService.html":{}}}],["n'est",{"_index":1147,"title":{},"body":{"classes/ProductDto.html":{}}}],["name",{"_index":40,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"license.html":{}}}],["names",{"_index":2011,"title":{},"body":{"license.html":{}}}],["napi",{"_index":414,"title":{},"body":{"interfaces/Beekeeper.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["nb_hausses",{"_index":999,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["ne",{"_index":742,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/TrackingDto.html":{}}}],["necessary",{"_index":1939,"title":{},"body":{"license.html":{}}}],["need",{"_index":1542,"title":{},"body":{"license.html":{}}}],["nestjs/common",{"_index":51,"title":{},"body":{"controllers/AddressController.html":{},"modules/AddressModule.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BeehiveController.html":{},"modules/BeehiveModule.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"modules/BeekeeperModule.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"modules/BeeyardModule.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"modules/ClientModule.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"modules/HarvesthoneyModule.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"modules/HoneycropModule.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1378,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":1379,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":1381,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":1383,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":151,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"coverage.html":{},"license.html":{}}}],["nombres",{"_index":971,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["noncommercial",{"_index":1755,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1681,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":1802,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1608,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1656,"title":{},"body":{"license.html":{}}}],["npm",{"_index":1451,"title":{},"body":{"index.html":{}}}],["number",{"_index":19,"title":{},"body":{"interfaces/Address.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"interfaces/Client.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"license.html":{}}}],["number(id",{"_index":80,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["object",{"_index":1731,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["objet",{"_index":1257,"title":{},"body":{"injectables/ProductService.html":{}}}],["obligations",{"_index":1836,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":1590,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1564,"title":{},"body":{"license.html":{}}}],["offering",{"_index":1778,"title":{},"body":{"license.html":{}}}],["one",{"_index":1734,"title":{},"body":{"license.html":{}}}],["operate",{"_index":1958,"title":{},"body":{"license.html":{}}}],["operating",{"_index":1772,"title":{},"body":{"license.html":{}}}],["option",{"_index":1662,"title":{},"body":{"license.html":{}}}],["optional",{"_index":41,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["order",{"_index":1424,"title":{},"body":{"index.html":{},"license.html":{}}}],["ordinary",{"_index":1686,"title":{},"body":{"license.html":{}}}],["origin",{"_index":1417,"title":{},"body":{"index.html":{},"properties.html":{}}}],["original",{"_index":1577,"title":{},"body":{"license.html":{}}}],["others",{"_index":1580,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1791,"title":{},"body":{"license.html":{}}}],["oui",{"_index":959,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["ours",{"_index":1571,"title":{},"body":{"license.html":{}}}],["out",{"_index":127,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/BeehiveModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules/HarvesthoneyModule.html":{},"modules/HoneycropModule.html":{},"modules/ProductModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1640,"title":{},"body":{"license.html":{}}}],["outside",{"_index":1635,"title":{},"body":{"license.html":{}}}],["overview",{"_index":2036,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1177,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["p.id",{"_index":1204,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["p.id_harvesthoney",{"_index":1179,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["package",{"_index":1375,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paper",{"_index":1982,"title":{},"body":{"license.html":{}}}],["par",{"_index":518,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{}}}],["param",{"_index":50,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["parameters",{"_index":39,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["part",{"_index":1676,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1849,"title":{},"body":{"license.html":{}}}],["parties",{"_index":1680,"title":{},"body":{"license.html":{}}}],["parts",{"_index":1907,"title":{},"body":{"license.html":{}}}],["party",{"_index":1747,"title":{},"body":{"license.html":{}}}],["pas",{"_index":744,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/TrackingDto.html":{}}}],["passed",{"_index":1576,"title":{},"body":{"license.html":{}}}],["passes",{"_index":2017,"title":{},"body":{"license.html":{}}}],["passport",{"_index":1390,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":2046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patent",{"_index":1591,"title":{},"body":{"license.html":{}}}],["patents",{"_index":1585,"title":{},"body":{"license.html":{}}}],["people",{"_index":1865,"title":{},"body":{"license.html":{}}}],["performance",{"_index":1935,"title":{},"body":{"license.html":{}}}],["performing",{"_index":1751,"title":{},"body":{"license.html":{}}}],["permet",{"_index":1242,"title":{},"body":{"injectables/ProductService.html":{}}}],["permission",{"_index":1567,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1711,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1838,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1495,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":1837,"title":{},"body":{"license.html":{}}}],["peut",{"_index":1036,"title":{},"body":{"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/TrackingDto.html":{}}}],["peuvent",{"_index":743,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/TrackingDto.html":{}}}],["phone",{"_index":415,"title":{},"body":{"interfaces/Beekeeper.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Client.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["physical",{"_index":1660,"title":{},"body":{"license.html":{}}}],["physically",{"_index":1750,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":1538,"title":{},"body":{"license.html":{}}}],["place",{"_index":1781,"title":{},"body":{"license.html":{}}}],["placed",{"_index":1609,"title":{},"body":{"license.html":{}}}],["places",{"_index":1883,"title":{},"body":{"license.html":{}}}],["plus",{"_index":1429,"title":{},"body":{"index.html":{},"license.html":{}}}],["pointer",{"_index":1973,"title":{},"body":{"license.html":{}}}],["pool",{"_index":162,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pool.execute(this.find_all",{"_index":1223,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["pool.execute(this.find_all_by_beekeeper",{"_index":1225,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["pool.execute(this.find_all_by_harvesthoney",{"_index":1224,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["pool.execute(this.find_one",{"_index":1222,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["pool.execute(this.get_tracking_product",{"_index":1226,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["pool.execute(this.sql_delete",{"_index":184,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["pool.execute(this.sql_delete_rel_harvest_honey",{"_index":928,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["pool.execute(this.sql_find_all",{"_index":506,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["pool.execute(this.sql_find_all_beekeeper",{"_index":605,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["pool.execute(this.sql_find_all_by_beehive",{"_index":929,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["pool.execute(this.sql_find_all_by_beekeeper",{"_index":378,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/HarvesthoneyRepository.html":{}}}],["pool.execute(this.sql_find_all_by_beeyard",{"_index":377,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/HarvesthoneyRepository.html":{}}}],["pool.execute(this.sql_find_one",{"_index":187,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HoneycropRepository.html":{}}}],["pool.execute(this.sql_insert",{"_index":165,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["pool.execute(this.sql_insert_rel_harvest_honey",{"_index":924,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["pool.execute(this.sql_update",{"_index":181,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["portion",{"_index":1621,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":1960,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1964,"title":{},"body":{"license.html":{}}}],["post",{"_index":276,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/ProductController.html":{}}}],["post()@usepipes(new",{"_index":786,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["pot",{"_index":1403,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pour",{"_index":1428,"title":{},"body":{"index.html":{}}}],["pplus",{"_index":942,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["practices",{"_index":1863,"title":{},"body":{"license.html":{}}}],["preamble",{"_index":1503,"title":{},"body":{"license.html":{}}}],["precise",{"_index":1600,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1759,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":27,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["première",{"_index":958,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["present",{"_index":1895,"title":{},"body":{"license.html":{}}}],["preserving",{"_index":1915,"title":{},"body":{"license.html":{}}}],["president",{"_index":2024,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":1595,"title":{},"body":{"license.html":{}}}],["price",{"_index":1087,"title":{},"body":{"interfaces/Product.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"license.html":{}}}],["print",{"_index":1688,"title":{},"body":{"license.html":{}}}],["private",{"_index":134,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["problems",{"_index":1578,"title":{},"body":{"license.html":{}}}],["process.env.database_name",{"_index":2048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_password",{"_index":2047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_user",{"_index":2045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prodcut",{"_index":1220,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["prodtest",{"_index":1460,"title":{},"body":{"index.html":{}}}],["product",{"_index":1083,"title":{"interfaces/Product.html":{}},"body":{"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["product.controller",{"_index":1159,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":1340,"title":{},"body":{"classes/TrackingDto.html":{}}}],["product.repository",{"_index":1160,"title":{},"body":{"modules/ProductModule.html":{},"injectables/ProductService.html":{}}}],["product.service",{"_index":1114,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["productcontroller",{"_index":1094,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productdto",{"_index":1099,"title":{"classes/ProductDto.html":{}},"body":{"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"coverage.html":{}}}],["productdto.date_packaging",{"_index":1218,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productdto.dluo",{"_index":1217,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productdto.harvesthoney.id",{"_index":1219,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productdto.id",{"_index":1221,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["productdto.lot_number",{"_index":1216,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productdto.price",{"_index":1211,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productdto.quantity",{"_index":1214,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productdto.quantity_sale",{"_index":1215,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productdto.type",{"_index":1212,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productdto.weight",{"_index":1213,"title":{},"body":{"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["productid",{"_index":1122,"title":{},"body":{"controllers/ProductController.html":{}}}],["production",{"_index":1459,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":239,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["productrepository",{"_index":1157,"title":{"injectables/ProductRepository.html":{}},"body":{"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["products",{"_index":1126,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["products.push(await",{"_index":1328,"title":{},"body":{"injectables/ProductService.html":{}}}],["productservice",{"_index":1113,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["produit",{"_index":1119,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{}}}],["produits",{"_index":1236,"title":{},"body":{"injectables/ProductService.html":{}}}],["program",{"_index":1519,"title":{},"body":{"license.html":{}}}],["program's",{"_index":1646,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":2005,"title":{},"body":{"license.html":{}}}],["programs",{"_index":1528,"title":{},"body":{"license.html":{}}}],["prohibited",{"_index":1805,"title":{},"body":{"license.html":{}}}],["project",{"_index":1411,"title":{},"body":{"index.html":{},"properties.html":{}}}],["projectinstaller",{"_index":1449,"title":{},"body":{"index.html":{}}}],["projet",{"_index":1432,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":1672,"title":{},"body":{"license.html":{}}}],["promoting",{"_index":1918,"title":{},"body":{"license.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/Address.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"interfaces/Beehive.html":{},"classes/BeehiveDto.html":{},"injectables/BeehiveRepository.html":{},"interfaces/Beekeeper.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"interfaces/Beeyard.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardRepository.html":{},"interfaces/Client.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"interfaces/Honeycrop.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropRepository.html":{},"interfaces/Product.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{},"properties.html":{}}}],["property",{"_index":1856,"title":{},"body":{"license.html":{}}}],["proprietary",{"_index":1594,"title":{},"body":{"license.html":{}}}],["protect",{"_index":1540,"title":{},"body":{"license.html":{}}}],["protecting",{"_index":1860,"title":{},"body":{"license.html":{}}}],["protection",{"_index":1570,"title":{},"body":{"license.html":{}}}],["prove",{"_index":1936,"title":{},"body":{"license.html":{}}}],["provide",{"_index":1692,"title":{},"body":{"license.html":{}}}],["provided",{"_index":1648,"title":{},"body":{"license.html":{}}}],["providers",{"_index":119,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/BeehiveModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules/HarvesthoneyModule.html":{},"modules/HoneycropModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["public",{"_index":1474,"title":{},"body":{"license.html":{}}}],["publish",{"_index":1651,"title":{},"body":{"license.html":{}}}],["published",{"_index":1903,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1853,"title":{},"body":{"license.html":{}}}],["put",{"_index":45,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["quality",{"_index":1934,"title":{},"body":{"license.html":{}}}],["quantity",{"_index":1088,"title":{},"body":{"interfaces/Product.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["quantity_sale",{"_index":1089,"title":{},"body":{"interfaces/Product.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["qui",{"_index":1248,"title":{},"body":{"injectables/ProductService.html":{}}}],["range",{"_index":1869,"title":{},"body":{"license.html":{}}}],["readable",{"_index":1740,"title":{},"body":{"license.html":{}}}],["readonly",{"_index":59,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["reads",{"_index":1682,"title":{},"body":{"license.html":{}}}],["reason",{"_index":1827,"title":{},"body":{"license.html":{}}}],["reasonably",{"_index":1704,"title":{},"body":{"license.html":{}}}],["receive",{"_index":1534,"title":{},"body":{"license.html":{}}}],["received",{"_index":1753,"title":{},"body":{"license.html":{}}}],["receives",{"_index":1813,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":1812,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1558,"title":{},"body":{"license.html":{}}}],["recolte",{"_index":821,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["redistribute",{"_index":1693,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1840,"title":{},"body":{"license.html":{}}}],["redistributors",{"_index":1588,"title":{},"body":{"license.html":{}}}],["refer",{"_index":1657,"title":{},"body":{"license.html":{}}}],["referring",{"_index":1530,"title":{},"body":{"license.html":{}}}],["refers",{"_index":1615,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":1394,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["refrain",{"_index":1845,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":1715,"title":{},"body":{"license.html":{}}}],["rel_harvesthoney_honeycrop",{"_index":872,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["relation",{"_index":964,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["relharvesthoney",{"_index":855,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["relharvesthoney.idharvesthoney",{"_index":925,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["relharvesthoney.idhoneycrop",{"_index":926,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["relharvesthoneycropdto",{"_index":791,"title":{"classes/RelHarvestHoneycropDto.html":{}},"body":{"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"classes/RelHarvestHoneycropDto.html":{},"coverage.html":{}}}],["relharvesthoneycropdto.idhoneycrop",{"_index":980,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["relhh",{"_index":889,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["relhh.id_harvesthoney",{"_index":890,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["relhh.id_honeycrop",{"_index":894,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"injectables/ProductRepository.html":{}}}],["reliance",{"_index":1870,"title":{},"body":{"license.html":{}}}],["remain",{"_index":1797,"title":{},"body":{"license.html":{}}}],["rendered",{"_index":1953,"title":{},"body":{"license.html":{}}}],["repair",{"_index":1941,"title":{},"body":{"license.html":{}}}],["reputations",{"_index":1581,"title":{},"body":{"license.html":{}}}],["required",{"_index":1699,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":1701,"title":{},"body":{"license.html":{}}}],["res",{"_index":33,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["res.status(httpstatus.bad_request).json",{"_index":67,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["res.status(httpstatus.created).json(beehive",{"_index":295,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["res.status(httpstatus.created).json(beekeeper",{"_index":435,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["res.status(httpstatus.created).json(beeyard",{"_index":559,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["res.status(httpstatus.created).json(client",{"_index":658,"title":{},"body":{"controllers/ClientController.html":{}}}],["res.status(httpstatus.ok).json(address",{"_index":88,"title":{},"body":{"controllers/AddressController.html":{}}}],["res.status(httpstatus.ok).json(addressdto",{"_index":64,"title":{},"body":{"controllers/AddressController.html":{}}}],["res.status(httpstatus.ok).json(beehive",{"_index":298,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["res.status(httpstatus.ok).json(beehives",{"_index":315,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["res.status(httpstatus.ok).json(beekeeper",{"_index":443,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["res.status(httpstatus.ok).json(beekeepers",{"_index":447,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["res.status(httpstatus.ok).json(beekeeperupdated",{"_index":439,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["res.status(httpstatus.ok).json(beeyard",{"_index":561,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["res.status(httpstatus.ok).json(beeyards",{"_index":568,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["res.status(httpstatus.ok).json(client",{"_index":666,"title":{},"body":{"controllers/ClientController.html":{}}}],["res.status(httpstatus.ok).json(clientupdated",{"_index":661,"title":{},"body":{"controllers/ClientController.html":{}}}],["res.status(httpstatus.ok).json(harvesthonay",{"_index":816,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["res.status(httpstatus.ok).json(harvesthoney",{"_index":826,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["res.status(httpstatus.ok).json(harvesthoneydto",{"_index":818,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["res.status(httpstatus.ok).json(honeycrop",{"_index":1031,"title":{},"body":{"controllers/HoneycropController.html":{}}}],["res.status(httpstatus.ok).json(product",{"_index":1118,"title":{},"body":{"controllers/ProductController.html":{}}}],["res.status(httpstatus.ok).json(productdto",{"_index":1121,"title":{},"body":{"controllers/ProductController.html":{}}}],["res.status(httpstatus.ok).json(products",{"_index":1128,"title":{},"body":{"controllers/ProductController.html":{}}}],["reset",{"_index":126,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/BeehiveModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules/HarvesthoneyModule.html":{},"modules/HoneycropModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}],["response",{"_index":34,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["responsibilities",{"_index":1551,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1820,"title":{},"body":{"license.html":{}}}],["rest",{"_index":1880,"title":{},"body":{"license.html":{}}}],["restricted",{"_index":1639,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":1543,"title":{},"body":{"license.html":{}}}],["result",{"_index":202,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["results",{"_index":21,"title":{},"body":{"interfaces/Address.html":{},"controllers/AddressController.html":{},"classes/AddressDto.html":{},"modules/AddressModule.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"modules/BeehiveModule.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"modules/BeekeeperModule.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"modules/BeeyardModule.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"interfaces/Client.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"modules/ClientModule.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"modules/HarvesthoneyModule.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"modules/HoneycropModule.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":164,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["returns",{"_index":42,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["reuse",{"_index":1920,"title":{},"body":{"license.html":{}}}],["revised",{"_index":1891,"title":{},"body":{"license.html":{}}}],["right",{"_index":1723,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1541,"title":{},"body":{"license.html":{}}}],["risk",{"_index":1933,"title":{},"body":{"license.html":{}}}],["row",{"_index":213,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["row.additional_address",{"_index":217,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{}}}],["row.bee_type",{"_index":394,"title":{},"body":{"injectables/BeehiveService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{}}}],["row.beehive_id",{"_index":1006,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{}}}],["row.beehive_name",{"_index":1007,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["row.beekeeper_id",{"_index":1327,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.beeyard_address",{"_index":1019,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["row.beeyard_id",{"_index":1017,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{}}}],["row.beeyard_name",{"_index":1018,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{}}}],["row.city",{"_index":219,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{}}}],["row.country",{"_index":221,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{}}}],["row.date_harvest",{"_index":1284,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.date_packaging",{"_index":1282,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.dluo",{"_index":1281,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.email",{"_index":538,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/ClientService.html":{},"injectables/ProductService.html":{}}}],["row.environment",{"_index":628,"title":{},"body":{"injectables/BeeyardService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{}}}],["row.firstname",{"_index":534,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/ClientService.html":{},"injectables/ProductService.html":{}}}],["row.harvesthoney_id",{"_index":1283,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.honey_kg",{"_index":998,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["row.honeycrop_id",{"_index":995,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{}}}],["row.honeycrop_name",{"_index":996,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["row.honeycrops",{"_index":1288,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.id",{"_index":215,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperService.html":{},"injectables/ClientService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["row.id_address",{"_index":533,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{}}}],["row.id_beehive",{"_index":1082,"title":{},"body":{"injectables/HoneycropService.html":{}}}],["row.id_beekeeper",{"_index":629,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["row.id_beeyard",{"_index":397,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["row.id_harvesthoney",{"_index":1329,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.lastname",{"_index":535,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/ClientService.html":{},"injectables/ProductService.html":{}}}],["row.lot_number",{"_index":1280,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.name",{"_index":395,"title":{},"body":{"injectables/BeehiveService.html":{},"injectables/BeeyardService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["row.napi",{"_index":537,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/ProductService.html":{}}}],["row.nb_hausses",{"_index":1000,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["row.phone",{"_index":539,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/ClientService.html":{},"injectables/ProductService.html":{}}}],["row.price",{"_index":1275,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.quantity",{"_index":1278,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.quantity_sale",{"_index":1279,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.siret",{"_index":536,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/ProductService.html":{}}}],["row.state",{"_index":220,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{}}}],["row.storage",{"_index":1287,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.street",{"_index":216,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{}}}],["row.total_honey_kg",{"_index":1285,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.total_sale_honey_kg",{"_index":1286,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.type",{"_index":1276,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.type_hive",{"_index":396,"title":{},"body":{"injectables/BeehiveService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{}}}],["row.weight",{"_index":1277,"title":{},"body":{"injectables/ProductService.html":{}}}],["row.zipcode",{"_index":218,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{}}}],["rows",{"_index":210,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["rows[0",{"_index":214,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["rows[0].bee_type",{"_index":991,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].beehive_id",{"_index":989,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].beehive_name",{"_index":990,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].beekeeper_address",{"_index":1016,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].beekeeper_id",{"_index":1009,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].beeyard_address",{"_index":1004,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].beeyard_name",{"_index":1002,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].date_harvest",{"_index":984,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].email",{"_index":1014,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].environment",{"_index":1003,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].firstname",{"_index":1010,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].id",{"_index":983,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].id_beekeeper",{"_index":1005,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].id_beeyard",{"_index":993,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].lastname",{"_index":1011,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].lot_number",{"_index":987,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].napi",{"_index":1013,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].phone",{"_index":1015,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].siret",{"_index":1012,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].storage",{"_index":988,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].total_honey_kg",{"_index":985,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].total_sale_honey_kg",{"_index":986,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["rows[0].type_hive",{"_index":992,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["royalty",{"_index":1839,"title":{},"body":{"license.html":{}}}],["ruch",{"_index":563,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["ruche",{"_index":296,"title":{},"body":{"controllers/BeehiveController.html":{},"injectables/BeehiveService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyService.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropService.html":{},"classes/TrackingDto.html":{}}}],["rucher",{"_index":312,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyService.html":{}}}],["ruchers",{"_index":569,"title":{},"body":{"controllers/BeeyardController.html":{},"injectables/BeeyardService.html":{}}}],["ruches",{"_index":316,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["run",{"_index":1436,"title":{},"body":{"index.html":{},"license.html":{}}}],["running",{"_index":1638,"title":{},"body":{"license.html":{}}}],["runs",{"_index":1774,"title":{},"body":{"license.html":{}}}],["rxjs",{"_index":1397,"title":{},"body":{"dependencies.html":{}}}],["récolte",{"_index":733,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductService.html":{},"classes/TrackingDto.html":{}}}],["récoltes",{"_index":740,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyService.html":{},"classes/TrackingDto.html":{}}}],["récoltés",{"_index":973,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["récupération",{"_index":89,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["sachet",{"_index":1404,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["safest",{"_index":1968,"title":{},"body":{"license.html":{}}}],["same",{"_index":1710,"title":{},"body":{"license.html":{}}}],["sample",{"_index":2009,"title":{},"body":{"license.html":{}}}],["satisfy",{"_index":1834,"title":{},"body":{"license.html":{}}}],["saying",{"_index":1611,"title":{},"body":{"license.html":{}}}],["school",{"_index":2006,"title":{},"body":{"license.html":{}}}],["scope",{"_index":1636,"title":{},"body":{"license.html":{}}}],["script",{"_index":1437,"title":{},"body":{"index.html":{}}}],["script.sql",{"_index":1438,"title":{},"body":{"index.html":{}}}],["scripts",{"_index":1762,"title":{},"body":{"license.html":{}}}],["section",{"_index":1666,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1703,"title":{},"body":{"license.html":{}}}],["see",{"_index":1977,"title":{},"body":{"license.html":{}}}],["select",{"_index":155,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["separate",{"_index":1706,"title":{},"body":{"license.html":{}}}],["service",{"_index":1532,"title":{},"body":{"license.html":{}}}],["servicing",{"_index":1940,"title":{},"body":{"license.html":{}}}],["set",{"_index":158,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["share",{"_index":1509,"title":{},"body":{"license.html":{}}}],["sharing",{"_index":1919,"title":{},"body":{"license.html":{}}}],["short",{"_index":1984,"title":{},"body":{"license.html":{}}}],["show",{"_index":1559,"title":{},"body":{"license.html":{}}}],["si",{"_index":941,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["sign",{"_index":2007,"title":{},"body":{"license.html":{}}}],["signed",{"_index":1801,"title":{},"body":{"license.html":{}}}],["similar",{"_index":1893,"title":{},"body":{"license.html":{}}}],["simultaneously",{"_index":1835,"title":{},"body":{"license.html":{}}}],["siret",{"_index":416,"title":{},"body":{"interfaces/Beekeeper.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["software",{"_index":1482,"title":{},"body":{"license.html":{}}}],["sole",{"_index":1859,"title":{},"body":{"license.html":{}}}],["someone",{"_index":1575,"title":{},"body":{"license.html":{}}}],["something",{"_index":1997,"title":{},"body":{"license.html":{}}}],["sometimes",{"_index":1910,"title":{},"body":{"license.html":{}}}],["son",{"_index":512,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/HarvesthoneyService.html":{}}}],["sont",{"_index":519,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Address.html":{},"controllers/AddressController.html":{},"classes/AddressDto.html":{},"modules/AddressModule.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"modules/BeehiveModule.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"modules/BeekeeperModule.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"modules/BeeyardModule.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"interfaces/Client.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"modules/ClientModule.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"modules/HarvesthoneyModule.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"modules/HoneycropModule.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"modules/ProductModule.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{},"license.html":{}}}],["speak",{"_index":1529,"title":{},"body":{"license.html":{}}}],["special",{"_index":1764,"title":{},"body":{"license.html":{}}}],["specifies",{"_index":1901,"title":{},"body":{"license.html":{}}}],["specify",{"_index":1904,"title":{},"body":{"license.html":{}}}],["spirit",{"_index":1894,"title":{},"body":{"license.html":{}}}],["sql_delete",{"_index":136,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["sql_delete_rel_harvest_honey",{"_index":847,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["sql_find_all",{"_index":474,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["sql_find_all_beekeeper",{"_index":586,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["sql_find_all_by_beehive",{"_index":848,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["sql_find_all_by_beekeeper",{"_index":342,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/HarvesthoneyRepository.html":{}}}],["sql_find_all_by_beeyard",{"_index":343,"title":{},"body":{"injectables/BeehiveRepository.html":{},"injectables/HarvesthoneyRepository.html":{}}}],["sql_find_one",{"_index":137,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HoneycropRepository.html":{}}}],["sql_insert",{"_index":138,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["sql_insert_rel_harvest_honey",{"_index":849,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["sql_update",{"_index":139,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["src",{"_index":1421,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":1406,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mysql.config.ts",{"_index":2044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../typeproduct.enum.ts",{"_index":1401,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":223,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":225,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":260,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":261,"title":{},"body":{"injectables/AppService.html":{}}}],["src/beekeeping/address/address.controller.ts",{"_index":26,"title":{},"body":{"controllers/AddressController.html":{},"coverage.html":{}}}],["src/beekeeping/address/address.controller.ts:24",{"_index":46,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/beekeeping/address/address.controller.ts:41",{"_index":38,"title":{},"body":{"controllers/AddressController.html":{}}}],["src/beekeeping/address/address.module.ts",{"_index":128,"title":{},"body":{"modules/AddressModule.html":{}}}],["src/beekeeping/address/address.repository.ts",{"_index":133,"title":{},"body":{"injectables/AddressRepository.html":{},"coverage.html":{}}}],["src/beekeeping/address/address.repository.ts:10",{"_index":156,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["src/beekeeping/address/address.repository.ts:12",{"_index":153,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["src/beekeeping/address/address.repository.ts:18",{"_index":143,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["src/beekeeping/address/address.repository.ts:38",{"_index":148,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["src/beekeeping/address/address.repository.ts:59",{"_index":146,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["src/beekeeping/address/address.repository.ts:7",{"_index":159,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["src/beekeeping/address/address.repository.ts:72",{"_index":147,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["src/beekeeping/address/address.repository.ts:8",{"_index":160,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["src/beekeeping/address/address.repository.ts:9",{"_index":154,"title":{},"body":{"injectables/AddressRepository.html":{}}}],["src/beekeeping/address/address.service.ts",{"_index":190,"title":{},"body":{"injectables/AddressService.html":{},"coverage.html":{}}}],["src/beekeeping/address/address.service.ts:13",{"_index":194,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/beekeeping/address/address.service.ts:34",{"_index":200,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/beekeeping/address/address.service.ts:47",{"_index":197,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/beekeeping/address/address.service.ts:6",{"_index":193,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/beekeeping/address/address.service.ts:60",{"_index":199,"title":{},"body":{"injectables/AddressService.html":{}}}],["src/beekeeping/address/dto/address.dto.ts",{"_index":92,"title":{},"body":{"classes/AddressDto.html":{},"coverage.html":{}}}],["src/beekeeping/address/dto/address.dto.ts:11",{"_index":104,"title":{},"body":{"classes/AddressDto.html":{}}}],["src/beekeeping/address/dto/address.dto.ts:15",{"_index":97,"title":{},"body":{"classes/AddressDto.html":{}}}],["src/beekeeping/address/dto/address.dto.ts:19",{"_index":105,"title":{},"body":{"classes/AddressDto.html":{}}}],["src/beekeeping/address/dto/address.dto.ts:23",{"_index":99,"title":{},"body":{"classes/AddressDto.html":{}}}],["src/beekeeping/address/dto/address.dto.ts:27",{"_index":103,"title":{},"body":{"classes/AddressDto.html":{}}}],["src/beekeeping/address/dto/address.dto.ts:31",{"_index":100,"title":{},"body":{"classes/AddressDto.html":{}}}],["src/beekeeping/address/dto/address.dto.ts:7",{"_index":102,"title":{},"body":{"classes/AddressDto.html":{}}}],["src/beekeeping/address/interfaces/address.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{}}}],["src/beekeeping/beehive/beehive.controller.ts",{"_index":271,"title":{},"body":{"controllers/BeehiveController.html":{},"coverage.html":{}}}],["src/beekeeping/beehive/beehive.controller.ts:110",{"_index":285,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["src/beekeeping/beehive/beehive.controller.ts:135",{"_index":282,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["src/beekeeping/beehive/beehive.controller.ts:26",{"_index":277,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["src/beekeeping/beehive/beehive.controller.ts:43",{"_index":288,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["src/beekeeping/beehive/beehive.controller.ts:60",{"_index":279,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["src/beekeeping/beehive/beehive.controller.ts:86",{"_index":286,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["src/beekeeping/beehive/beehive.module.ts",{"_index":338,"title":{},"body":{"modules/BeehiveModule.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts",{"_index":341,"title":{},"body":{"injectables/BeehiveRepository.html":{},"coverage.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts:10",{"_index":368,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts:11",{"_index":367,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts:111",{"_index":346,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts:15",{"_index":366,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts:21",{"_index":351,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts:27",{"_index":344,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts:45",{"_index":349,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts:66",{"_index":345,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts:7",{"_index":370,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts:8",{"_index":371,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts:81",{"_index":348,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts:9",{"_index":352,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["src/beekeeping/beehive/beehive.repository.ts:96",{"_index":347,"title":{},"body":{"injectables/BeehiveRepository.html":{}}}],["src/beekeeping/beehive/beehive.service.ts",{"_index":379,"title":{},"body":{"injectables/BeehiveService.html":{},"coverage.html":{}}}],["src/beekeeping/beehive/beehive.service.ts:123",{"_index":384,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["src/beekeeping/beehive/beehive.service.ts:13",{"_index":382,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["src/beekeeping/beehive/beehive.service.ts:40",{"_index":388,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["src/beekeeping/beehive/beehive.service.ts:53",{"_index":383,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["src/beekeeping/beehive/beehive.service.ts:6",{"_index":381,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["src/beekeeping/beehive/beehive.service.ts:66",{"_index":386,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["src/beekeeping/beehive/beehive.service.ts:89",{"_index":385,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["src/beekeeping/beehive/dto/beehive.dto.ts",{"_index":322,"title":{},"body":{"classes/BeehiveDto.html":{},"coverage.html":{}}}],["src/beekeeping/beehive/dto/beehive.dto.ts:13",{"_index":323,"title":{},"body":{"classes/BeehiveDto.html":{}}}],["src/beekeeping/beehive/dto/beehive.dto.ts:17",{"_index":329,"title":{},"body":{"classes/BeehiveDto.html":{}}}],["src/beekeeping/beehive/dto/beehive.dto.ts:21",{"_index":330,"title":{},"body":{"classes/BeehiveDto.html":{}}}],["src/beekeeping/beehive/dto/beehive.dto.ts:26",{"_index":327,"title":{},"body":{"classes/BeehiveDto.html":{}}}],["src/beekeeping/beehive/dto/beehive.dto.ts:9",{"_index":328,"title":{},"body":{"classes/BeehiveDto.html":{}}}],["src/beekeeping/beehive/interfaces/beehive.interface.ts",{"_index":265,"title":{},"body":{"interfaces/Beehive.html":{},"coverage.html":{}}}],["src/beekeeping/beekeeper/beekeeper.controller.ts",{"_index":419,"title":{},"body":{"controllers/BeekeeperController.html":{},"coverage.html":{}}}],["src/beekeeping/beekeeper/beekeeper.controller.ts:109",{"_index":426,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["src/beekeeping/beekeeper/beekeeper.controller.ts:26",{"_index":423,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["src/beekeeping/beekeeper/beekeeper.controller.ts:43",{"_index":429,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["src/beekeeping/beekeeper/beekeeper.controller.ts:60",{"_index":424,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["src/beekeeping/beekeeper/beekeeper.controller.ts:86",{"_index":427,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["src/beekeeping/beekeeper/beekeeper.module.ts",{"_index":469,"title":{},"body":{"modules/BeekeeperModule.html":{}}}],["src/beekeeping/beekeeper/beekeeper.repository.ts",{"_index":473,"title":{},"body":{"injectables/BeekeeperRepository.html":{},"coverage.html":{}}}],["src/beekeeping/beekeeper/beekeeper.repository.ts:13",{"_index":498,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["src/beekeeping/beekeeper/beekeeper.repository.ts:14",{"_index":483,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["src/beekeeping/beekeeper/beekeeper.repository.ts:16",{"_index":482,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["src/beekeeping/beekeeper/beekeeper.repository.ts:23",{"_index":476,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["src/beekeeping/beekeeper/beekeeper.repository.ts:44",{"_index":480,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["src/beekeeping/beekeeper/beekeeper.repository.ts:65",{"_index":477,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["src/beekeeping/beekeeper/beekeeper.repository.ts:7",{"_index":497,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["src/beekeeping/beekeeper/beekeeper.repository.ts:77",{"_index":478,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["src/beekeeping/beekeeper/beekeeper.repository.ts:8",{"_index":484,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["src/beekeeping/beekeeper/beekeeper.repository.ts:9",{"_index":495,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["src/beekeeping/beekeeper/beekeeper.repository.ts:92",{"_index":479,"title":{},"body":{"injectables/BeekeeperRepository.html":{}}}],["src/beekeeping/beekeeper/beekeeper.service.ts",{"_index":507,"title":{},"body":{"injectables/BeekeeperService.html":{},"coverage.html":{}}}],["src/beekeeping/beekeeper/beekeeper.service.ts:18",{"_index":510,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["src/beekeeping/beekeeper/beekeeper.service.ts:55",{"_index":520,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["src/beekeeping/beekeeper/beekeeper.service.ts:68",{"_index":513,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["src/beekeeping/beekeeper/beekeeper.service.ts:8",{"_index":509,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["src/beekeeping/beekeeper/beekeeper.service.ts:82",{"_index":514,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["src/beekeeping/beekeeper/beekeeper.service.ts:95",{"_index":517,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["src/beekeeping/beekeeper/dto/beekeeper.dto.ts",{"_index":449,"title":{},"body":{"classes/BeekeeperDto.html":{},"coverage.html":{}}}],["src/beekeeping/beekeeper/dto/beekeeper.dto.ts:17",{"_index":454,"title":{},"body":{"classes/BeekeeperDto.html":{}}}],["src/beekeeping/beekeeper/dto/beekeeper.dto.ts:21",{"_index":453,"title":{},"body":{"classes/BeekeeperDto.html":{}}}],["src/beekeeping/beekeeper/dto/beekeeper.dto.ts:25",{"_index":455,"title":{},"body":{"classes/BeekeeperDto.html":{}}}],["src/beekeeping/beekeeper/dto/beekeeper.dto.ts:29",{"_index":459,"title":{},"body":{"classes/BeekeeperDto.html":{}}}],["src/beekeeping/beekeeper/dto/beekeeper.dto.ts:33",{"_index":456,"title":{},"body":{"classes/BeekeeperDto.html":{}}}],["src/beekeeping/beekeeper/dto/beekeeper.dto.ts:37",{"_index":452,"title":{},"body":{"classes/BeekeeperDto.html":{}}}],["src/beekeeping/beekeeper/dto/beekeeper.dto.ts:41",{"_index":458,"title":{},"body":{"classes/BeekeeperDto.html":{}}}],["src/beekeeping/beekeeper/dto/beekeeper.dto.ts:46",{"_index":450,"title":{},"body":{"classes/BeekeeperDto.html":{}}}],["src/beekeeping/beekeeper/interfaces/beekeeper.interface.ts",{"_index":410,"title":{},"body":{"interfaces/Beekeeper.html":{},"coverage.html":{}}}],["src/beekeeping/beeyard/beeyard.controller.ts",{"_index":543,"title":{},"body":{"controllers/BeeyardController.html":{},"coverage.html":{}}}],["src/beekeeping/beeyard/beeyard.controller.ts:109",{"_index":550,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["src/beekeeping/beeyard/beeyard.controller.ts:26",{"_index":546,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["src/beekeeping/beeyard/beeyard.controller.ts:43",{"_index":553,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["src/beekeeping/beeyard/beeyard.controller.ts:60",{"_index":547,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["src/beekeeping/beeyard/beeyard.controller.ts:85",{"_index":551,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["src/beekeeping/beeyard/beeyard.module.ts",{"_index":582,"title":{},"body":{"modules/BeeyardModule.html":{}}}],["src/beekeeping/beeyard/beeyard.repository.ts",{"_index":585,"title":{},"body":{"injectables/BeeyardRepository.html":{},"coverage.html":{}}}],["src/beekeeping/beeyard/beeyard.repository.ts:11",{"_index":593,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["src/beekeeping/beeyard/beeyard.repository.ts:12",{"_index":595,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["src/beekeeping/beeyard/beeyard.repository.ts:16",{"_index":594,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["src/beekeeping/beeyard/beeyard.repository.ts:22",{"_index":592,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["src/beekeeping/beeyard/beeyard.repository.ts:29",{"_index":587,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["src/beekeeping/beeyard/beeyard.repository.ts:47",{"_index":591,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["src/beekeeping/beeyard/beeyard.repository.ts:66",{"_index":588,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["src/beekeeping/beeyard/beeyard.repository.ts:79",{"_index":589,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["src/beekeeping/beeyard/beeyard.repository.ts:8",{"_index":597,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["src/beekeeping/beeyard/beeyard.repository.ts:9",{"_index":598,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["src/beekeeping/beeyard/beeyard.repository.ts:97",{"_index":590,"title":{},"body":{"injectables/BeeyardRepository.html":{}}}],["src/beekeeping/beeyard/beeyard.service.ts",{"_index":608,"title":{},"body":{"injectables/BeeyardService.html":{},"coverage.html":{}}}],["src/beekeeping/beeyard/beeyard.service.ts:112",{"_index":614,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["src/beekeeping/beeyard/beeyard.service.ts:18",{"_index":611,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["src/beekeeping/beeyard/beeyard.service.ts:52",{"_index":618,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["src/beekeeping/beeyard/beeyard.service.ts:65",{"_index":612,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["src/beekeeping/beeyard/beeyard.service.ts:8",{"_index":610,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["src/beekeeping/beeyard/beeyard.service.ts:80",{"_index":617,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["src/beekeeping/beeyard/dto/beeyard.dto.ts",{"_index":570,"title":{},"body":{"classes/BeeyardDto.html":{},"coverage.html":{}}}],["src/beekeeping/beeyard/dto/beeyard.dto.ts:10",{"_index":574,"title":{},"body":{"classes/BeeyardDto.html":{}}}],["src/beekeeping/beeyard/dto/beeyard.dto.ts:14",{"_index":573,"title":{},"body":{"classes/BeeyardDto.html":{}}}],["src/beekeeping/beeyard/dto/beeyard.dto.ts:18",{"_index":575,"title":{},"body":{"classes/BeeyardDto.html":{}}}],["src/beekeeping/beeyard/dto/beeyard.dto.ts:23",{"_index":572,"title":{},"body":{"classes/BeeyardDto.html":{}}}],["src/beekeeping/beeyard/dto/beeyard.dto.ts:28",{"_index":571,"title":{},"body":{"classes/BeeyardDto.html":{}}}],["src/beekeeping/beeyard/interfaces/beeyard.interface.ts",{"_index":540,"title":{},"body":{"interfaces/Beeyard.html":{},"coverage.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts",{"_index":829,"title":{},"body":{"classes/HarvesthoneyDto.html":{},"coverage.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:16",{"_index":832,"title":{},"body":{"classes/HarvesthoneyDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:21",{"_index":830,"title":{},"body":{"classes/HarvesthoneyDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:25",{"_index":835,"title":{},"body":{"classes/HarvesthoneyDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:29",{"_index":836,"title":{},"body":{"classes/HarvesthoneyDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:33",{"_index":833,"title":{},"body":{"classes/HarvesthoneyDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:37",{"_index":834,"title":{},"body":{"classes/HarvesthoneyDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:42",{"_index":831,"title":{},"body":{"classes/HarvesthoneyDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybebeekeeper.dto.ts",{"_index":761,"title":{},"body":{"classes/HarvesthoneyByBeekeeperDto.html":{},"coverage.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybebeekeeper.dto.ts:10",{"_index":765,"title":{},"body":{"classes/HarvesthoneyByBeekeeperDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybebeekeeper.dto.ts:15",{"_index":763,"title":{},"body":{"classes/HarvesthoneyByBeekeeperDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybebeekeeper.dto.ts:19",{"_index":768,"title":{},"body":{"classes/HarvesthoneyByBeekeeperDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybebeekeeper.dto.ts:23",{"_index":769,"title":{},"body":{"classes/HarvesthoneyByBeekeeperDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybebeekeeper.dto.ts:27",{"_index":766,"title":{},"body":{"classes/HarvesthoneyByBeekeeperDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybebeekeeper.dto.ts:31",{"_index":767,"title":{},"body":{"classes/HarvesthoneyByBeekeeperDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybebeekeeper.dto.ts:35",{"_index":762,"title":{},"body":{"classes/HarvesthoneyByBeekeeperDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybebeekeeper.dto.ts:40",{"_index":764,"title":{},"body":{"classes/HarvesthoneyByBeekeeperDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeehive.dto.ts",{"_index":727,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"coverage.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeehive.dto.ts:10",{"_index":747,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeehive.dto.ts:15",{"_index":738,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeehive.dto.ts:19",{"_index":752,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeehive.dto.ts:23",{"_index":753,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeehive.dto.ts:27",{"_index":749,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeehive.dto.ts:31",{"_index":751,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeehive.dto.ts:35",{"_index":730,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeehive.dto.ts:40",{"_index":746,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeeyard.dto.ts",{"_index":771,"title":{},"body":{"classes/HarvesthoneyByBeeyardDto.html":{},"coverage.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeeyard.dto.ts:10",{"_index":775,"title":{},"body":{"classes/HarvesthoneyByBeeyardDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeeyard.dto.ts:15",{"_index":773,"title":{},"body":{"classes/HarvesthoneyByBeeyardDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeeyard.dto.ts:19",{"_index":778,"title":{},"body":{"classes/HarvesthoneyByBeeyardDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeeyard.dto.ts:23",{"_index":779,"title":{},"body":{"classes/HarvesthoneyByBeeyardDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeeyard.dto.ts:27",{"_index":776,"title":{},"body":{"classes/HarvesthoneyByBeeyardDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeeyard.dto.ts:31",{"_index":777,"title":{},"body":{"classes/HarvesthoneyByBeeyardDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeeyard.dto.ts:35",{"_index":772,"title":{},"body":{"classes/HarvesthoneyByBeeyardDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/harvesthoneybybeeyard.dto.ts:40",{"_index":774,"title":{},"body":{"classes/HarvesthoneyByBeeyardDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/relharvesthoneycropdto.dto.ts",{"_index":1330,"title":{},"body":{"classes/RelHarvestHoneycropDto.html":{},"coverage.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/relharvesthoneycropdto.dto.ts:12",{"_index":1332,"title":{},"body":{"classes/RelHarvestHoneycropDto.html":{}}}],["src/beekeeping/honey/harvesthoney/dto/relharvesthoneycropdto.dto.ts:7",{"_index":1331,"title":{},"body":{"classes/RelHarvestHoneycropDto.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts",{"_index":781,"title":{},"body":{"controllers/HarvesthoneyController.html":{},"coverage.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:118",{"_index":798,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:138",{"_index":797,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:35",{"_index":788,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:48",{"_index":800,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:60",{"_index":789,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:81",{"_index":793,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:98",{"_index":796,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.module.ts",{"_index":842,"title":{},"body":{"modules/HarvesthoneyModule.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts",{"_index":846,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{},"coverage.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:10",{"_index":871,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:109",{"_index":856,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:12",{"_index":917,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:124",{"_index":858,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:13",{"_index":875,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:142",{"_index":860,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:15",{"_index":896,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:157",{"_index":866,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:172",{"_index":863,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:23",{"_index":915,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:33",{"_index":914,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:46",{"_index":870,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:52",{"_index":852,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:71",{"_index":854,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:8",{"_index":916,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:87",{"_index":868,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:9",{"_index":918,"title":{},"body":{"injectables/HarvesthoneyRepository.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.service.ts",{"_index":930,"title":{},"body":{"injectables/HarvesthoneyService.html":{},"coverage.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:103",{"_index":943,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:122",{"_index":946,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:15",{"_index":935,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:168",{"_index":949,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:222",{"_index":948,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:25",{"_index":937,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:78",{"_index":951,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:91",{"_index":940,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["src/beekeeping/honey/harvesthoney/interfaces/harvesthoney.interface.ts",{"_index":719,"title":{},"body":{"interfaces/Harvesthoney.html":{},"coverage.html":{}}}],["src/beekeeping/honey/honeycrop/dto/honeycrop.dto.ts",{"_index":1035,"title":{},"body":{"classes/HoneycropDto.html":{},"coverage.html":{}}}],["src/beekeeping/honey/honeycrop/dto/honeycrop.dto.ts:13",{"_index":1041,"title":{},"body":{"classes/HoneycropDto.html":{}}}],["src/beekeeping/honey/honeycrop/dto/honeycrop.dto.ts:17",{"_index":1039,"title":{},"body":{"classes/HoneycropDto.html":{}}}],["src/beekeeping/honey/honeycrop/dto/honeycrop.dto.ts:21",{"_index":1042,"title":{},"body":{"classes/HoneycropDto.html":{}}}],["src/beekeeping/honey/honeycrop/dto/honeycrop.dto.ts:25",{"_index":1038,"title":{},"body":{"classes/HoneycropDto.html":{}}}],["src/beekeeping/honey/honeycrop/dto/honeycrop.dto.ts:9",{"_index":1040,"title":{},"body":{"classes/HoneycropDto.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.controller.ts",{"_index":1023,"title":{},"body":{"controllers/HoneycropController.html":{},"coverage.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.controller.ts:24",{"_index":1026,"title":{},"body":{"controllers/HoneycropController.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.controller.ts:41",{"_index":1024,"title":{},"body":{"controllers/HoneycropController.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.module.ts",{"_index":1049,"title":{},"body":{"modules/HoneycropModule.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.repository.ts",{"_index":1052,"title":{},"body":{"injectables/HoneycropRepository.html":{},"coverage.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.repository.ts:10",{"_index":1061,"title":{},"body":{"injectables/HoneycropRepository.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.repository.ts:12",{"_index":1059,"title":{},"body":{"injectables/HoneycropRepository.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.repository.ts:18",{"_index":1054,"title":{},"body":{"injectables/HoneycropRepository.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.repository.ts:36",{"_index":1057,"title":{},"body":{"injectables/HoneycropRepository.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.repository.ts:57",{"_index":1055,"title":{},"body":{"injectables/HoneycropRepository.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.repository.ts:7",{"_index":1063,"title":{},"body":{"injectables/HoneycropRepository.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.repository.ts:72",{"_index":1056,"title":{},"body":{"injectables/HoneycropRepository.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.repository.ts:8",{"_index":1064,"title":{},"body":{"injectables/HoneycropRepository.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.repository.ts:9",{"_index":1060,"title":{},"body":{"injectables/HoneycropRepository.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.service.ts",{"_index":1070,"title":{},"body":{"injectables/HoneycropService.html":{},"coverage.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.service.ts:13",{"_index":1073,"title":{},"body":{"injectables/HoneycropService.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.service.ts:40",{"_index":1076,"title":{},"body":{"injectables/HoneycropService.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.service.ts:53",{"_index":1074,"title":{},"body":{"injectables/HoneycropService.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.service.ts:6",{"_index":1072,"title":{},"body":{"injectables/HoneycropService.html":{}}}],["src/beekeeping/honey/honeycrop/honeycrop.service.ts:66",{"_index":1075,"title":{},"body":{"injectables/HoneycropService.html":{}}}],["src/beekeeping/honey/honeycrop/interfaces/honeycrop.interface.ts",{"_index":1020,"title":{},"body":{"interfaces/Honeycrop.html":{},"coverage.html":{}}}],["src/database/mysql.config.ts",{"_index":1363,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1367,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/store/client/client.controller.ts",{"_index":646,"title":{},"body":{"controllers/ClientController.html":{},"coverage.html":{}}}],["src/store/client/client.controller.ts:26",{"_index":649,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/store/client/client.controller.ts:43",{"_index":653,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/store/client/client.controller.ts:60",{"_index":650,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/store/client/client.controller.ts:86",{"_index":651,"title":{},"body":{"controllers/ClientController.html":{}}}],["src/store/client/client.module.ts",{"_index":680,"title":{},"body":{"modules/ClientModule.html":{}}}],["src/store/client/client.repository.ts",{"_index":683,"title":{},"body":{"injectables/ClientRepository.html":{},"coverage.html":{}}}],["src/store/client/client.repository.ts:10",{"_index":694,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/store/client/client.repository.ts:15",{"_index":689,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/store/client/client.repository.ts:22",{"_index":684,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/store/client/client.repository.ts:41",{"_index":687,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/store/client/client.repository.ts:61",{"_index":685,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/store/client/client.repository.ts:7",{"_index":695,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/store/client/client.repository.ts:74",{"_index":686,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/store/client/client.repository.ts:8",{"_index":696,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/store/client/client.repository.ts:9",{"_index":690,"title":{},"body":{"injectables/ClientRepository.html":{}}}],["src/store/client/client.service.ts",{"_index":703,"title":{},"body":{"injectables/ClientService.html":{},"coverage.html":{}}}],["src/store/client/client.service.ts:18",{"_index":706,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/store/client/client.service.ts:53",{"_index":709,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/store/client/client.service.ts:66",{"_index":707,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/store/client/client.service.ts:8",{"_index":705,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/store/client/client.service.ts:81",{"_index":708,"title":{},"body":{"injectables/ClientService.html":{}}}],["src/store/client/dto/client.dto.ts",{"_index":667,"title":{},"body":{"classes/ClientDto.html":{},"coverage.html":{}}}],["src/store/client/dto/client.dto.ts:17",{"_index":671,"title":{},"body":{"classes/ClientDto.html":{}}}],["src/store/client/dto/client.dto.ts:21",{"_index":670,"title":{},"body":{"classes/ClientDto.html":{}}}],["src/store/client/dto/client.dto.ts:25",{"_index":672,"title":{},"body":{"classes/ClientDto.html":{}}}],["src/store/client/dto/client.dto.ts:29",{"_index":669,"title":{},"body":{"classes/ClientDto.html":{}}}],["src/store/client/dto/client.dto.ts:33",{"_index":673,"title":{},"body":{"classes/ClientDto.html":{}}}],["src/store/client/dto/client.dto.ts:38",{"_index":668,"title":{},"body":{"classes/ClientDto.html":{}}}],["src/store/client/interfaces/client.interface.ts",{"_index":644,"title":{},"body":{"interfaces/Client.html":{},"coverage.html":{}}}],["src/store/product/dto/product.dto.ts",{"_index":1136,"title":{},"body":{"classes/ProductDto.html":{},"coverage.html":{}}}],["src/store/product/dto/product.dto.ts:17",{"_index":1141,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/store/product/dto/product.dto.ts:21",{"_index":1143,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/store/product/dto/product.dto.ts:25",{"_index":1150,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/store/product/dto/product.dto.ts:29",{"_index":1151,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/store/product/dto/product.dto.ts:33",{"_index":1144,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/store/product/dto/product.dto.ts:37",{"_index":1145,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/store/product/dto/product.dto.ts:41",{"_index":1142,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/store/product/dto/product.dto.ts:46",{"_index":1139,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/store/product/dto/product.dto.ts:51",{"_index":1138,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/store/product/dto/product.dto.ts:56",{"_index":1140,"title":{},"body":{"classes/ProductDto.html":{}}}],["src/store/product/dto/tracking.dto.ts",{"_index":1333,"title":{},"body":{"classes/TrackingDto.html":{},"coverage.html":{}}}],["src/store/product/dto/tracking.dto.ts:14",{"_index":1339,"title":{},"body":{"classes/TrackingDto.html":{}}}],["src/store/product/dto/tracking.dto.ts:19",{"_index":1337,"title":{},"body":{"classes/TrackingDto.html":{}}}],["src/store/product/dto/tracking.dto.ts:24",{"_index":1338,"title":{},"body":{"classes/TrackingDto.html":{}}}],["src/store/product/dto/tracking.dto.ts:28",{"_index":1334,"title":{},"body":{"classes/TrackingDto.html":{}}}],["src/store/product/dto/tracking.dto.ts:33",{"_index":1336,"title":{},"body":{"classes/TrackingDto.html":{}}}],["src/store/product/dto/tracking.dto.ts:38",{"_index":1335,"title":{},"body":{"classes/TrackingDto.html":{}}}],["src/store/product/interfaces/product.interface.ts",{"_index":1084,"title":{},"body":{"interfaces/Product.html":{},"coverage.html":{}}}],["src/store/product/model/typeproduct.enum.ts",{"_index":1402,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/store/product/product.controller.ts",{"_index":1095,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/store/product/product.controller.ts:109",{"_index":1102,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/store/product/product.controller.ts:126",{"_index":1106,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/store/product/product.controller.ts:151",{"_index":1103,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/store/product/product.controller.ts:176",{"_index":1110,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/store/product/product.controller.ts:26",{"_index":1100,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/store/product/product.controller.ts:43",{"_index":1112,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/store/product/product.controller.ts:60",{"_index":1101,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/store/product/product.controller.ts:86",{"_index":1107,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/store/product/product.module.ts",{"_index":1158,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/store/product/product.repository.ts",{"_index":1161,"title":{},"body":{"injectables/ProductRepository.html":{},"coverage.html":{}}}],["src/store/product/product.repository.ts:109",{"_index":1207,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:11",{"_index":1183,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:115",{"_index":1167,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:12",{"_index":1176,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:13",{"_index":1182,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:138",{"_index":1175,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:164",{"_index":1168,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:179",{"_index":1173,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:18",{"_index":1181,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:190",{"_index":1169,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:205",{"_index":1172,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:225",{"_index":1170,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:240",{"_index":1174,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:43",{"_index":1205,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:7",{"_index":1209,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:8",{"_index":1210,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.repository.ts:9",{"_index":1208,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["src/store/product/product.service.ts",{"_index":1228,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/store/product/product.service.ts:111",{"_index":1239,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/store/product/product.service.ts:129",{"_index":1238,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/store/product/product.service.ts:13",{"_index":1232,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/store/product/product.service.ts:147",{"_index":1241,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/store/product/product.service.ts:20",{"_index":1233,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/store/product/product.service.ts:302",{"_index":1246,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/store/product/product.service.ts:317",{"_index":1255,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/store/product/product.service.ts:53",{"_index":1258,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/store/product/product.service.ts:66",{"_index":1234,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/store/product/product.service.ts:78",{"_index":1240,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/store/product/product.service.ts:94",{"_index":1235,"title":{},"body":{"injectables/ProductService.html":{}}}],["start",{"_index":1455,"title":{},"body":{"index.html":{},"license.html":{}}}],["started",{"_index":1407,"title":{"index.html":{},"license.html":{}},"body":{"license.html":{}}}],["starts",{"_index":1985,"title":{},"body":{"license.html":{}}}],["state",{"_index":13,"title":{},"body":{"interfaces/Address.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["stated",{"_index":1924,"title":{},"body":{"license.html":{}}}],["statements",{"_index":1344,"title":{},"body":{"coverage.html":{}}}],["stating",{"_index":1673,"title":{},"body":{"license.html":{}}}],["status",{"_index":1916,"title":{},"body":{"license.html":{}}}],["status(httpstatus.bad_request",{"_index":82,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["status(httpstatus.ok",{"_index":303,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/ProductController.html":{}}}],["steps",{"_index":1562,"title":{},"body":{"license.html":{}}}],["stockage",{"_index":938,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["storage",{"_index":722,"title":{},"body":{"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{},"license.html":{}}}],["store",{"_index":1423,"title":{},"body":{"index.html":{}}}],["store/client/client.controller",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["store/client/client.module",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["store/client/client.service",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["store/product/product.module",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["street",{"_index":14,"title":{},"body":{"interfaces/Address.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"license.html":{}}}],["string",{"_index":16,"title":{},"body":{"interfaces/Address.html":{},"controllers/AddressController.html":{},"classes/AddressDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"interfaces/Beekeeper.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"interfaces/Client.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"controllers/ProductController.html":{}}}],["structure",{"_index":1418,"title":{},"body":{"index.html":{}}}],["subject",{"_index":1815,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1787,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":2027,"title":{},"body":{"license.html":{}}}],["subsection",{"_index":1757,"title":{},"body":{"license.html":{}}}],["succès",{"_index":306,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/ProductController.html":{}}}],["such",{"_index":1553,"title":{},"body":{"license.html":{}}}],["suits",{"_index":2003,"title":{},"body":{"license.html":{}}}],["support",{"_index":2033,"title":{},"body":{"modules.html":{}}}],["suppression",{"_index":186,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["supprim",{"_index":441,"title":{},"body":{"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{}}}],["supprimée",{"_index":304,"title":{},"body":{"controllers/BeehiveController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/ProductController.html":{}}}],["sure",{"_index":1515,"title":{},"body":{"license.html":{}}}],["surrender",{"_index":1548,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":1956,"title":{},"body":{"license.html":{}}}],["svg",{"_index":2034,"title":{},"body":{"modules.html":{}}}],["system",{"_index":1773,"title":{},"body":{"license.html":{}}}],["table",{"_index":1374,"title":{},"body":{"coverage.html":{}}}],["tableau",{"_index":1250,"title":{},"body":{"injectables/ProductService.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1373,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1506,"title":{},"body":{"license.html":{}}}],["telling",{"_index":1694,"title":{},"body":{"license.html":{}}}],["term",{"_index":1631,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":1794,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":1795,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1560,"title":{},"body":{"license.html":{}}}],["test",{"_index":1463,"title":{},"body":{"index.html":{}}}],["test:covstay",{"_index":1466,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1465,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1462,"title":{},"body":{"index.html":{}}}],["themselves",{"_index":1708,"title":{},"body":{"license.html":{}}}],["therefore",{"_index":1806,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1678,"title":{},"body":{"license.html":{}}}],["things",{"_index":1539,"title":{},"body":{"license.html":{}}}],["third",{"_index":1679,"title":{},"body":{"license.html":{}}}],["this.addressrepository.create(addressdto",{"_index":203,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressrepository.delete(id",{"_index":209,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressrepository.findone(id",{"_index":211,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressrepository.update(addressdto",{"_index":207,"title":{},"body":{"injectables/AddressService.html":{}}}],["this.addressservice.create",{"_index":522,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{}}}],["this.addressservice.delete(beekeeper.address.id",{"_index":530,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["this.addressservice.delete(beeyard.address.id",{"_index":626,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["this.addressservice.delete(client.id",{"_index":716,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.addressservice.findone(addressid",{"_index":87,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.addressservice.update(addressdto",{"_index":63,"title":{},"body":{"controllers/AddressController.html":{}}}],["this.appservice.gethello",{"_index":228,"title":{},"body":{"controllers/AppController.html":{}}}],["this.beehiverepository.create(beehivedto",{"_index":389,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["this.beehiverepository.delete(id",{"_index":392,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["this.beehiverepository.findallbybeekeeper(id",{"_index":408,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["this.beehiverepository.findallbybeeyard(id",{"_index":398,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["this.beehiverepository.findone(id",{"_index":393,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["this.beehiverepository.update(beehivedto",{"_index":391,"title":{},"body":{"injectables/BeehiveService.html":{}}}],["this.beehiveservice.create(beehivedto",{"_index":294,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["this.beehiveservice.delete(beehiveid",{"_index":302,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["this.beehiveservice.findallbybeekeeper(beekeeperid",{"_index":321,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["this.beehiveservice.findallbybeeyard(beeyardid",{"_index":314,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["this.beehiveservice.findone(beehiveid",{"_index":307,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["this.beehiveservice.update(beehivedto",{"_index":297,"title":{},"body":{"controllers/BeehiveController.html":{}}}],["this.beekeeperrepository.create",{"_index":524,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["this.beekeeperrepository.delete(id",{"_index":529,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["this.beekeeperrepository.findall",{"_index":531,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["this.beekeeperrepository.findone(id",{"_index":532,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["this.beekeeperrepository.update(beekeeperdto",{"_index":526,"title":{},"body":{"injectables/BeekeeperService.html":{}}}],["this.beekeeperservice.create(beekeeperdto",{"_index":434,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["this.beekeeperservice.delete(beekeeperid",{"_index":440,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["this.beekeeperservice.findall",{"_index":446,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["this.beekeeperservice.findone(beekeeperid",{"_index":442,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["this.beekeeperservice.update(beekeeperdto",{"_index":438,"title":{},"body":{"controllers/BeekeeperController.html":{}}}],["this.beeyardrepository.create",{"_index":621,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["this.beeyardrepository.delete(id",{"_index":625,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["this.beeyardrepository.findallbyidbeekeeper(id",{"_index":630,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["this.beeyardrepository.findone(id",{"_index":627,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["this.beeyardrepository.update(beeyarddto",{"_index":623,"title":{},"body":{"injectables/BeeyardService.html":{}}}],["this.beeyardservice.create(beeyarddto",{"_index":558,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["this.beeyardservice.delete(beeyardid",{"_index":562,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["this.beeyardservice.findallbyidbeekeeper(beekeeperid",{"_index":567,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["this.beeyardservice.findone(beeyardid",{"_index":564,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["this.beeyardservice.update(beeyarddto",{"_index":560,"title":{},"body":{"controllers/BeeyardController.html":{}}}],["this.clientrepository.create",{"_index":712,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.delete(id",{"_index":715,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.findone(id",{"_index":717,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientrepository.update(clientdto",{"_index":713,"title":{},"body":{"injectables/ClientService.html":{}}}],["this.clientservice.create(clientdto",{"_index":657,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.delete(clientid",{"_index":664,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.findone(clientid",{"_index":665,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.clientservice.update(clientdto",{"_index":660,"title":{},"body":{"controllers/ClientController.html":{}}}],["this.findone(id",{"_index":527,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{}}}],["this.harvesthoneyrepository.create(harvesthoneydto",{"_index":961,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["this.harvesthoneyrepository.createrelhoneycrop(relharvesthoney",{"_index":970,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["this.harvesthoneyrepository.delete(id",{"_index":977,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["this.harvesthoneyrepository.deleterelhoneycrop",{"_index":978,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["this.harvesthoneyrepository.findallbybeehive(idbeehive",{"_index":981,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["this.harvesthoneyrepository.findallbybeekeeper(idbeekeeper",{"_index":1008,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["this.harvesthoneyrepository.findallbybeeyard(idbeeyard",{"_index":1001,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["this.harvesthoneyrepository.update(harvesthoneydto",{"_index":976,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["this.harvesthoneyservice.createhoneycrop(harvesthoneydto",{"_index":815,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["this.harvesthoneyservice.deleteharvesthoney(harvesthoneyid",{"_index":822,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["this.harvesthoneyservice.deletehoneycrop(relharvesthoneycropdto",{"_index":823,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["this.harvesthoneyservice.findallbybeehive(beehiveid",{"_index":825,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["this.harvesthoneyservice.findallbybeekeeper(beekeeperid",{"_index":828,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["this.harvesthoneyservice.findallbybeeyard(beeyardid",{"_index":827,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["this.harvesthoneyservice.update(harvesthoneydto",{"_index":817,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["this.honeycroprepository.create(honeycropdto",{"_index":1077,"title":{},"body":{"injectables/HoneycropService.html":{}}}],["this.honeycroprepository.delete(id",{"_index":1080,"title":{},"body":{"injectables/HoneycropService.html":{}}}],["this.honeycroprepository.findone(id",{"_index":1081,"title":{},"body":{"injectables/HoneycropService.html":{}}}],["this.honeycroprepository.update(honeycropdto",{"_index":1079,"title":{},"body":{"injectables/HoneycropService.html":{}}}],["this.honeycropservice.create",{"_index":962,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["this.honeycropservice.delete",{"_index":979,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["this.honeycropservice.findone(honeycropid",{"_index":1034,"title":{},"body":{"controllers/HoneycropController.html":{}}}],["this.honeycropservice.update(honeycropdto",{"_index":1030,"title":{},"body":{"controllers/HoneycropController.html":{}}}],["this.logger.error",{"_index":606,"title":{},"body":{"injectables/BeeyardRepository.html":{},"injectables/ProductRepository.html":{}}}],["this.logger.error('error",{"_index":172,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["this.mapperlistproductdto(rows",{"_index":1271,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.mapperproductdto(row",{"_index":1269,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.create(productdto",{"_index":1265,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.delete(id",{"_index":1267,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.findall",{"_index":1270,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.findallbybeekeeper(idbeekeeper",{"_index":1273,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.findallbyharvesthoney(idharvesthoney",{"_index":1272,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.findone(id",{"_index":1268,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.gettracking(id",{"_index":1274,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productrepository.update(productdto",{"_index":1266,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productservice.create(productdto",{"_index":1117,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.delete(productid",{"_index":1124,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":1127,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findallbybeekeeper(beekeeperid",{"_index":1133,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findallbyharvesthoney(harvesthoneiid",{"_index":1132,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(productid",{"_index":1125,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.gettracking(productid",{"_index":1135,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(productdto",{"_index":1120,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.update(harvesthoney",{"_index":975,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["thoroughly",{"_index":1878,"title":{},"body":{"license.html":{}}}],["those",{"_index":1709,"title":{},"body":{"license.html":{}}}],["though",{"_index":1785,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":1583,"title":{},"body":{"license.html":{}}}],["three",{"_index":1745,"title":{},"body":{"license.html":{}}}],["through",{"_index":1843,"title":{},"body":{"license.html":{}}}],["throw",{"_index":176,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["thus",{"_index":1664,"title":{},"body":{"license.html":{}}}],["time",{"_index":1811,"title":{},"body":{"license.html":{}}}],["total_honey_kg",{"_index":723,"title":{},"body":{"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{}}}],["total_sale_honey_kg",{"_index":724,"title":{},"body":{"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductService.html":{}}}],["touch",{"_index":1467,"title":{},"body":{"index.html":{}}}],["tout",{"_index":515,"title":{},"body":{"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ProductService.html":{}}}],["toute",{"_index":947,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["toutes",{"_index":950,"title":{},"body":{"injectables/HarvesthoneyService.html":{}}}],["trac",{"_index":1243,"title":{},"body":{"injectables/ProductService.html":{}}}],["tracking",{"_index":1227,"title":{},"body":{"injectables/ProductRepository.html":{}}}],["trackingdto",{"_index":1263,"title":{"classes/TrackingDto.html":{}},"body":{"injectables/ProductService.html":{},"classes/TrackingDto.html":{},"coverage.html":{}}}],["traking",{"_index":1412,"title":{},"body":{"index.html":{},"properties.html":{}}}],["transferring",{"_index":1661,"title":{},"body":{"license.html":{}}}],["transform",{"_index":809,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["transformer",{"_index":333,"title":{},"body":{"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/TrackingDto.html":{},"dependencies.html":{}}}],["translate",{"_index":1549,"title":{},"body":{"license.html":{}}}],["translated",{"_index":1623,"title":{},"body":{"license.html":{}}}],["translation",{"_index":1627,"title":{},"body":{"license.html":{}}}],["tre",{"_index":735,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/TrackingDto.html":{}}}],["true",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"classes/ProductDto.html":{},"classes/TrackingDto.html":{},"license.html":{}}}],["try",{"_index":61,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["two",{"_index":1561,"title":{},"body":{"license.html":{}}}],["ty",{"_index":2022,"title":{},"body":{"license.html":{}}}],["type",{"_index":17,"title":{},"body":{"interfaces/Address.html":{},"controllers/AddressController.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"interfaces/Beehive.html":{},"controllers/BeehiveController.html":{},"classes/BeehiveDto.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"interfaces/Beekeeper.html":{},"controllers/BeekeeperController.html":{},"classes/BeekeeperDto.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"interfaces/Beeyard.html":{},"controllers/BeeyardController.html":{},"classes/BeeyardDto.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"interfaces/Client.html":{},"controllers/ClientController.html":{},"classes/ClientDto.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"interfaces/Harvesthoney.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"controllers/HarvesthoneyController.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"interfaces/Honeycrop.html":{},"controllers/HoneycropController.html":{},"classes/HoneycropDto.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"interfaces/Product.html":{},"controllers/ProductController.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{},"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["type_hive",{"_index":268,"title":{},"body":{"interfaces/Beehive.html":{},"classes/BeehiveDto.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["typeproduct",{"_index":1091,"title":{},"body":{"interfaces/Product.html":{},"classes/ProductDto.html":{},"miscellaneous/enumerations.html":{}}}],["un",{"_index":1148,"title":{},"body":{"classes/ProductDto.html":{},"injectables/ProductService.html":{}}}],["undefined",{"_index":212,"title":{},"body":{"injectables/AddressService.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropService.html":{},"injectables/ProductService.html":{}}}],["under",{"_index":1613,"title":{},"body":{"license.html":{}}}],["understands",{"_index":1572,"title":{},"body":{"license.html":{}}}],["une",{"_index":736,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/ProductDto.html":{},"injectables/ProductService.html":{}}}],["unenforceable",{"_index":1848,"title":{},"body":{"license.html":{}}}],["unit",{"_index":1461,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":144,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["unless",{"_index":1775,"title":{},"body":{"license.html":{}}}],["up",{"_index":1873,"title":{},"body":{"license.html":{}}}],["update",{"_index":31,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{},"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{},"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{},"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{},"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{},"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{},"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["update(@body",{"_index":60,"title":{},"body":{"controllers/AddressController.html":{},"controllers/BeehiveController.html":{},"controllers/BeekeeperController.html":{},"controllers/BeeyardController.html":{},"controllers/ClientController.html":{},"controllers/HarvesthoneyController.html":{},"controllers/HoneycropController.html":{},"controllers/ProductController.html":{}}}],["update(addressdto",{"_index":43,"title":{},"body":{"controllers/AddressController.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{}}}],["update(beehivedto",{"_index":287,"title":{},"body":{"controllers/BeehiveController.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeehiveService.html":{}}}],["update(beekeeperdto",{"_index":428,"title":{},"body":{"controllers/BeekeeperController.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeekeeperService.html":{}}}],["update(beeyarddto",{"_index":552,"title":{},"body":{"controllers/BeeyardController.html":{},"injectables/BeeyardRepository.html":{},"injectables/BeeyardService.html":{}}}],["update(clientdto",{"_index":652,"title":{},"body":{"controllers/ClientController.html":{},"injectables/ClientRepository.html":{},"injectables/ClientService.html":{}}}],["update(harvesthoneydto",{"_index":799,"title":{},"body":{"controllers/HarvesthoneyController.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HarvesthoneyService.html":{}}}],["update(honeycropdto",{"_index":1025,"title":{},"body":{"controllers/HoneycropController.html":{},"injectables/HoneycropRepository.html":{},"injectables/HoneycropService.html":{}}}],["update(productdto",{"_index":1111,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["updating",{"_index":183,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{}}}],["usa",{"_index":1493,"title":{},"body":{"license.html":{}}}],["usa.also",{"_index":1979,"title":{},"body":{"license.html":{}}}],["use",{"_index":1537,"title":{},"body":{"license.html":{}}}],["used",{"_index":1742,"title":{},"body":{"license.html":{}}}],["useful",{"_index":1976,"title":{},"body":{"license.html":{}}}],["usepipes",{"_index":801,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["user",{"_index":1695,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":1516,"title":{},"body":{"license.html":{}}}],["using",{"_index":1523,"title":{},"body":{"license.html":{}}}],["v2",{"_index":2042,"title":{},"body":{"properties.html":{}}}],["valid",{"_index":1744,"title":{},"body":{"license.html":{}}}],["validatenested",{"_index":332,"title":{},"body":{"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/ProductDto.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{}}}],["validatenested({each",{"_index":759,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{}}}],["validation",{"_index":95,"title":{},"body":{"classes/AddressDto.html":{},"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{}}}],["validationpipe",{"_index":787,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["validator",{"_index":110,"title":{},"body":{"classes/AddressDto.html":{},"classes/BeehiveDto.html":{},"classes/BeekeeperDto.html":{},"classes/BeeyardDto.html":{},"classes/ClientDto.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/HoneycropDto.html":{},"classes/ProductDto.html":{},"classes/RelHarvestHoneycropDto.html":{},"classes/TrackingDto.html":{},"dependencies.html":{}}}],["valide",{"_index":737,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/ProductDto.html":{}}}],["validity",{"_index":1858,"title":{},"body":{"license.html":{}}}],["value",{"_index":150,"title":{},"body":{"injectables/AddressRepository.html":{},"injectables/BeehiveRepository.html":{},"injectables/BeekeeperRepository.html":{},"injectables/BeeyardRepository.html":{},"injectables/ClientRepository.html":{},"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"injectables/HarvesthoneyRepository.html":{},"injectables/HoneycropRepository.html":{},"injectables/ProductRepository.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1364,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2043,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbatim",{"_index":1498,"title":{},"body":{"license.html":{}}}],["version",{"_index":1475,"title":{},"body":{"license.html":{},"properties.html":{}}}],["versions",{"_index":1892,"title":{},"body":{"license.html":{}}}],["vice",{"_index":2025,"title":{},"body":{"license.html":{}}}],["vide",{"_index":1044,"title":{},"body":{"classes/HoneycropDto.html":{},"classes/TrackingDto.html":{}}}],["vide.'})@type(undefined",{"_index":1037,"title":{},"body":{"classes/HoneycropDto.html":{},"classes/TrackingDto.html":{}}}],["vides",{"_index":758,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/ProductDto.html":{},"classes/TrackingDto.html":{}}}],["vides.'})@validatenested({each",{"_index":745,"title":{},"body":{"classes/HarvesthoneyByBeehiveDto.html":{},"classes/HarvesthoneyByBeekeeperDto.html":{},"classes/HarvesthoneyByBeeyardDto.html":{},"classes/HarvesthoneyDto.html":{},"classes/ProductDto.html":{},"classes/TrackingDto.html":{}}}],["view",{"_index":1696,"title":{},"body":{"license.html":{}}}],["vincent",{"_index":1470,"title":{},"body":{"index.html":{},"properties.html":{}}}],["void",{"_index":1792,"title":{},"body":{"license.html":{}}}],["volume",{"_index":1729,"title":{},"body":{"license.html":{}}}],["vos",{"_index":1442,"title":{},"body":{"index.html":{}}}],["w",{"_index":1991,"title":{},"body":{"license.html":{}}}],["want",{"_index":1536,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":1930,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1573,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1456,"title":{},"body":{"index.html":{}}}],["way",{"_index":1687,"title":{},"body":{"license.html":{}}}],["weight",{"_index":1090,"title":{},"body":{"interfaces/Product.html":{},"classes/ProductDto.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["welcome",{"_index":1992,"title":{},"body":{"license.html":{}}}],["whatever",{"_index":2002,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1554,"title":{},"body":{"license.html":{}}}],["whitelist",{"_index":807,"title":{},"body":{"controllers/HarvesthoneyController.html":{}}}],["whole",{"_index":1675,"title":{},"body":{"license.html":{}}}],["whose",{"_index":1520,"title":{},"body":{"license.html":{}}}],["wide",{"_index":1868,"title":{},"body":{"license.html":{}}}],["willing",{"_index":1876,"title":{},"body":{"license.html":{}}}],["wish",{"_index":1533,"title":{},"body":{"license.html":{}}}],["without",{"_index":1629,"title":{},"body":{"license.html":{}}}],["work",{"_index":1606,"title":{},"body":{"license.html":{}}}],["works",{"_index":1707,"title":{},"body":{"license.html":{}}}],["world",{"_index":263,"title":{},"body":{"injectables/AppService.html":{}}}],["write",{"_index":1909,"title":{},"body":{"license.html":{}}}],["writing",{"_index":1925,"title":{},"body":{"license.html":{}}}],["written",{"_index":1720,"title":{},"body":{"license.html":{}}}],["wrote",{"_index":1716,"title":{},"body":{"license.html":{}}}],["year",{"_index":1988,"title":{},"body":{"license.html":{}}}],["years",{"_index":1746,"title":{},"body":{"license.html":{}}}],["yoyodyne",{"_index":2012,"title":{},"body":{"license.html":{}}}],["zipcode",{"_index":15,"title":{},"body":{"interfaces/Address.html":{},"classes/AddressDto.html":{},"injectables/AddressRepository.html":{},"injectables/AddressService.html":{},"injectables/BeekeeperService.html":{},"injectables/BeeyardService.html":{},"injectables/ClientService.html":{},"injectables/ProductRepository.html":{},"injectables/ProductService.html":{}}}],["zoom",{"_index":125,"title":{},"body":{"modules/AddressModule.html":{},"modules/AppModule.html":{},"modules/BeehiveModule.html":{},"modules/BeekeeperModule.html":{},"modules/BeeyardModule.html":{},"modules/ClientModule.html":{},"modules/HarvesthoneyModule.html":{},"modules/HoneycropModule.html":{},"modules/ProductModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/address/interfaces/address.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            additional_address\n                                        \n                                \n                                \n                                        \n                                            city\n                                        \n                                \n                                \n                                        \n                                            country\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            street\n                                        \n                                \n                                \n                                        \n                                            zipcode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        additional_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        additional_address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        zipcode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        zipcode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Address {\n  id: number;\n  street: string;\n  additional_address: string;\n  zipcode: string;\n  city: string;\n  state: string;\n  country: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AddressController.html":{"url":"controllers/AddressController.html","title":"controller - AddressController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AddressController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/address/address.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                address\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/address/address.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(addressDto: AddressDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/address/address.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                addressDto\n                                            \n                                                            AddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpStatus,\n  Param,\n  Put,\n  Res,\n} from '@nestjs/common';\nimport { AddressService } from './address.service';\nimport { Response } from 'express';\nimport { AddressDto } from './dto/address.dto';\n\n@Controller('address')\nexport class AddressController {\n  constructor(private readonly addressService: AddressService) {}\n\n  /**\n   *\n   * @param addressDto\n   * @param res\n   */\n  @Put()\n  async update(@Body() addressDto: AddressDto, @Res() res: Response) {\n    try {\n      await this.addressService.update(addressDto);\n      res.status(HttpStatus.OK).json(addressDto);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la mise à jour de l'address : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Get(':id')\n  async findOne(@Param('id') id: string, @Res() res: Response) {\n    const addressId = Number(id);\n    if (isNaN(addressId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant adresse invalide' });\n    }\n\n    try {\n      const address = await this.addressService.findOne(addressId);\n      res.status(HttpStatus.OK).json(address);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la récupération de l'adresse : ${err.message}`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddressDto.html":{"url":"classes/AddressDto.html","title":"class - AddressDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddressDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/address/dto/address.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Address\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                additional_address\n                            \n                            \n                                    \n                                    \n                                city\n                            \n                            \n                                    \n                                    \n                                country\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                state\n                            \n                            \n                                    \n                                    \n                                street\n                            \n                            \n                                    \n                                    \n                                zipcode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        additional_address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'la validation a échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/address/dto/address.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        city\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/address/dto/address.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'la validation a échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/address/dto/address.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/address/dto/address.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'la validation a échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/address/dto/address.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        street\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/address/dto/address.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        zipcode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/address/dto/address.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\nimport { Address } from '../interfaces/address.interface';\n\nexport class AddressDto implements Address {\n  @IsOptional()\n  @IsNumber()\n  id: number;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  street: string;\n\n  @IsOptional()\n  @IsString({ message: 'la validation a échoué' })\n  additional_address: string;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  zipcode: string;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  city: string;\n\n  @IsOptional()\n  @IsString({ message: 'la validation a échoué' })\n  state: string;\n\n  @IsOptional()\n  @IsString({ message: 'la validation a échoué' })\n  country: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AddressModule.html":{"url":"modules/AddressModule.html","title":"module - AddressModule","body":"\n                   \n\n\n\n\n    Modules\n    AddressModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressModule\n\n\n\ncluster_AddressModule_exports\n\n\n\ncluster_AddressModule_providers\n\n\n\n\nAddressService \n\nAddressService \n\n\n\nAddressModule\n\nAddressModule\n\nAddressService  -->\n\nAddressModule->AddressService \n\n\n\n\n\nAddressRepository\n\nAddressRepository\n\nAddressModule -->\n\nAddressRepository->AddressModule\n\n\n\n\n\nAddressService\n\nAddressService\n\nAddressModule -->\n\nAddressService->AddressModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/beekeeping/address/address.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AddressRepository\n                        \n                        \n                            AddressService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AddressController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AddressService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AddressController } from './address.controller';\nimport { AddressRepository } from './address.repository';\nimport { AddressService } from './address.service';\n\n@Module({\n  controllers: [AddressController],\n  providers: [AddressService, AddressRepository],\n  exports: [AddressService],\n})\nexport class AddressModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressRepository.html":{"url":"injectables/AddressRepository.html","title":"injectable - AddressRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/address/address.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                SQL_DELETE\n                            \n                            \n                                SQL_FIND_ONE\n                            \n                            \n                                SQL_INSERT\n                            \n                            \n                                SQL_UPDATE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(addressDto: AddressDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/address/address.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                addressDto\n                                            \n                                                            AddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/address/address.repository.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/address/address.repository.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(addressDto: AddressDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/address/address.repository.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                addressDto\n                                            \n                                                            AddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(AddressRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/address/address.repository.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_DELETE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `DELETE FROM address WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/address/address.repository.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_FIND_ONE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT * FROM address WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/address/address.repository.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_INSERT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `INSERT INTO address SET street = ?, additional_address = ?, zipcode = ?, city = ?, state = ?, country = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/address/address.repository.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_UPDATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `UPDATE address SET street = ?, additional_address = ?, zipcode = ?, city = ?, state = ?, country = ? WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/address/address.repository.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common';\nimport { AddressDto } from './dto/address.dto';\nimport { pool } from '../../database/mysql.config';\n\n@Injectable()\nexport class AddressRepository {\n  SQL_INSERT = `INSERT INTO address SET street = ?, additional_address = ?, zipcode = ?, city = ?, state = ?, country = ?`;\n  SQL_UPDATE = `UPDATE address SET street = ?, additional_address = ?, zipcode = ?, city = ?, state = ?, country = ? WHERE id = ?`;\n  SQL_DELETE = `DELETE FROM address WHERE id = ?`;\n  SQL_FIND_ONE = `SELECT * FROM address WHERE id = ?`;\n\n  private readonly logger: Logger = new Logger(AddressRepository.name);\n\n  /**\n   *\n   * @param addressDto\n   */\n  async create(addressDto: AddressDto) {\n    try {\n      return await pool.execute(this.SQL_INSERT, [\n        addressDto.street,\n        addressDto.additional_address,\n        addressDto.zipcode,\n        addressDto.city,\n        addressDto.state,\n        addressDto.country,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error inserting address data', err.stack);\n      throw new BadRequestException(`Erreur d'insertion des données`);\n    }\n  }\n\n  /**\n   *\n   * @param addressDto\n   */\n  async update(addressDto: AddressDto) {\n    try {\n      return await pool.execute(this.SQL_UPDATE, [\n        addressDto.street,\n        addressDto.additional_address,\n        addressDto.zipcode,\n        addressDto.city,\n        addressDto.state,\n        addressDto.country,\n        addressDto.id,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error updating address data', err.stack);\n      throw new BadRequestException(`Erreur de mise à jour des données`);\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      return pool.execute(this.SQL_DELETE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error deleting address', err.stack);\n      throw new BadRequestException(`Erreur de suppression de l'adresse`);\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      return pool.execute(this.SQL_FIND_ONE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error getting address data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AddressService.html":{"url":"injectables/AddressService.html","title":"injectable - AddressService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AddressService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/address/address.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(addressRepository: AddressRepository)\n                    \n                \n                        \n                            \n                                Defined in src/beekeeping/address/address.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        addressRepository\n                                                  \n                                                        \n                                                                        AddressRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(addressDto: AddressDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/address/address.service.ts:13\n                        \n                    \n\n\n            \n                \n                        Création d'une adresse\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                addressDto\n                                            \n                                                            AddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/address/address.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Suppression d'un adresse\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/address/address.service.ts:60\n                        \n                    \n\n\n            \n                \n                        Récupération d'une adresse\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(addressDto: AddressDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/address/address.service.ts:34\n                        \n                    \n\n\n            \n                \n                        Mise à jour d'une adresse\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                addressDto\n                                            \n                                                            AddressDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { AddressRepository } from './address.repository';\nimport { AddressDto } from './dto/address.dto';\n\n@Injectable()\nexport class AddressService {\n  constructor(private readonly addressRepository: AddressRepository) {}\n\n  /**\n   * Création d'une adresse\n   * @param addressDto\n   */\n  async create(addressDto: AddressDto) {\n    try {\n      const [result] = await this.addressRepository.create(addressDto);\n      const id = (result as any).insertId;\n      if (!id) {\n        throw new HttpException(\n          `Erreur dans la création de l'adresse`,\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n\n      return { id, ...addressDto };\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Mise à jour d'une adresse\n   * @param addressDto\n   */\n  async update(addressDto: AddressDto) {\n    try {\n      await this.addressRepository.update(addressDto);\n      return addressDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Suppression d'un adresse\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      const [addressDelete] = await this.addressRepository.delete(id);\n      return addressDelete;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération d'une adresse\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      const [rows] = await this.addressRepository.findOne(id);\n      if (!rows) {\n        return undefined;\n      }\n      const row = rows[0];\n      return {\n        id: row.id,\n        street: row.street,\n        additional_address: row.additional_address,\n        zipcode: row.zipcode,\n        city: row.city,\n        state: row.state,\n        country: row.country,\n      } as AddressDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAddressModule\n\nAddressModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModule->AppModule\n\n\n\n\n\nBeehiveModule\n\nBeehiveModule\n\nAppModule -->\n\nBeehiveModule->AppModule\n\n\n\n\n\nBeekeeperModule\n\nBeekeeperModule\n\nAppModule -->\n\nBeekeeperModule->AppModule\n\n\n\n\n\nBeeyardModule\n\nBeeyardModule\n\nAppModule -->\n\nBeeyardModule->AppModule\n\n\n\n\n\nClientModule\n\nClientModule\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nHarvesthoneyModule\n\nHarvesthoneyModule\n\nAppModule -->\n\nHarvesthoneyModule->AppModule\n\n\n\n\n\nHoneycropModule\n\nHoneycropModule\n\nAppModule -->\n\nHoneycropModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressModule\n                        \n                        \n                            BeehiveModule\n                        \n                        \n                            BeekeeperModule\n                        \n                        \n                            BeeyardModule\n                        \n                        \n                            ClientModule\n                        \n                        \n                            HarvesthoneyModule\n                        \n                        \n                            HoneycropModule\n                        \n                        \n                            ProductModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { BeekeeperModule } from './beekeeping/beekeeper/beekeeper.module';\nimport { AddressModule } from './beekeeping/address/address.module';\nimport { BeeyardModule } from './beekeeping/beeyard/beeyard.module';\nimport { BeehiveModule } from './beekeeping/beehive/beehive.module';\nimport { HoneycropModule } from './beekeeping/honey/honeycrop/honeycrop.module';\nimport { HarvesthoneyModule } from './beekeeping/honey/harvesthoney/harvesthoney.module';\nimport { ClientController } from './store/client/client.controller';\nimport { ClientService } from './store/client/client.service';\nimport { ClientModule } from './store/client/client.module';\nimport { ProductModule } from './store/product/product.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n    }),\n    BeekeeperModule,\n    AddressModule,\n    BeeyardModule,\n    BeehiveModule,\n    HoneycropModule,\n    HarvesthoneyModule,\n    ClientModule,\n    ProductModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Beehive.html":{"url":"interfaces/Beehive.html","title":"interface - Beehive","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Beehive\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beehive/interfaces/beehive.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bee_type\n                                        \n                                \n                                \n                                        \n                                            beeyard\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            type_hive\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bee_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bee_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beeyard\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beeyard:         Beeyard\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Beeyard\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type_hive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type_hive:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beeyard } from '../../beeyard/interfaces/beeyard.interface';\n\nexport interface Beehive {\n  id: number;\n  bee_type: string;\n  name: string;\n  type_hive: string;\n  beeyard: Beeyard;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BeehiveController.html":{"url":"controllers/BeehiveController.html","title":"controller - BeehiveController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BeehiveController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beehive/beehive.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                beehive\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                findAllByBeekeeper\n                            \n                            \n                                    \n                                    Async\n                                findAllByBeeyard\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(beehiveDto: BeehiveDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beehiveDto\n                                            \n                                                            BeehiveDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAllByBeekeeper\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeekeeper(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/beekeeper/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.controller.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAllByBeeyard\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeeyard(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/beeyard/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.controller.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(beehiveDto: BeehiveDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beehiveDto\n                                            \n                                                            BeehiveDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Post,\n  Put,\n  Res,\n} from '@nestjs/common';\nimport { BeehiveService } from './beehive.service';\nimport { BeehiveDto } from './dto/beehive.dto';\nimport { Response } from 'express';\n\n@Controller('beehive')\nexport class BeehiveController {\n  constructor(private readonly beehiveService: BeehiveService) {}\n\n  /**\n   *\n   * @param beehiveDto\n   * @param res\n   */\n  @Post()\n  async create(@Body() beehiveDto: BeehiveDto, @Res() res: Response) {\n    try {\n      const beehive: BeehiveDto = await this.beehiveService.create(beehiveDto);\n      res.status(HttpStatus.CREATED).json(beehive);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la création de la ruche : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param beehiveDto\n   * @param res\n   */\n  @Put()\n  async update(@Body() beehiveDto: BeehiveDto, @Res() res: Response) {\n    try {\n      const beehive: BeehiveDto = await this.beehiveService.update(beehiveDto);\n      res.status(HttpStatus.OK).json(beehive);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la mise a jour de la ruche : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Delete(':id')\n  async delete(@Param('id') id: string, @Res() res: Response) {\n    const beehiveId: number = Number(id);\n    if (isNaN(beehiveId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant de la ruche invalide' });\n    }\n\n    try {\n      await this.beehiveService.delete(beehiveId);\n      res\n        .status(HttpStatus.OK)\n        .json({ message: 'Ruche supprimée avec succès' });\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la suppression de la ruche : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Get(':id')\n  async findOne(@Param('id') id: string, @Res() res: Response) {\n    const beehiveId: number = Number(id);\n    if (isNaN(beehiveId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant de la ruche invalide' });\n    }\n\n    try {\n      const beehive: BeehiveDto = await this.beehiveService.findOne(beehiveId);\n      res.status(HttpStatus.OK).json(beehive);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur lors de la récupération de la ruche : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Get('/beeyard/:id')\n  async findAllByBeeyard(@Param('id') id: string, @Res() res: Response) {\n    const beeyardId: number = Number(id);\n    if (isNaN(beeyardId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant du rucher invalide' });\n    }\n\n    try {\n      const beehives: BeehiveDto[] =\n        await this.beehiveService.findAllByBeeyard(beeyardId);\n      res.status(HttpStatus.OK).json(beehives);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur lors de la récupération des ruches : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Get('/beekeeper/:id')\n  async findAllByBeekeeper(@Param('id') id: string, @Res() res: Response) {\n    const beekeeperId: number = Number(id);\n    if (isNaN(beekeeperId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant apiculteur invalide' });\n    }\n\n    try {\n      const beehives: BeehiveDto[] =\n        await this.beehiveService.findAllByBeekeeper(beekeeperId);\n      res.status(HttpStatus.OK).json(beehives);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur lors de la récupération des ruches : ${err.message}`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BeehiveDto.html":{"url":"classes/BeehiveDto.html","title":"class - BeehiveDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BeehiveDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beehive/dto/beehive.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Beehive\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bee_type\n                            \n                            \n                                    \n                                    \n                                    \n                                beeyard\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                type_hive\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bee_type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beehive/dto/beehive.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        beeyard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BeeyardDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ValidateNested({message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beehive/dto/beehive.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beehive/dto/beehive.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beehive/dto/beehive.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type_hive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beehive/dto/beehive.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Beehive } from '../interfaces/beehive.interface';\nimport { IsNotEmpty, IsNumber, IsOptional, IsString, ValidateNested } from \"class-validator\";\nimport { Type } from 'class-transformer';\nimport { BeeyardDto } from '../../beeyard/dto/beeyard.dto';\n\nexport class BeehiveDto implements Beehive {\n  @IsOptional()\n  @IsNumber()\n  id: number;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  bee_type: string;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  name: string;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  type_hive: string;\n\n  @IsNotEmpty()\n  @ValidateNested({ message: 'la validation échoué' })\n  @Type(() => BeeyardDto)\n  beeyard: BeeyardDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BeehiveModule.html":{"url":"modules/BeehiveModule.html","title":"module - BeehiveModule","body":"\n                   \n\n\n\n\n    Modules\n    BeehiveModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BeehiveModule\n\n\n\ncluster_BeehiveModule_providers\n\n\n\n\nBeehiveRepository\n\nBeehiveRepository\n\n\n\nBeehiveModule\n\nBeehiveModule\n\nBeehiveModule -->\n\nBeehiveRepository->BeehiveModule\n\n\n\n\n\nBeehiveService\n\nBeehiveService\n\nBeehiveModule -->\n\nBeehiveService->BeehiveModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/beekeeping/beehive/beehive.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BeehiveRepository\n                        \n                        \n                            BeehiveService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BeehiveController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BeehiveController } from './beehive.controller';\nimport { BeehiveService } from './beehive.service';\nimport { BeehiveRepository } from './beehive.repository';\n\n@Module({\n  controllers: [BeehiveController],\n  providers: [BeehiveService, BeehiveRepository],\n})\nexport class BeehiveModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BeehiveRepository.html":{"url":"injectables/BeehiveRepository.html","title":"injectable - BeehiveRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BeehiveRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beehive/beehive.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                SQL_DELETE\n                            \n                            \n                                SQL_FIND_ALL_BY_BEEKEEPER\n                            \n                            \n                                SQL_FIND_ALL_BY_BEEYARD\n                            \n                            \n                                SQL_FIND_ONE\n                            \n                            \n                                SQL_INSERT\n                            \n                            \n                                SQL_UPDATE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllByBeekeeper\n                            \n                            \n                                    Async\n                                findAllByBeeyard\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(beehiveDto: BeehiveDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.repository.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beehiveDto\n                                            \n                                                            BeehiveDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.repository.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByBeekeeper\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeekeeper(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.repository.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByBeeyard\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeeyard(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.repository.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.repository.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(beehiveDto: BeehiveDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.repository.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beehiveDto\n                                            \n                                                            BeehiveDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BeehiveRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beehive/beehive.repository.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_DELETE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `DELETE FROM beehive WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beehive/beehive.repository.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_FIND_ALL_BY_BEEKEEPER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT bh.*, be.environment, be.name as beeyard_name, be.id_beekeeper, be.id_address \n                    FROM beehive bh\n                    INNER JOIN beeyard be ON bh.id_beeyard = be.id\n                    INNER JOIN beekeeper bk ON be.id_beekeeper = bk.id\n                    WHERE bk.id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beehive/beehive.repository.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_FIND_ALL_BY_BEEYARD\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT bh.*, be.environment, be.name as beeyard_name, be.id_beekeeper, be.id_address \n                    FROM beehive bh\n                    INNER JOIN beeyard be ON bh.id_beeyard = be.id\n                    WHERE be.id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beehive/beehive.repository.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_FIND_ONE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT * FROM beehive WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beehive/beehive.repository.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_INSERT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `INSERT INTO beehive SET bee_type = ?, name = ?, type_hive = ?, id_beeyard = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beehive/beehive.repository.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_UPDATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `UPDATE beehive SET bee_type = ?, name = ?, type_hive = ?, id_beeyard = ? WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beehive/beehive.repository.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common';\nimport { BeehiveDto } from './dto/beehive.dto';\nimport { pool } from '../../database/mysql.config';\n\n@Injectable()\nexport class BeehiveRepository {\n  SQL_INSERT = `INSERT INTO beehive SET bee_type = ?, name = ?, type_hive = ?, id_beeyard = ?`;\n  SQL_UPDATE = `UPDATE beehive SET bee_type = ?, name = ?, type_hive = ?, id_beeyard = ? WHERE id = ?`;\n  SQL_DELETE = `DELETE FROM beehive WHERE id = ?`;\n  SQL_FIND_ONE = `SELECT * FROM beehive WHERE id = ?`;\n  SQL_FIND_ALL_BY_BEEYARD = `SELECT bh.*, be.environment, be.name as beeyard_name, be.id_beekeeper, be.id_address \n                    FROM beehive bh\n                    INNER JOIN beeyard be ON bh.id_beeyard = be.id\n                    WHERE be.id = ?`;\n  SQL_FIND_ALL_BY_BEEKEEPER = `SELECT bh.*, be.environment, be.name as beeyard_name, be.id_beekeeper, be.id_address \n                    FROM beehive bh\n                    INNER JOIN beeyard be ON bh.id_beeyard = be.id\n                    INNER JOIN beekeeper bk ON be.id_beekeeper = bk.id\n                    WHERE bk.id = ?`;\n\n  private readonly logger = new Logger(BeehiveRepository.name);\n\n  /**\n   *\n   * @param beehiveDto\n   */\n  async create(beehiveDto: BeehiveDto) {\n    try {\n      return await pool.execute(this.SQL_INSERT, [\n        beehiveDto.bee_type,\n        beehiveDto.name,\n        beehiveDto.type_hive,\n        beehiveDto.beeyard.id,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error inserting beehive data', err.stack);\n      throw new BadRequestException(`Erreur d'insertion des données`);\n    }\n  }\n\n  /**\n   *\n   * @param beehiveDto\n   */\n  async update(beehiveDto: BeehiveDto) {\n    try {\n      return await pool.execute(this.SQL_UPDATE, [\n        beehiveDto.bee_type,\n        beehiveDto.name,\n        beehiveDto.type_hive,\n        beehiveDto.beeyard.id,\n        beehiveDto.id,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error updating beehive data', err.stack);\n      throw new BadRequestException(\n        `Erreur de mise à jour des données des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      return await pool.execute(this.SQL_DELETE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error deleting beehive data', err.stack);\n      throw new BadRequestException(\n        `Erreur de suppression des données des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      return await pool.execute(this.SQL_FIND_ONE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error getting beehive data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async findAllByBeeyard(id: number) {\n    try {\n      return await pool.execute(this.SQL_FIND_ALL_BY_BEEYARD, [id]);\n    } catch (err: any) {\n      this.logger.error('Error getting by beeyard beehive data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async findAllByBeekeeper(id: number) {\n    try {\n      return await pool.execute(this.SQL_FIND_ALL_BY_BEEKEEPER, [id]);\n    } catch (err: any) {\n      this.logger.error('Error getting by beekeeper beehive data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BeehiveService.html":{"url":"injectables/BeehiveService.html","title":"injectable - BeehiveService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BeehiveService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beehive/beehive.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllByBeekeeper\n                            \n                            \n                                    Async\n                                findAllByBeeyard\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(beehiveRepository: BeehiveRepository)\n                    \n                \n                        \n                            \n                                Defined in src/beekeeping/beehive/beehive.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        beehiveRepository\n                                                  \n                                                        \n                                                                        BeehiveRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(beehiveDto: BeehiveDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.service.ts:13\n                        \n                    \n\n\n            \n                \n                        Création d'un ruche\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beehiveDto\n                                            \n                                                            BeehiveDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Suppression d'un ruche\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByBeekeeper\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeekeeper(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.service.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByBeeyard\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeeyard(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Récupération des informations d'une ruche\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(beehiveDto: BeehiveDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beehive/beehive.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Mise à jour des données de la ruche\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beehiveDto\n                                            \n                                                            BeehiveDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { BeehiveRepository } from './beehive.repository';\nimport { BeehiveDto } from './dto/beehive.dto';\n\n@Injectable()\nexport class BeehiveService {\n  constructor(private readonly beehiveRepository: BeehiveRepository) {}\n\n  /**\n   * Création d'un ruche\n   * @param beehiveDto\n   */\n  async create(beehiveDto: BeehiveDto) {\n    try {\n      const [result] = await this.beehiveRepository.create(beehiveDto);\n      const id = (result as any).insertId;\n      if (!id) {\n        throw new HttpException(\n          `Erreur dans la création de la ruche`,\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n\n      return {\n        id: id,\n        bee_type: beehiveDto.bee_type,\n        name: beehiveDto.name,\n        type_hive: beehiveDto.type_hive,\n        beeyard: beehiveDto.beeyard,\n      } as BeehiveDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Mise à jour des données de la ruche\n   * @param beehiveDto\n   */\n  async update(beehiveDto: BeehiveDto) {\n    try {\n      await this.beehiveRepository.update(beehiveDto);\n      return beehiveDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Suppression d'un ruche\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      const result = await this.beehiveRepository.delete(id);\n      return result;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération des informations d'une ruche\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      const [rows] = await this.beehiveRepository.findOne(id);\n      if (!rows) {\n        return undefined;\n      }\n      const row = rows[0];\n      return {\n        id: row.id,\n        bee_type: row.bee_type,\n        name: row.name,\n        type_hive: row.type_hive,\n        beeyard: { id: row.id_beeyard },\n      } as BeehiveDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async findAllByBeeyard(id: number) {\n    try {\n      const [rows] = await this.beehiveRepository.findAllByBeeyard(id);\n      if (!rows) {\n        return undefined;\n      }\n\n      const beehives: BeehiveDto[] = [];\n\n      for (const beehive of rows as any) {\n        beehives.push({\n          id: beehive.id,\n          bee_type: beehive.bee_type,\n          name: beehive.name,\n          type_hive: beehive.type_hive,\n          beeyard: {\n            id: id,\n            environment: beehive.environment,\n            name: beehive.beeyard_name,\n            beekeeper: { id: beehive.beeyard_name },\n            address: { id: beehive.id_address },\n          },\n        } as BeehiveDto);\n      }\n      return beehives;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async findAllByBeekeeper(id: number) {\n    try {\n      const [rows] = await this.beehiveRepository.findAllByBeekeeper(id);\n      if (!rows) {\n        return undefined;\n      }\n\n      const beehives: BeehiveDto[] = [];\n\n      for (const beehive of rows as any) {\n        beehives.push({\n          id: beehive.id,\n          bee_type: beehive.bee_type,\n          name: beehive.name,\n          type_hive: beehive.type_hive,\n          beeyard: {\n            id: beehive.id_beeyard,\n            environment: beehive.environment,\n            name: beehive.beeyard_name,\n            beekeeper: { id: id },\n            address: { id: beehive.id_address },\n          },\n        } as BeehiveDto);\n      }\n      return beehives;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Beekeeper.html":{"url":"interfaces/Beekeeper.html","title":"interface - Beekeeper","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Beekeeper\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beekeeper/interfaces/beekeeper.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            napi\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                                \n                                        \n                                            siret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        napi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        napi:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        siret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        siret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Address } from '../../address/interfaces/address.interface';\n\nexport interface Beekeeper {\n  id: number;\n  lastname: string;\n  firstname: string;\n  siret: string;\n  napi: string;\n  email: string;\n  phone: string;\n  address: Address;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BeekeeperController.html":{"url":"controllers/BeekeeperController.html","title":"controller - BeekeeperController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BeekeeperController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beekeeper/beekeeper.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                beekeeper\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(beekeeperDto: BeekeeperDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beekeeperDto\n                                            \n                                                            BeekeeperDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(beekeeperDto: BeekeeperDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beekeeperDto\n                                            \n                                                            BeekeeperDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Post,\n  Put,\n  Res,\n} from '@nestjs/common';\nimport { Response } from 'express';\nimport { BeekeeperService } from './beekeeper.service';\nimport { BeekeeperDto } from './dto/beekeeper.dto';\n\n@Controller('beekeeper')\nexport class BeekeeperController {\n  constructor(private readonly beekeeperService: BeekeeperService) {}\n\n  /**\n   *\n   * @param beekeeperDto\n   * @param res\n   */\n  @Post()\n  async create(@Body() beekeeperDto: BeekeeperDto, @Res() res: Response) {\n    try {\n      const beekeeper = await this.beekeeperService.create(beekeeperDto);\n      res.status(HttpStatus.CREATED).json(beekeeper);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la création de l'apiculteur : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param beekeeperDto\n   * @param res\n   */\n  @Put()\n  async update(@Body() beekeeperDto: BeekeeperDto, @Res() res: Response) {\n    try {\n      const beekeeperUpdated = await this.beekeeperService.update(beekeeperDto);\n      res.status(HttpStatus.OK).json(beekeeperUpdated);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la mise à jour de l'apiculteur : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Delete(':id')\n  async delete(@Param('id') id: string, @Res() res: Response) {\n    const beekeeperId = Number(id);\n    if (isNaN(beekeeperId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant apiculteur invalide' });\n    }\n\n    try {\n      await this.beekeeperService.delete(beekeeperId);\n      res\n        .status(HttpStatus.OK)\n        .json({ message: 'Apiculteur supprimé avec succès.' });\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la suppression de l'apiculteur : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Get(':id')\n  async findOne(@Param('id') id: string, @Res() res: Response) {\n    const beekeeperId = Number(id);\n    if (isNaN(beekeeperId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant apiculteur invalide' });\n    }\n\n    try {\n      const beekeeper = await this.beekeeperService.findOne(beekeeperId);\n      res.status(HttpStatus.OK).json(beekeeper);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la récupération de l'apiculteur : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param res\n   */\n  @Get()\n  async findAll(@Res() res: Response) {\n    try {\n      const beekeepers = await this.beekeeperService.findAll();\n      res.status(HttpStatus.OK).json(beekeepers);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la récupération des apiculteurs : ${err.message}`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BeekeeperDto.html":{"url":"classes/BeekeeperDto.html","title":"class - BeekeeperDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BeekeeperDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beekeeper/dto/beekeeper.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Beekeeper\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstname\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastname\n                            \n                            \n                                    \n                                    \n                                napi\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                            \n                                    \n                                    \n                                siret\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ValidateNested({message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/dto/beekeeper.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail({}, {message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/dto/beekeeper.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/dto/beekeeper.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/dto/beekeeper.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/dto/beekeeper.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        napi\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/dto/beekeeper.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPhoneNumber('FR', {message: 'la validation a échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/dto/beekeeper.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        siret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsString({message: 'la validation a échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/dto/beekeeper.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { AddressDto } from '../../address/dto/address.dto';\nimport { Type } from 'class-transformer';\nimport { Beekeeper } from '../interfaces/beekeeper.interface';\n\nexport class BeekeeperDto implements Beekeeper {\n  @IsOptional()\n  @IsNumber()\n  id: number;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  firstname: string;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  lastname: string;\n\n  @IsOptional()\n  @IsString({ message: 'la validation a échoué' })\n  siret: string;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  napi: string;\n\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'la validation échoué' })\n  email: string;\n\n  @IsOptional()\n  @IsPhoneNumber('FR', { message: 'la validation a échoué' })\n  phone: string;\n\n  @IsNotEmpty()\n  @ValidateNested({ message: 'la validation échoué' })\n  @Type(() => AddressDto)\n  address: AddressDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BeekeeperModule.html":{"url":"modules/BeekeeperModule.html","title":"module - BeekeeperModule","body":"\n                   \n\n\n\n\n    Modules\n    BeekeeperModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BeekeeperModule\n\n\n\ncluster_BeekeeperModule_imports\n\n\n\ncluster_BeekeeperModule_providers\n\n\n\n\nAddressModule\n\nAddressModule\n\n\n\nBeekeeperModule\n\nBeekeeperModule\n\nBeekeeperModule -->\n\nAddressModule->BeekeeperModule\n\n\n\n\n\nBeekeeperRepository\n\nBeekeeperRepository\n\nBeekeeperModule -->\n\nBeekeeperRepository->BeekeeperModule\n\n\n\n\n\nBeekeeperService\n\nBeekeeperService\n\nBeekeeperModule -->\n\nBeekeeperService->BeekeeperModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/beekeeping/beekeeper/beekeeper.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BeekeeperRepository\n                        \n                        \n                            BeekeeperService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BeekeeperController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BeekeeperController } from './beekeeper.controller';\nimport { BeekeeperRepository } from './beekeeper.repository';\nimport { BeekeeperService } from './beekeeper.service';\nimport { AddressModule } from '../address/address.module';\n\n@Module({\n  imports: [AddressModule],\n  controllers: [BeekeeperController],\n  providers: [BeekeeperService, BeekeeperRepository],\n})\nexport class BeekeeperModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BeekeeperRepository.html":{"url":"injectables/BeekeeperRepository.html","title":"injectable - BeekeeperRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BeekeeperRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beekeeper/beekeeper.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                SQL_DELETE\n                            \n                            \n                                SQL_FIND_ALL\n                            \n                            \n                                SQL_FIND_ONE\n                            \n                            \n                                SQL_INSERT\n                            \n                            \n                                SQL_UPDATE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(beekeeperDto: BeekeeperDto, idAddress: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.repository.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beekeeperDto\n                                            \n                                                            BeekeeperDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                idAddress\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.repository.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.repository.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.repository.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(beekeeperDto: BeekeeperDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.repository.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beekeeperDto\n                                            \n                                                            BeekeeperDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BeekeeperRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/beekeeper.repository.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_DELETE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `DELETE FROM beekeeper WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/beekeeper.repository.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_FIND_ALL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT * FROM beekeeper`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/beekeeper.repository.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_FIND_ONE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT b.*, a.street, a.additional_address, a.zipcode, a.city, a.state, a.country \n          from beekeeper b \n          INNER JOIN address a ON b.id_address = a.id \n          WHERE b.id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/beekeeper.repository.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_INSERT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `INSERT INTO beekeeper SET firstname = ?, lastname = ?, siret = ?, napi = ?, email = ?, phone = ?, id_address = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/beekeeper.repository.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_UPDATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `UPDATE beekeeper SET firstname = ?, lastname = ?, siret = ?, napi = ?, email = ?, phone = ? WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beekeeper/beekeeper.repository.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common';\nimport { BeekeeperDto } from './dto/beekeeper.dto';\nimport { pool } from '../../database/mysql.config';\n\n@Injectable()\nexport class BeekeeperRepository {\n  SQL_INSERT = `INSERT INTO beekeeper SET firstname = ?, lastname = ?, siret = ?, napi = ?, email = ?, phone = ?, id_address = ?`;\n  SQL_FIND_ALL = `SELECT * FROM beekeeper`;\n  SQL_FIND_ONE = `SELECT b.*, a.street, a.additional_address, a.zipcode, a.city, a.state, a.country \n          from beekeeper b \n          INNER JOIN address a ON b.id_address = a.id \n          WHERE b.id = ?`;\n  SQL_UPDATE = `UPDATE beekeeper SET firstname = ?, lastname = ?, siret = ?, napi = ?, email = ?, phone = ? WHERE id = ?`;\n  SQL_DELETE = `DELETE FROM beekeeper WHERE id = ?`;\n\n  private readonly logger = new Logger(BeekeeperRepository.name);\n\n  /**\n   *\n   * @param beekeeperDto\n   * @param idAddress\n   */\n  async create(beekeeperDto: BeekeeperDto, idAddress: number) {\n    try {\n      return await pool.execute(this.SQL_INSERT, [\n        beekeeperDto.firstname,\n        beekeeperDto.lastname,\n        beekeeperDto.siret,\n        beekeeperDto.napi,\n        beekeeperDto.email,\n        beekeeperDto.phone,\n        idAddress,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error inserting beekeeper data', err.stack);\n      throw new BadRequestException(`Erreur d'insertion des données`);\n    }\n  }\n\n  /**\n   *\n   * @param beekeeperDto\n   */\n  async update(beekeeperDto: BeekeeperDto) {\n    try {\n      return await pool.execute(this.SQL_UPDATE, [\n        beekeeperDto.firstname,\n        beekeeperDto.lastname,\n        beekeeperDto.siret,\n        beekeeperDto.napi,\n        beekeeperDto.email,\n        beekeeperDto.phone,\n        beekeeperDto.id,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error updating beekeeper data', err.stack);\n      throw new BadRequestException(`Erreur de mise à jour des données`);\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      return await pool.execute(this.SQL_DELETE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error deleting beekeeper', err.stack);\n      throw new BadRequestException(`Erreur de suppression de l'apiculteur`);\n    }\n  }\n\n  /**\n   *\n   */\n  async findAll() {\n    try {\n      return await pool.execute(this.SQL_FIND_ALL);\n    } catch (err: any) {\n      this.logger.error('Error getting all beekeeper data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      return await pool.execute(this.SQL_FIND_ONE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error getting beekeeper data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BeekeeperService.html":{"url":"injectables/BeekeeperService.html","title":"injectable - BeekeeperService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BeekeeperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beekeeper/beekeeper.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(beekeeperRepository: BeekeeperRepository, addressService: AddressService)\n                    \n                \n                        \n                            \n                                Defined in src/beekeeping/beekeeper/beekeeper.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        beekeeperRepository\n                                                  \n                                                        \n                                                                        BeekeeperRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(beekeeperDto: BeekeeperDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Création d'un apiculteur et de son adresse\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beekeeperDto\n                                            \n                                                            BeekeeperDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Suppression d'un apiculteur et de son adresse\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.service.ts:82\n                        \n                    \n\n\n            \n                \n                        Récupération de tout les apiculteurs\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.service.ts:95\n                        \n                    \n\n\n            \n                \n                        Récupération d'un apiculteur par son id et de sont adresse\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(beekeeperDto: BeekeeperDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beekeeper/beekeeper.service.ts:55\n                        \n                    \n\n\n            \n                \n                        Mise à jour de l'apiculteur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beekeeperDto\n                                            \n                                                            BeekeeperDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { BeekeeperRepository } from './beekeeper.repository';\nimport { BeekeeperDto } from './dto/beekeeper.dto';\nimport { AddressService } from '../address/address.service';\nimport { AddressDto } from '../address/dto/address.dto';\n\n@Injectable()\nexport class BeekeeperService {\n  constructor(\n    private readonly beekeeperRepository: BeekeeperRepository,\n    private readonly addressService: AddressService,\n  ) {}\n\n  /**\n   * Création d'un apiculteur et de son adresse\n   * @param beekeeperDto\n   */\n  async create(beekeeperDto: BeekeeperDto) {\n    try {\n      const address: AddressDto = await this.addressService.create(\n        beekeeperDto.address,\n      );\n\n      const [result] = await this.beekeeperRepository.create(\n        beekeeperDto,\n        address.id,\n      );\n      const id = (result as any).insertId;\n      if (!id) {\n        throw new HttpException(\n          `Erreur dans la création de l'apiculteur`,\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n\n      return {\n        id: id,\n        lastname: beekeeperDto.lastname,\n        firstname: beekeeperDto.firstname,\n        siret: beekeeperDto.siret,\n        napi: beekeeperDto.napi,\n        email: beekeeperDto.email,\n        phone: beekeeperDto.phone,\n        address,\n      } as BeekeeperDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Mise à jour de l'apiculteur\n   * @param beekeeperDto\n   */\n  async update(beekeeperDto: BeekeeperDto) {\n    try {\n      await this.beekeeperRepository.update(beekeeperDto);\n      return beekeeperDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Suppression d'un apiculteur et de son adresse\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      const beekeeper = await this.findOne(id);\n      const [beekeeperDelete] = await this.beekeeperRepository.delete(id);\n      await this.addressService.delete(beekeeper.address.id);\n      return beekeeperDelete;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération de tout les apiculteurs\n   */\n  async findAll() {\n    try {\n      const [rows] = await this.beekeeperRepository.findAll();\n      return rows;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération d'un apiculteur par son id et de sont adresse\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      const [rows] = await this.beekeeperRepository.findOne(id);\n      if (!rows) {\n        return undefined;\n      }\n      const row = rows[0];\n      const address: AddressDto = {\n        id: row.id_address,\n        street: row.street,\n        additional_address: row.additional_address,\n        zipcode: row.zipcode,\n        city: row.city,\n        state: row.state,\n        country: row.country,\n      };\n      return {\n        id: row.id,\n        firstname: row.firstname,\n        lastname: row.lastname,\n        siret: row.siret,\n        napi: row.napi,\n        email: row.email,\n        phone: row.phone,\n        address: address,\n      } as BeekeeperDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Beeyard.html":{"url":"interfaces/Beeyard.html","title":"interface - Beeyard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Beeyard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beeyard/interfaces/beeyard.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            beekeeper\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        beekeeper\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beekeeper:         Beekeeper\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Beekeeper\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beekeeper } from '../../beekeeper/interfaces/beekeeper.interface';\nimport { Address } from '../../address/interfaces/address.interface';\n\nexport interface Beeyard {\n  id: number;\n  environment: string;\n  name: string;\n  beekeeper: Beekeeper;\n  address: Address;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BeeyardController.html":{"url":"controllers/BeeyardController.html","title":"controller - BeeyardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BeeyardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beeyard/beeyard.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                beeyard\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                findAllByIdBeekeeper\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(beeyardDto: BeeyardDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beeyardDto\n                                            \n                                                            BeeyardDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAllByIdBeekeeper\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByIdBeekeeper(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/all/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(beeyardDto: BeeyardDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beeyardDto\n                                            \n                                                            BeeyardDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Post,\n  Put,\n  Res,\n} from '@nestjs/common';\nimport { BeeyardService } from './beeyard.service';\nimport { BeeyardDto } from './dto/beeyard.dto';\nimport { Response } from 'express';\n\n@Controller('beeyard')\nexport class BeeyardController {\n  constructor(private readonly beeyardService: BeeyardService) {}\n\n  /**\n   *\n   * @param beeyardDto\n   * @param res\n   */\n  @Post()\n  async create(@Body() beeyardDto: BeeyardDto, @Res() res: Response) {\n    try {\n      const beeyard: BeeyardDto = await this.beeyardService.create(beeyardDto);\n      res.status(HttpStatus.CREATED).json(beeyard);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la création du rucher : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param beeyardDto\n   * @param res\n   */\n  @Put()\n  async update(@Body() beeyardDto: BeeyardDto, @Res() res: Response) {\n    try {\n      const beeyard: BeeyardDto = await this.beeyardService.update(beeyardDto);\n      res.status(HttpStatus.OK).json(beeyard);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la mise a jour du rucher : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Delete(':id')\n  async delete(@Param('id') id: string, @Res() res: Response) {\n    const beeyardId: number = Number(id);\n    if (isNaN(beeyardId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant rucher invalide' });\n    }\n    try {\n      await this.beeyardService.delete(beeyardId);\n      res\n        .status(HttpStatus.OK)\n        .json({ message: 'Ruché supprimé avec succès.' });\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la suppression du rucher : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Get(':id')\n  async findOne(@Param('id') id: string, @Res() res: Response) {\n    const beeyardId: number = Number(id);\n    if (isNaN(beeyardId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant rucher invalide' });\n    }\n\n    try {\n      const beeyard: BeeyardDto = await this.beeyardService.findOne(beeyardId);\n      res.status(HttpStatus.OK).json(beeyard);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la récupération du rucher : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Get('/all/:id')\n  async findAllByIdBeekeeper(@Param('id') id: string, @Res() res: Response) {\n    const beekeeperId: number = Number(id);\n    if (isNaN(beekeeperId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant apiculteur invalide' });\n    }\n\n    try {\n      const beeyards: BeeyardDto[] =\n        await this.beeyardService.findAllByIdBeekeeper(beekeeperId);\n      res.status(HttpStatus.OK).json(beeyards);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la récupération des ruchers : ${err.message}`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BeeyardDto.html":{"url":"classes/BeeyardDto.html","title":"class - BeeyardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BeeyardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beeyard/dto/beeyard.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Beeyard\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                    \n                                beekeeper\n                            \n                            \n                                    \n                                    \n                                environment\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ValidateNested({message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beeyard/dto/beeyard.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        beekeeper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BeekeeperDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ValidateNested({message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beeyard/dto/beeyard.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beeyard/dto/beeyard.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beeyard/dto/beeyard.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beeyard/dto/beeyard.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, IsOptional, IsString, ValidateNested } from \"class-validator\";\nimport { Type } from 'class-transformer';\nimport { AddressDto } from '../../address/dto/address.dto';\nimport { BeekeeperDto } from '../../beekeeper/dto/beekeeper.dto';\nimport { Beeyard } from '../interfaces/beeyard.interface';\n\nexport class BeeyardDto implements Beeyard {\n  @IsOptional()\n  @IsNumber()\n  id: number;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  environment: string;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  name: string;\n\n  @IsNotEmpty()\n  @ValidateNested({ message: 'la validation échoué' })\n  @Type(() => BeekeeperDto)\n  beekeeper: BeekeeperDto;\n\n  @IsNotEmpty()\n  @ValidateNested({ message: 'la validation échoué' })\n  @Type(() => AddressDto)\n  address: AddressDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BeeyardModule.html":{"url":"modules/BeeyardModule.html","title":"module - BeeyardModule","body":"\n                   \n\n\n\n\n    Modules\n    BeeyardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BeeyardModule\n\n\n\ncluster_BeeyardModule_imports\n\n\n\ncluster_BeeyardModule_providers\n\n\n\n\nAddressModule\n\nAddressModule\n\n\n\nBeeyardModule\n\nBeeyardModule\n\nBeeyardModule -->\n\nAddressModule->BeeyardModule\n\n\n\n\n\nBeeyardRepository\n\nBeeyardRepository\n\nBeeyardModule -->\n\nBeeyardRepository->BeeyardModule\n\n\n\n\n\nBeeyardService\n\nBeeyardService\n\nBeeyardModule -->\n\nBeeyardService->BeeyardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/beekeeping/beeyard/beeyard.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BeeyardRepository\n                        \n                        \n                            BeeyardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BeeyardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AddressModule } from '../address/address.module';\nimport { BeeyardRepository } from './beeyard.repository';\nimport { BeeyardService } from './beeyard.service';\nimport { BeeyardController } from './beeyard.controller';\n\n@Module({\n  imports: [AddressModule],\n  controllers: [BeeyardController],\n  providers: [BeeyardService, BeeyardRepository],\n})\nexport class BeeyardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BeeyardRepository.html":{"url":"injectables/BeeyardRepository.html","title":"injectable - BeeyardRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BeeyardRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beeyard/beeyard.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                SQL_DELETE\n                            \n                            \n                                SQL_FIND_ALL_BEEKEEPER\n                            \n                            \n                                SQL_FIND_ONE\n                            \n                            \n                                SQL_INSERT\n                            \n                            \n                                SQL_UPDATE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllByIdBeekeeper\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(beeyardDto: BeeyardDto, idAddress: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.repository.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beeyardDto\n                                            \n                                                            BeeyardDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                idAddress\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.repository.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByIdBeekeeper\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByIdBeekeeper(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.repository.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.repository.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(beeyardDto: BeeyardDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.repository.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beeyardDto\n                                            \n                                                            BeeyardDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BeekeeperRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beeyard/beeyard.repository.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_DELETE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `DELETE FROM beeyard WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beeyard/beeyard.repository.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_FIND_ALL_BEEKEEPER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT be.*, a.street, a.additional_address, a.zipcode, a.city, a.state, a.country\n                FROM beeyard be \n                INNER JOIN beekeeper bk ON be.id_beekeeper = bk.id\n                INNER JOIN address a ON be.id_address = a.id\n                WHERE bk.id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beeyard/beeyard.repository.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_FIND_ONE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT b.*, a.street, a.additional_address, a.zipcode, a.city, a.state, a.country \n                FROM beeyard b\n                INNER JOIN address a ON b.id_address = a.id\n                WHERE b.id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beeyard/beeyard.repository.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_INSERT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `INSERT INTO beeyard SET environment = ?, name = ?, id_beekeeper = ?, id_address = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beeyard/beeyard.repository.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_UPDATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `UPDATE beeyard SET environment = ?, name = ?, id_beekeeper = ?, id_address = ? \n                WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/beeyard/beeyard.repository.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common';\nimport { BeekeeperRepository } from '../beekeeper/beekeeper.repository';\nimport { BeeyardDto } from './dto/beeyard.dto';\nimport { pool } from '../../database/mysql.config';\n\n@Injectable()\nexport class BeeyardRepository {\n  SQL_INSERT = `INSERT INTO beeyard SET environment = ?, name = ?, id_beekeeper = ?, id_address = ?`;\n  SQL_UPDATE = `UPDATE beeyard SET environment = ?, name = ?, id_beekeeper = ?, id_address = ? \n                WHERE id = ?`;\n  SQL_DELETE = `DELETE FROM beeyard WHERE id = ?`;\n  SQL_FIND_ONE = `SELECT b.*, a.street, a.additional_address, a.zipcode, a.city, a.state, a.country \n                FROM beeyard b\n                INNER JOIN address a ON b.id_address = a.id\n                WHERE b.id = ?`;\n  SQL_FIND_ALL_BEEKEEPER = `SELECT be.*, a.street, a.additional_address, a.zipcode, a.city, a.state, a.country\n                FROM beeyard be \n                INNER JOIN beekeeper bk ON be.id_beekeeper = bk.id\n                INNER JOIN address a ON be.id_address = a.id\n                WHERE bk.id = ?`;\n\n  private readonly logger = new Logger(BeekeeperRepository.name);\n\n  /**\n   *\n   * @param beeyardDto\n   * @param idAddress\n   */\n  async create(beeyardDto: BeeyardDto, idAddress: number) {\n    try {\n      return await pool.execute(this.SQL_INSERT, [\n        beeyardDto.environment,\n        beeyardDto.name,\n        beeyardDto.beekeeper.id,\n        idAddress,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error inserting beeyard data', err.stack);\n      throw new BadRequestException(`Erreur d'insertion des données`);\n    }\n  }\n\n  /**\n   *\n   * @param beeyardDto\n   */\n  async update(beeyardDto: BeeyardDto) {\n    try {\n      return await pool.execute(this.SQL_UPDATE, [\n        beeyardDto.environment,\n        beeyardDto.name,\n        beeyardDto.beekeeper.id,\n        beeyardDto.address.id,\n        beeyardDto.id,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error updating beeyard data', err.stack);\n      throw new BadRequestException(`Erreur de mise à jour des données`);\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      return await pool.execute(this.SQL_DELETE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error deleting beeyard', err.stack);\n      throw new BadRequestException(`Erreur de suppression du rucher`);\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async findAllByIdBeekeeper(id: number) {\n    try {\n      return await pool.execute(this.SQL_FIND_ALL_BEEKEEPER, [id]);\n    } catch (err: any) {\n      this.logger.error(\n        'Error getting all by beekeeper beeyard data',\n        err.stack,\n      );\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      return await pool.execute(this.SQL_FIND_ONE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error getting beeyard data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BeeyardService.html":{"url":"injectables/BeeyardService.html","title":"injectable - BeeyardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BeeyardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/beeyard/beeyard.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAllByIdBeekeeper\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(beeyardRepository: BeeyardRepository, addressService: AddressService)\n                    \n                \n                        \n                            \n                                Defined in src/beekeeping/beeyard/beeyard.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        beeyardRepository\n                                                  \n                                                        \n                                                                        BeeyardRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(beeyardDto: BeeyardDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.service.ts:18\n                        \n                    \n\n\n            \n                \n                        création d'un rucher et de son adresse\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beeyardDto\n                                            \n                                                            BeeyardDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.service.ts:65\n                        \n                    \n\n\n            \n                \n                        Suppression d'un rucher et de l'adresse associée\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByIdBeekeeper\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByIdBeekeeper(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Récupération de tout les ruchers d'un apiculteur avec les adresses par l'id de l'apiculteur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Récupération d'un rucher avec son adresse par l'id\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(beeyardDto: BeeyardDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/beeyard/beeyard.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Mise à jours du rucher\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                beeyardDto\n                                            \n                                                            BeeyardDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { BeeyardRepository } from './beeyard.repository';\nimport { AddressService } from '../address/address.service';\nimport { BeeyardDto } from './dto/beeyard.dto';\nimport { AddressDto } from '../address/dto/address.dto';\n\n@Injectable()\nexport class BeeyardService {\n  constructor(\n    private readonly beeyardRepository: BeeyardRepository,\n    private readonly addressService: AddressService,\n  ) {}\n\n  /**\n   * création d'un rucher et de son adresse\n   * @param beeyardDto\n   */\n  async create(beeyardDto: BeeyardDto) {\n    try {\n      const addressDto: AddressDto = await this.addressService.create(\n        beeyardDto.address,\n      );\n\n      const [result] = await this.beeyardRepository.create(\n        beeyardDto,\n        addressDto.id,\n      );\n      const id = (result as any).insertId;\n      if (!id) {\n        throw new HttpException(\n          `Erreur dans la création du rucher`,\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n\n      return {\n        id: id,\n        environment: beeyardDto.environment,\n        name: beeyardDto.name,\n        beekeeper: beeyardDto.beekeeper,\n        address: addressDto,\n      } as BeeyardDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Mise à jours du rucher\n   * @param beeyardDto\n   */\n  async update(beeyardDto: BeeyardDto) {\n    try {\n      await this.beeyardRepository.update(beeyardDto);\n      return beeyardDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Suppression d'un rucher et de l'adresse associée\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      const beeyard = await this.findOne(id);\n      const [beeyardDelete] = await this.beeyardRepository.delete(id);\n      await this.addressService.delete(beeyard.address.id);\n      return beeyardDelete;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération d'un rucher avec son adresse par l'id\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      const [rows] = await this.beeyardRepository.findOne(id);\n      if (!rows) {\n        return undefined;\n      }\n      const row = rows[0];\n      const address: AddressDto = {\n        id: row.id_address,\n        street: row.street,\n        additional_address: row.additional_address,\n        zipcode: row.zipcode,\n        city: row.city,\n        state: row.state,\n        country: row.country,\n      };\n      return {\n        id: id,\n        environment: row.environment,\n        name: row.name,\n        beekeeper: { id: row.id_beekeeper },\n        address: address,\n      } as BeeyardDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération de tout les ruchers d'un apiculteur avec les adresses par l'id de l'apiculteur\n   * @param id\n   */\n  async findAllByIdBeekeeper(id: number) {\n    try {\n      const [rows] = await this.beeyardRepository.findAllByIdBeekeeper(id);\n      if (!rows) {\n        return undefined;\n      }\n\n      const beeyards: BeeyardDto[] = [];\n\n      for (const beeyard of rows as any) {\n        const address: AddressDto = {\n          id: beeyard.id_address,\n          street: beeyard.street,\n          additional_address: beeyard.additional_address,\n          zipcode: beeyard.zipcode,\n          city: beeyard.city,\n          state: beeyard.state,\n          country: beeyard.country,\n        };\n        beeyards.push({\n          id: beeyard.id,\n          environment: beeyard.environment,\n          name: beeyard.name,\n          beekeeper: { id: beeyard.id_beekeeper },\n          address: address,\n        } as BeeyardDto);\n      }\n      return beeyards;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Client.html":{"url":"interfaces/Client.html","title":"interface - Client","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Client\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/client/interfaces/client.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstname\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastname\n                                        \n                                \n                                \n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Address } from '../../../beekeeping/address/interfaces/address.interface';\n\nexport interface Client {\n  id: number;\n  lastname: string;\n  firstname: string;\n  email: string;\n  phone: string;\n  address: Address;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClientController.html":{"url":"controllers/ClientController.html","title":"controller - ClientController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClientController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/client/client.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                client\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(clientDto: ClientDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/store/client/client.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientDto\n                                            \n                                                            ClientDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/store/client/client.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/store/client/client.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(clientDto: ClientDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in src/store/client/client.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientDto\n                                            \n                                                            ClientDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Post,\n  Put,\n  Res,\n} from '@nestjs/common';\nimport { Response } from 'express';\nimport { ClientService } from './client.service';\nimport { ClientDto } from './dto/client.dto';\n\n@Controller('client')\nexport class ClientController {\n  constructor(private readonly clientService: ClientService) {}\n\n  /**\n   *\n   * @param clientDto\n   * @param res\n   */\n  @Post()\n  async create(@Body() clientDto: ClientDto, @Res() res: Response) {\n    try {\n      const client = await this.clientService.create(clientDto);\n      res.status(HttpStatus.CREATED).json(client);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la création de l'apiculteur : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param clientDto\n   * @param res\n   */\n  @Put()\n  async update(@Body() clientDto: ClientDto, @Res() res: Response) {\n    try {\n      const clientUpdated = await this.clientService.update(clientDto);\n      res.status(HttpStatus.OK).json(clientUpdated);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la mise à jour du client : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Delete(':id')\n  async delete(@Param('id') id: string, @Res() res: Response) {\n    const clientId = Number(id);\n    if (isNaN(clientId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant apiculteur invalide' });\n    }\n\n    try {\n      await this.clientService.delete(clientId);\n      res\n        .status(HttpStatus.OK)\n        .json({ message: 'Client supprimé avec succès.' });\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la suppression du client : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Get(':id')\n  async findOne(@Param('id') id: string, @Res() res: Response) {\n    const clientId = Number(id);\n    if (isNaN(clientId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant client invalide' });\n    }\n\n    try {\n      const client = await this.clientService.findOne(clientId);\n      res.status(HttpStatus.OK).json(client);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la récupération du client : ${err.message}`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ClientDto.html":{"url":"classes/ClientDto.html","title":"class - ClientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ClientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/client/dto/client.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Client\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                address\n                            \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                firstname\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lastname\n                            \n                            \n                                    \n                                    \n                                phone\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AddressDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ValidateNested({message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/client/dto/client.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsEmail({}, {message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/client/dto/client.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/client/dto/client.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/client/dto/client.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/client/dto/client.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        phone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsPhoneNumber('FR', {message: 'la validation a échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/client/dto/client.dto.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Client } from '../interfaces/client.interface';\nimport {\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsPhoneNumber,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { AddressDto } from '../../../beekeeping/address/dto/address.dto';\n\nexport class ClientDto implements Client {\n  @IsOptional()\n  @IsNumber()\n  id: number;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  firstname: string;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  lastname: string;\n\n  @IsNotEmpty()\n  @IsEmail({}, { message: 'la validation échoué' })\n  email: string;\n\n  @IsOptional()\n  @IsPhoneNumber('FR', { message: 'la validation a échoué' })\n  phone: string;\n\n  @IsNotEmpty()\n  @ValidateNested({ message: 'la validation échoué' })\n  @Type(() => AddressDto)\n  address: AddressDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientModule.html":{"url":"modules/ClientModule.html","title":"module - ClientModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_providers\n\n\n\ncluster_ClientModule_imports\n\n\n\n\nAddressModule\n\nAddressModule\n\n\n\nClientModule\n\nClientModule\n\nClientModule -->\n\nAddressModule->ClientModule\n\n\n\n\n\nClientRepository\n\nClientRepository\n\nClientModule -->\n\nClientRepository->ClientModule\n\n\n\n\n\nClientService\n\nClientService\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/store/client/client.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientRepository\n                        \n                        \n                            ClientService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClientController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AddressModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AddressModule } from '../../beekeeping/address/address.module';\nimport { ClientController } from './client.controller';\nimport { ClientService } from './client.service';\nimport { ClientRepository } from './client.repository';\n\n@Module({\n  imports: [AddressModule],\n  controllers: [ClientController],\n  providers: [ClientService, ClientRepository],\n})\nexport class ClientModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientRepository.html":{"url":"injectables/ClientRepository.html","title":"injectable - ClientRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClientRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/client/client.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                SQL_DELETE\n                            \n                            \n                                SQL_FIND_ONE\n                            \n                            \n                                SQL_INSERT\n                            \n                            \n                                SQL_UPDATE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(clientDto: ClientDto, idAddress: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/client/client.repository.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientDto\n                                            \n                                                            ClientDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                idAddress\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/client/client.repository.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/client/client.repository.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(clientDto: ClientDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/client/client.repository.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientDto\n                                            \n                                                            ClientDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ClientRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/store/client/client.repository.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_DELETE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `DELETE FROM client WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/store/client/client.repository.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_FIND_ONE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT c.*,  a.street, a.additional_address, a.zipcode, a.city, a.state, a.country\n          FROM client c\n          INNER JOIN address a ON c.id_address = a.id\n          WHERE c.id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/store/client/client.repository.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_INSERT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `INSERT INTO client SET firstname = ?, lastname = ?, email = ?, phone = ?, id_address = ?`\n                    \n                \n                    \n                        \n                                Defined in src/store/client/client.repository.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_UPDATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `UPDATE client SET firstname = ?, lastname = ?, email = ?, phone = ?, id_address = ? WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/store/client/client.repository.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common';\nimport { ClientDto } from './dto/client.dto';\nimport { pool } from '../../database/mysql.config';\n\n@Injectable()\nexport class ClientRepository {\n  SQL_INSERT = `INSERT INTO client SET firstname = ?, lastname = ?, email = ?, phone = ?, id_address = ?`;\n  SQL_UPDATE = `UPDATE client SET firstname = ?, lastname = ?, email = ?, phone = ?, id_address = ? WHERE id = ?`;\n  SQL_DELETE = `DELETE FROM client WHERE id = ?`;\n  SQL_FIND_ONE = `SELECT c.*,  a.street, a.additional_address, a.zipcode, a.city, a.state, a.country\n          FROM client c\n          INNER JOIN address a ON c.id_address = a.id\n          WHERE c.id = ?`;\n\n  private readonly logger = new Logger(ClientRepository.name);\n\n  /**\n   *\n   * @param clientDto\n   * @param idAddress\n   */\n  async create(clientDto: ClientDto, idAddress: number) {\n    try {\n      return await pool.execute(this.SQL_INSERT, [\n        clientDto.firstname,\n        clientDto.lastname,\n        clientDto.email,\n        clientDto.phone,\n        idAddress,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error inserting client data', err.stack);\n      throw new BadRequestException(`Erreur d'insertion des données`);\n    }\n  }\n\n  /**\n   *\n   * @param clientDto\n   */\n  async update(clientDto: ClientDto) {\n    try {\n      return await pool.execute(this.SQL_UPDATE, [\n        clientDto.firstname,\n        clientDto.lastname,\n        clientDto.email,\n        clientDto.phone,\n        clientDto.address.id,\n        clientDto.id,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error updating client data', err.stack);\n      throw new BadRequestException(`Erreur de mise à jour des données`);\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      return await pool.execute(this.SQL_DELETE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error deleting client', err.stack);\n      throw new BadRequestException(`Erreur de suppression du client`);\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      return await pool.execute(this.SQL_FIND_ONE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error getting client data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientService.html":{"url":"injectables/ClientService.html","title":"injectable - ClientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ClientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/client/client.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientRepository: ClientRepository, addressService: AddressService)\n                    \n                \n                        \n                            \n                                Defined in src/store/client/client.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientRepository\n                                                  \n                                                        \n                                                                        ClientRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        addressService\n                                                  \n                                                        \n                                                                        AddressService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(clientDto: ClientDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/client/client.service.ts:18\n                        \n                    \n\n\n            \n                \n                        Création d'un client\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientDto\n                                            \n                                                            ClientDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/client/client.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Suppression d'un client\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/client/client.service.ts:81\n                        \n                    \n\n\n            \n                \n                        Récupération d'un client\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(clientDto: ClientDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/client/client.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Mise à jour d'un client\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                clientDto\n                                            \n                                                            ClientDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { ClientRepository } from './client.repository';\nimport { AddressService } from '../../beekeeping/address/address.service';\nimport { ClientDto } from './dto/client.dto';\nimport { AddressDto } from '../../beekeeping/address/dto/address.dto';\n\n@Injectable()\nexport class ClientService {\n  constructor(\n    private readonly clientRepository: ClientRepository,\n    private readonly addressService: AddressService,\n  ) {}\n\n  /**\n   * Création d'un client\n   * @param clientDto\n   */\n  async create(clientDto: ClientDto) {\n    try {\n      const address: AddressDto = await this.addressService.create(\n        clientDto.address,\n      );\n\n      const [result] = await this.clientRepository.create(\n        clientDto,\n        address.id,\n      );\n      const id = (result as any).insertId;\n      if (!id) {\n        throw new HttpException(\n          `Erreur dans la création du client`,\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n\n      return {\n        id: id,\n        lastname: clientDto.lastname,\n        firstname: clientDto.firstname,\n        email: clientDto.email,\n        phone: clientDto.phone,\n        address,\n      } as ClientDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Mise à jour d'un client\n   * @param clientDto\n   */\n  async update(clientDto: ClientDto) {\n    try {\n      await this.clientRepository.update(clientDto);\n      return clientDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Suppression d'un client\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      const client = await this.findOne(id);\n      const [clientDelete] = await this.clientRepository.delete(id);\n      await this.addressService.delete(client.id);\n      return clientDelete;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération d'un client\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      const [rows] = await this.clientRepository.findOne(id);\n      if (!rows) {\n        return undefined;\n      }\n      const row = rows[0];\n\n      const address: AddressDto = {\n        id: row.id_address,\n        street: row.street,\n        additional_address: row.additional_address,\n        zipcode: row.zipcode,\n        city: row.city,\n        state: row.state,\n        country: row.country,\n      };\n\n      return {\n        id: row.id,\n        firstname: row.firstname,\n        lastname: row.lastname,\n        email: row.email,\n        phone: row.phone,\n        address: address,\n      } as ClientDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Harvesthoney.html":{"url":"interfaces/Harvesthoney.html","title":"interface - Harvesthoney","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Harvesthoney\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/harvesthoney/interfaces/harvesthoney.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date_harvest\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lot_number\n                                        \n                                \n                                \n                                        \n                                            storage\n                                        \n                                \n                                \n                                        \n                                            total_honey_kg\n                                        \n                                \n                                \n                                        \n                                            total_sale_honey_kg\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date_harvest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date_harvest:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lot_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lot_number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        storage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_honey_kg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_honey_kg:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_sale_honey_kg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_sale_honey_kg:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Harvesthoney {\n  id: number;\n  date_harvest: Date;\n  total_honey_kg: number;\n  total_sale_honey_kg: number;\n  lot_number: number;\n  storage: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HarvesthoneyByBeehiveDto.html":{"url":"classes/HarvesthoneyByBeehiveDto.html","title":"class - HarvesthoneyByBeehiveDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HarvesthoneyByBeehiveDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeehive.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Harvesthoney\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                beehive\n                            \n                            \n                                    \n                                    \n                                    \n                                date_harvest\n                            \n                            \n                                    \n                                    \n                                    \n                                honeycrops\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lot_number\n                            \n                            \n                                    \n                                    \n                                storage\n                            \n                            \n                                    \n                                    \n                                total_honey_kg\n                            \n                            \n                                    \n                                    \n                                total_sale_honey_kg\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        beehive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BeehiveDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional({message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeehive.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        date_harvest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@Type(undefined)@IsDate({message: 'La date de récolte doit être une date valide.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeehive.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        honeycrops\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HoneycropDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Les récoltes de miel ne peuvent pas être vides.'})@ValidateNested({each: true, message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeehive.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber({}, {message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeehive.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lot_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeehive.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeehive.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        total_honey_kg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeehive.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        total_sale_honey_kg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeehive.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Harvesthoney } from '../interfaces/harvesthoney.interface';\nimport { IsDate, IsNotEmpty, IsNumber, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { HoneycropDto } from '../../honeycrop/dto/honeycrop.dto';\nimport { BeehiveDto } from '../../../beehive/dto/beehive.dto';\n\nexport class HarvesthoneyByBeehiveDto implements Harvesthoney {\n  @IsOptional()\n  @IsNumber({}, { message: 'la validation échoué' })\n  id: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @Type(() => Date)\n  @IsDate({ message: 'La date de récolte doit être une date valide.' })\n  date_harvest: Date;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  total_honey_kg: number;\n\n  @IsOptional({ message: 'la validation échoué' })\n  @IsNumber()\n  total_sale_honey_kg: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  lot_number: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsString()\n  storage: string;\n\n  @IsOptional({ message: 'la validation échoué' })\n  @Type(() => BeehiveDto)\n  beehive: BeehiveDto;\n\n  @IsNotEmpty({ message: 'Les récoltes de miel ne peuvent pas être vides.' })\n  @ValidateNested({each: true, message: 'la validation échoué' })\n  @Type(() => HoneycropDto)\n  honeycrops: HoneycropDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HarvesthoneyByBeekeeperDto.html":{"url":"classes/HarvesthoneyByBeekeeperDto.html","title":"class - HarvesthoneyByBeekeeperDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HarvesthoneyByBeekeeperDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/harvesthoney/dto/harvesthoneyBeBeekeeper.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Harvesthoney\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                beekeeper\n                            \n                            \n                                    \n                                    \n                                    \n                                date_harvest\n                            \n                            \n                                    \n                                    \n                                    \n                                honeycrops\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lot_number\n                            \n                            \n                                    \n                                    \n                                storage\n                            \n                            \n                                    \n                                    \n                                total_honey_kg\n                            \n                            \n                                    \n                                    \n                                total_sale_honey_kg\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        beekeeper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BeekeeperDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional({message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyBeBeekeeper.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        date_harvest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@Type(undefined)@IsDate({message: 'La date de récolte doit être une date valide.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyBeBeekeeper.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        honeycrops\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HoneycropDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Les récoltes de miel ne peuvent pas être vides.'})@ValidateNested({each: true, message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyBeBeekeeper.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber({}, {message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyBeBeekeeper.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lot_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyBeBeekeeper.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyBeBeekeeper.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        total_honey_kg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyBeBeekeeper.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        total_sale_honey_kg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyBeBeekeeper.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Harvesthoney } from '../interfaces/harvesthoney.interface';\nimport { IsDate, IsNotEmpty, IsNumber, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { HoneycropDto } from '../../honeycrop/dto/honeycrop.dto';\nimport { BeekeeperDto } from '../../../beekeeper/dto/beekeeper.dto';\n\nexport class HarvesthoneyByBeekeeperDto implements Harvesthoney {\n  @IsOptional()\n  @IsNumber({}, { message: 'la validation échoué' })\n  id: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @Type(() => Date)\n  @IsDate({ message: 'La date de récolte doit être une date valide.' })\n  date_harvest: Date;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  total_honey_kg: number;\n\n  @IsOptional({ message: 'la validation échoué' })\n  @IsNumber()\n  total_sale_honey_kg: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  lot_number: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsString()\n  storage: string;\n\n  @IsOptional({ message: 'la validation échoué' })\n  @Type(() => BeekeeperDto)\n  beekeeper: BeekeeperDto;\n\n  @IsNotEmpty({ message: 'Les récoltes de miel ne peuvent pas être vides.' })\n  @ValidateNested({each: true, message: 'la validation échoué' })\n  @Type(() => HoneycropDto)\n  honeycrops: HoneycropDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HarvesthoneyByBeeyardDto.html":{"url":"classes/HarvesthoneyByBeeyardDto.html","title":"class - HarvesthoneyByBeeyardDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HarvesthoneyByBeeyardDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeeyard.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Harvesthoney\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                beeyard\n                            \n                            \n                                    \n                                    \n                                    \n                                date_harvest\n                            \n                            \n                                    \n                                    \n                                    \n                                honeycrops\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lot_number\n                            \n                            \n                                    \n                                    \n                                storage\n                            \n                            \n                                    \n                                    \n                                total_honey_kg\n                            \n                            \n                                    \n                                    \n                                total_sale_honey_kg\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        beeyard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BeeyardDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional({message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeeyard.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        date_harvest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@Type(undefined)@IsDate({message: 'La date de récolte doit être une date valide.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeeyard.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        honeycrops\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HoneycropDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Les récoltes de miel ne peuvent pas être vides.'})@ValidateNested({each: true, message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeeyard.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber({}, {message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeeyard.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lot_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeeyard.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeeyard.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        total_honey_kg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeeyard.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        total_sale_honey_kg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeeyard.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Harvesthoney } from '../interfaces/harvesthoney.interface';\nimport { IsDate, IsNotEmpty, IsNumber, IsOptional, IsString, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { HoneycropDto } from '../../honeycrop/dto/honeycrop.dto';\nimport { BeeyardDto } from '../../../beeyard/dto/beeyard.dto';\n\nexport class HarvesthoneyByBeeyardDto implements Harvesthoney {\n  @IsOptional()\n  @IsNumber({}, { message: 'la validation échoué' })\n  id: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @Type(() => Date)\n  @IsDate({ message: 'La date de récolte doit être une date valide.' })\n  date_harvest: Date;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  total_honey_kg: number;\n\n  @IsOptional({ message: 'la validation échoué' })\n  @IsNumber()\n  total_sale_honey_kg: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  lot_number: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsString()\n  storage: string;\n\n  @IsOptional({ message: 'la validation échoué' })\n  @Type(() => BeeyardDto)\n  beeyard: BeeyardDto;\n\n  @IsNotEmpty({ message: 'Les récoltes de miel ne peuvent pas être vides.' })\n  @ValidateNested({each: true, message: 'la validation échoué' })\n  @Type(() => HoneycropDto)\n  honeycrops: HoneycropDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HarvesthoneyController.html":{"url":"controllers/HarvesthoneyController.html","title":"controller - HarvesthoneyController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HarvesthoneyController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                harvesthoney\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                deleteHoneyCrop\n                            \n                            \n                                    \n                                    Async\n                                findAllByBeehive\n                            \n                            \n                                    \n                                    Async\n                                findAllByBeekeeper\n                            \n                            \n                                    \n                                    Async\n                                findAllByBeeyard\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(harvesthoneyDto: HarvesthoneyDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@UsePipes(new ValidationPipe())\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                harvesthoneyDto\n                                            \n                                                            HarvesthoneyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        deleteHoneyCrop\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteHoneyCrop(relHarvestHoneycropDto: RelHarvestHoneycropDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/honeycrop')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:81\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relHarvestHoneycropDto\n                                            \n                                                            RelHarvestHoneycropDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAllByBeehive\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeehive(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/beehive/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAllByBeekeeper\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeekeeper(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/beekeeper/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAllByBeeyard\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeeyard(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/beeyard/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:118\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(harvesthoneyDto: HarvesthoneyDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                harvesthoneyDto\n                                            \n                                                            HarvesthoneyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Post,\n  Put,\n  Res,\n  UsePipes,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { HarvesthoneyService } from './harvesthoney.service';\nimport { HarvesthoneyDto } from './dto/harvesthoney.dto';\nimport { Response } from 'express';\nimport { RelHarvestHoneycropDto } from './dto/relHarvestHoneycropDto.dto';\n\n@Controller('harvesthoney')\nexport class HarvesthoneyController {\n  constructor(private readonly harvesthoneyService: HarvesthoneyService) {}\n\n  @Post()\n  @UsePipes(\n    new ValidationPipe({\n      whitelist: true,\n      forbidNonWhitelisted: true,\n      transform: true,\n      exceptionFactory: (errors) => {\n        return new BadRequestException(`Données invalides : ${errors}`);\n      },\n    }),\n  )\n  async create(@Body() harvesthoneyDto: HarvesthoneyDto, @Res() res: Response) {\n    try {\n      const harvesthonay: HarvesthoneyDto =\n        await this.harvesthoneyService.createHoneycrop(harvesthoneyDto);\n      res.status(HttpStatus.OK).json(harvesthonay);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la création de la récolte : ${err.message}`,\n      });\n    }\n  }\n\n  @Put()\n  async update(@Body() harvesthoneyDto: HarvesthoneyDto, @Res() res: Response) {\n    try {\n      await this.harvesthoneyService.update(harvesthoneyDto);\n      res.status(HttpStatus.OK).json(harvesthoneyDto);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la mise a jour de la récolte : ${err.message}`,\n      });\n    }\n  }\n\n  @Delete(':id')\n  async delete(@Param('id') id: string, @Res() res: Response) {\n    const harvesthoneyId: number = Number(id);\n    if (isNaN(harvesthoneyId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant de la recolte invalide' });\n    }\n\n    try {\n      await this.harvesthoneyService.deleteHarvesthoney(harvesthoneyId);\n      res\n        .status(HttpStatus.OK)\n        .json({ message: 'Récolte supprimée avec succès' });\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la suppression de la récolte : ${err.message}`,\n      });\n    }\n  }\n\n  @Delete('/honeycrop')\n  async deleteHoneyCrop(\n    @Body() relHarvestHoneycropDto: RelHarvestHoneycropDto,\n    @Res() res: Response,\n  ) {\n    try {\n      await this.harvesthoneyService.deleteHoneycrop(relHarvestHoneycropDto);\n      res\n        .status(HttpStatus.OK)\n        .json({ message: 'Récolte supprimée avec succès' });\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la mise a jour de la récolte : ${err.message}`,\n      });\n    }\n  }\n\n  @Get('/beehive/:id')\n  async findAllByBeehive(@Param('id') id: string, @Res() res: Response) {\n    const beehiveId: number = Number(id);\n    if (isNaN(beehiveId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant de la ruche invalide' });\n    }\n\n    try {\n      const harvesthoney =\n        await this.harvesthoneyService.findAllByBeehive(beehiveId);\n      res.status(HttpStatus.OK).json(harvesthoney);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur lors de la récupération des données : ${err.message}`,\n      });\n    }\n  }\n\n  @Get('/beeyard/:id')\n  async findAllByBeeyard(@Param('id') id: string, @Res() res: Response) {\n    const beeyardId: number = Number(id);\n    if (isNaN(beeyardId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant du rucher invalide' });\n    }\n\n    try {\n      const harvesthoney =\n        await this.harvesthoneyService.findAllByBeeyard(beeyardId);\n      res.status(HttpStatus.OK).json(harvesthoney);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur lors de la récupération des données : ${err.message}`,\n      });\n    }\n  }\n\n  @Get('/beekeeper/:id')\n  async findAllByBeekeeper(@Param('id') id: string, @Res() res: Response) {\n    const beekeeperId: number = Number(id);\n    if (isNaN(beekeeperId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: \"Identifiant de l'apiculteur invalide\" });\n    }\n\n    try {\n      const harvesthoney =\n        await this.harvesthoneyService.findAllByBeekeeper(beekeeperId);\n      res.status(HttpStatus.OK).json(harvesthoney);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur lors de la récupération des données : ${err.message}`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HarvesthoneyDto.html":{"url":"classes/HarvesthoneyDto.html","title":"class - HarvesthoneyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HarvesthoneyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Harvesthoney\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                date_harvest\n                            \n                            \n                                    \n                                    \n                                    \n                                honeycrops\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lot_number\n                            \n                            \n                                    \n                                    \n                                storage\n                            \n                            \n                                    \n                                    \n                                total_honey_kg\n                            \n                            \n                                    \n                                    \n                                total_sale_honey_kg\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        date_harvest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@Type(undefined)@IsDate({message: 'La date de récolte doit être une date valide.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        honeycrops\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HoneycropDto[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Les récoltes de miel ne peuvent pas être vides.'})@ValidateNested({each: true, message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber({}, {message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lot_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        total_honey_kg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        total_sale_honey_kg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Harvesthoney } from '../interfaces/harvesthoney.interface';\nimport {\n  IsDate,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  IsString,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { HoneycropDto } from '../../honeycrop/dto/honeycrop.dto';\n\nexport class HarvesthoneyDto implements Harvesthoney {\n  @IsOptional()\n  @IsNumber({}, { message: 'la validation échoué' })\n  id: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @Type(() => Date)\n  @IsDate({ message: 'La date de récolte doit être une date valide.' })\n  date_harvest: Date;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  total_honey_kg: number;\n\n  @IsOptional({ message: 'la validation échoué' })\n  @IsNumber()\n  total_sale_honey_kg: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  lot_number: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsString()\n  storage: string;\n\n  @IsNotEmpty({ message: 'Les récoltes de miel ne peuvent pas être vides.' })\n  @ValidateNested({ each: true, message: 'la validation échoué' })\n  @Type(() => HoneycropDto)\n  honeycrops: HoneycropDto[] = [];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HarvesthoneyModule.html":{"url":"modules/HarvesthoneyModule.html","title":"module - HarvesthoneyModule","body":"\n                   \n\n\n\n\n    Modules\n    HarvesthoneyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HarvesthoneyModule\n\n\n\ncluster_HarvesthoneyModule_imports\n\n\n\ncluster_HarvesthoneyModule_providers\n\n\n\n\nHoneycropModule\n\nHoneycropModule\n\n\n\nHarvesthoneyModule\n\nHarvesthoneyModule\n\nHarvesthoneyModule -->\n\nHoneycropModule->HarvesthoneyModule\n\n\n\n\n\nHarvesthoneyRepository\n\nHarvesthoneyRepository\n\nHarvesthoneyModule -->\n\nHarvesthoneyRepository->HarvesthoneyModule\n\n\n\n\n\nHarvesthoneyService\n\nHarvesthoneyService\n\nHarvesthoneyModule -->\n\nHarvesthoneyService->HarvesthoneyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/beekeeping/honey/harvesthoney/harvesthoney.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HarvesthoneyRepository\n                        \n                        \n                            HarvesthoneyService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HarvesthoneyController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HoneycropModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HarvesthoneyController } from './harvesthoney.controller';\nimport { HarvesthoneyService } from './harvesthoney.service';\nimport { HarvesthoneyRepository } from './harvesthoney.repository';\nimport { HoneycropModule } from '../honeycrop/honeycrop.module';\n\n@Module({\n  imports: [HoneycropModule],\n  controllers: [HarvesthoneyController],\n  providers: [HarvesthoneyService, HarvesthoneyRepository],\n})\nexport class HarvesthoneyModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HarvesthoneyRepository.html":{"url":"injectables/HarvesthoneyRepository.html","title":"injectable - HarvesthoneyRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HarvesthoneyRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                SQL_DELETE\n                            \n                            \n                                SQL_DELETE_REL_HARVEST_HONEY\n                            \n                            \n                                SQL_FIND_ALL_BY_BEEHIVE\n                            \n                            \n                                SQL_FIND_ALL_BY_BEEKEEPER\n                            \n                            \n                                SQL_FIND_ALL_BY_BEEYARD\n                            \n                            \n                                SQL_INSERT\n                            \n                            \n                                SQL_INSERT_REL_HARVEST_HONEY\n                            \n                            \n                                SQL_UPDATE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createRelHoneycrop\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                deleteRelHoneycrop\n                            \n                            \n                                    Async\n                                findAllByBeehive\n                            \n                            \n                                    Async\n                                findAllByBeekeeper\n                            \n                            \n                                    Async\n                                findAllByBeeyard\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(harvesthoneyDto: HarvesthoneyDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                harvesthoneyDto\n                                            \n                                                            HarvesthoneyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createRelHoneycrop\n                        \n                    \n                \n            \n            \n                \n                        \n                    createRelHoneycrop(relHarvesthoney: RelHarvestHoneycropDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relHarvesthoney\n                                            \n                                                            RelHarvestHoneycropDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteRelHoneycrop\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteRelHoneycrop(relHarvesthoney: RelHarvestHoneycropDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relHarvesthoney\n                                            \n                                                            RelHarvestHoneycropDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByBeehive\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeehive(idBeehive: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idBeehive\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByBeekeeper\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeekeeper(idBeekeeper: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idBeekeeper\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByBeeyard\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeeyard(idBeeyard: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idBeeyard\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(harvesthoneyDto: HarvesthoneyDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                harvesthoneyDto\n                                            \n                                                            HarvesthoneyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(HarvesthoneyRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_DELETE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `DELETE FROM harvesthoney WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_DELETE_REL_HARVEST_HONEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `DELETE FROM rel_harvesthoney_honeycrop WHERE id_harvesthoney = ? AND id_honeycrop = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_FIND_ALL_BY_BEEHIVE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT DISTINCT hh.*, \n      hc.id as honeycrop_id, hc.name as honeycrop_name, hc.honey_kg, hc.nb_hausses,\n      be.id as beehive_id, be.name as beehive_name, be.bee_type, be.type_hive, be.id_beeyard\n      FROM harvesthoney hh\n      INNER JOIN rel_harvesthoney_honeycrop relhh ON relhh.id_harvesthoney = hh.id\n      INNER JOIN honeycrop hc ON relhh.id_honeycrop = hc.id\n      INNER JOIN beehive be ON hc.id_beehive = be.id\n      WHERE be.id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_FIND_ALL_BY_BEEKEEPER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT DISTINCT hh.*, \n      hc.id as honeycrop_id, hc.name as honeycrop_name, hc.honey_kg, hc.nb_hausses,\n      be.id as beehive_id, be.name as beehive_name, be.bee_type, be.type_hive,\n      bya.id as beeyard_id, bya.environment, bya.name as beeyard_name, bya.id_address as beeyard_address,\n      bk.id as beekeeper_id, bk.firstname, bk.lastname, bk.siret, bk.napi, bk.email, bk.phone, bk.id_address as beekeeper_address\n      FROM harvesthoney hh\n      INNER JOIN rel_harvesthoney_honeycrop relhh ON relhh.id_harvesthoney = hh.id\n      INNER JOIN honeycrop hc ON relhh.id_honeycrop = hc.id\n      INNER JOIN beehive be ON hc.id_beehive = be.id\n      INNER JOIN beeyard bya ON be.id_beeyard = bya.id\n      INNER JOIN beekeeper bk ON bya.id_beekeeper = bk.id\n      WHERE bk.id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_FIND_ALL_BY_BEEYARD\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT DISTINCT hh.*, \n      hc.id as honeycrop_id, hc.name as honeycrop_name, hc.honey_kg, hc.nb_hausses,\n      be.id as beehive_id, be.name as beehive_name, be.bee_type, be.type_hive,\n      bya.id as beeyard_id, bya.environment, bya.name as beeyard_name, bya.id_beekeeper, bya.id_address as beeyard_address\n      FROM harvesthoney hh\n      INNER JOIN rel_harvesthoney_honeycrop relhh ON relhh.id_harvesthoney = hh.id\n      INNER JOIN honeycrop hc ON relhh.id_honeycrop = hc.id\n      INNER JOIN beehive be ON hc.id_beehive = be.id\n      INNER JOIN beeyard bya ON be.id_beeyard = bya.id\n      WHERE bya.id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_INSERT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `INSERT INTO harvesthoney SET date_harvest = ?, total_honey_kg = ?, total_sale_honey_kg = ?, lot_number = ?, storage = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_INSERT_REL_HARVEST_HONEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `INSERT INTO rel_harvesthoney_honeycrop SET id_harvesthoney = ?, id_honeycrop = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_UPDATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `UPDATE harvesthoney SET date_harvest = ?, total_honey_kg = ?, total_sale_honey_kg = ?,  lot_number = ?, storage = ? WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common';\nimport { HarvesthoneyDto } from './dto/harvesthoney.dto';\nimport { RelHarvestHoneycropDto } from './dto/relHarvestHoneycropDto.dto';\nimport { pool } from '../../../database/mysql.config';\n\n@Injectable()\nexport class HarvesthoneyRepository {\n  SQL_INSERT = `INSERT INTO harvesthoney SET date_harvest = ?, total_honey_kg = ?, total_sale_honey_kg = ?, lot_number = ?, storage = ?`;\n  SQL_UPDATE = `UPDATE harvesthoney SET date_harvest = ?, total_honey_kg = ?, total_sale_honey_kg = ?,  lot_number = ?, storage = ? WHERE id = ?`;\n  SQL_DELETE = `DELETE FROM harvesthoney WHERE id = ?`;\n\n  SQL_INSERT_REL_HARVEST_HONEY = `INSERT INTO rel_harvesthoney_honeycrop SET id_harvesthoney = ?, id_honeycrop = ?`;\n  SQL_DELETE_REL_HARVEST_HONEY = `DELETE FROM rel_harvesthoney_honeycrop WHERE id_harvesthoney = ? AND id_honeycrop = ?`;\n\n  SQL_FIND_ALL_BY_BEEHIVE = `SELECT DISTINCT hh.*, \n      hc.id as honeycrop_id, hc.name as honeycrop_name, hc.honey_kg, hc.nb_hausses,\n      be.id as beehive_id, be.name as beehive_name, be.bee_type, be.type_hive, be.id_beeyard\n      FROM harvesthoney hh\n      INNER JOIN rel_harvesthoney_honeycrop relhh ON relhh.id_harvesthoney = hh.id\n      INNER JOIN honeycrop hc ON relhh.id_honeycrop = hc.id\n      INNER JOIN beehive be ON hc.id_beehive = be.id\n      WHERE be.id = ?`;\n  SQL_FIND_ALL_BY_BEEYARD = `SELECT DISTINCT hh.*, \n      hc.id as honeycrop_id, hc.name as honeycrop_name, hc.honey_kg, hc.nb_hausses,\n      be.id as beehive_id, be.name as beehive_name, be.bee_type, be.type_hive,\n      bya.id as beeyard_id, bya.environment, bya.name as beeyard_name, bya.id_beekeeper, bya.id_address as beeyard_address\n      FROM harvesthoney hh\n      INNER JOIN rel_harvesthoney_honeycrop relhh ON relhh.id_harvesthoney = hh.id\n      INNER JOIN honeycrop hc ON relhh.id_honeycrop = hc.id\n      INNER JOIN beehive be ON hc.id_beehive = be.id\n      INNER JOIN beeyard bya ON be.id_beeyard = bya.id\n      WHERE bya.id = ?`;\n  SQL_FIND_ALL_BY_BEEKEEPER = `SELECT DISTINCT hh.*, \n      hc.id as honeycrop_id, hc.name as honeycrop_name, hc.honey_kg, hc.nb_hausses,\n      be.id as beehive_id, be.name as beehive_name, be.bee_type, be.type_hive,\n      bya.id as beeyard_id, bya.environment, bya.name as beeyard_name, bya.id_address as beeyard_address,\n      bk.id as beekeeper_id, bk.firstname, bk.lastname, bk.siret, bk.napi, bk.email, bk.phone, bk.id_address as beekeeper_address\n      FROM harvesthoney hh\n      INNER JOIN rel_harvesthoney_honeycrop relhh ON relhh.id_harvesthoney = hh.id\n      INNER JOIN honeycrop hc ON relhh.id_honeycrop = hc.id\n      INNER JOIN beehive be ON hc.id_beehive = be.id\n      INNER JOIN beeyard bya ON be.id_beeyard = bya.id\n      INNER JOIN beekeeper bk ON bya.id_beekeeper = bk.id\n      WHERE bk.id = ?`;\n\n  private readonly logger = new Logger(HarvesthoneyRepository.name);\n\n  /**\n   *\n   * @param harvesthoneyDto\n   */\n  async create(harvesthoneyDto: HarvesthoneyDto) {\n    try {\n      return pool.execute(this.SQL_INSERT, [\n        harvesthoneyDto.date_harvest,\n        harvesthoneyDto.total_honey_kg,\n        harvesthoneyDto.total_sale_honey_kg,\n        harvesthoneyDto.lot_number,\n        harvesthoneyDto.storage,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error inserting harvesthoney data', err.stack);\n      throw new BadRequestException(`Erreur d'insertion des données`);\n    }\n  }\n\n  /**\n   *\n   * @param relHarvesthoney\n   */\n  async createRelHoneycrop(relHarvesthoney: RelHarvestHoneycropDto) {\n    try {\n      return pool.execute(this.SQL_INSERT_REL_HARVEST_HONEY, [\n        relHarvesthoney.idHarvestHoney,\n        relHarvesthoney.idHoneycrop,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error inserting relHarvesthoney data', err.stack);\n      throw new BadRequestException(`Erreur d'insertion des données`);\n    }\n  }\n\n  /**\n   *\n   * @param harvesthoneyDto\n   */\n  async update(harvesthoneyDto: HarvesthoneyDto) {\n    try {\n      return pool.execute(this.SQL_UPDATE, [\n        harvesthoneyDto.date_harvest,\n        harvesthoneyDto.total_honey_kg,\n        harvesthoneyDto.total_sale_honey_kg,\n        harvesthoneyDto.lot_number,\n        harvesthoneyDto.storage,\n        harvesthoneyDto.id,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error updating harvesthoney data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la mise à jour des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      return await pool.execute(this.SQL_DELETE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error deleting harvesthoney data', err.stack);\n      throw new BadRequestException(\n        `Erreur de suppression des données des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param relHarvesthoney\n   */\n  async deleteRelHoneycrop(relHarvesthoney: RelHarvestHoneycropDto) {\n    try {\n      return await pool.execute(this.SQL_DELETE_REL_HARVEST_HONEY, [\n        relHarvesthoney.idHarvestHoney,\n        relHarvesthoney.idHoneycrop,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error deleting harvesthoney data', err.stack);\n      throw new BadRequestException(\n        `Erreur de suppression des données des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param idBeehive\n   */\n  async findAllByBeehive(idBeehive: number) {\n    try {\n      return await pool.execute(this.SQL_FIND_ALL_BY_BEEHIVE, [idBeehive]);\n    } catch (err: any) {\n      this.logger.error('Error getting harvesthoney data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param idBeeyard\n   */\n  async findAllByBeeyard(idBeeyard: number) {\n    try {\n      return await pool.execute(this.SQL_FIND_ALL_BY_BEEYARD, [idBeeyard]);\n    } catch (err: any) {\n      this.logger.error('Error getting harvesthoney data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param idBeekeeper\n   */\n  async findAllByBeekeeper(idBeekeeper: number) {\n    try {\n      return await pool.execute(this.SQL_FIND_ALL_BY_BEEKEEPER, [idBeekeeper]);\n    } catch (err: any) {\n      this.logger.error('Error getting harvesthoney data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HarvesthoneyService.html":{"url":"injectables/HarvesthoneyService.html","title":"injectable - HarvesthoneyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HarvesthoneyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/harvesthoney/harvesthoney.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createHoneycrop\n                            \n                            \n                                    Async\n                                deleteHarvesthoney\n                            \n                            \n                                    Async\n                                deleteHoneycrop\n                            \n                            \n                                    Async\n                                findAllByBeehive\n                            \n                            \n                                    Async\n                                findAllByBeekeeper\n                            \n                            \n                                    Async\n                                findAllByBeeyard\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(harvesthoneyRepository: HarvesthoneyRepository, honeycropService: HoneycropService)\n                    \n                \n                        \n                            \n                                Defined in src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        harvesthoneyRepository\n                                                  \n                                                        \n                                                                        HarvesthoneyRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        honeycropService\n                                                  \n                                                        \n                                                                        HoneycropService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createHoneycrop\n                        \n                    \n                \n            \n            \n                \n                        \n                    createHoneycrop(harvesthoneyDto: HarvesthoneyDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Création des récoltes et du stockage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                harvesthoneyDto\n                                            \n                                                            HarvesthoneyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteHarvesthoney\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteHarvesthoney(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:91\n                        \n                    \n\n\n            \n                \n                        Suppression du stockage si pplus de récolte\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteHoneycrop\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteHoneycrop(relHarvestHoneycropDto: RelHarvestHoneycropDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:103\n                        \n                    \n\n\n            \n                \n                        Suppression d'une récolte et de son association au stockage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                relHarvestHoneycropDto\n                                            \n                                                            RelHarvestHoneycropDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByBeehive\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeehive(idBeehive: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:122\n                        \n                    \n\n\n            \n                \n                        Récupération de toute les récoltes d'une ruche\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idBeehive\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByBeekeeper\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeekeeper(idBeekeeper: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:222\n                        \n                    \n\n\n            \n                \n                        Récupération de toute les récoltes d'un apiculteur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idBeekeeper\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByBeeyard\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeeyard(idBeeyard: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:168\n                        \n                    \n\n\n            \n                \n                        Récupération de toutes les récolte d'un rucher\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idBeeyard\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(harvesthoneyDto: HarvesthoneyDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/harvesthoney/harvesthoney.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Mise à jour des données de stockage des récoltes\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                harvesthoneyDto\n                                            \n                                                            HarvesthoneyDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { HarvesthoneyRepository } from './harvesthoney.repository';\nimport { HoneycropService } from '../honeycrop/honeycrop.service';\nimport { RelHarvestHoneycropDto } from './dto/relHarvestHoneycropDto.dto';\nimport { HarvesthoneyDto } from './dto/harvesthoney.dto';\nimport { HoneycropDto } from '../honeycrop/dto/honeycrop.dto';\nimport { HarvesthoneyByBeehiveDto } from './dto/harvesthoneyByBeehive.dto';\nimport { BeeyardDto } from '../../beeyard/dto/beeyard.dto';\nimport { HarvesthoneyByBeeyardDto } from './dto/harvesthoneyByBeeyard.dto';\nimport { BeekeeperDto } from '../../beekeeper/dto/beekeeper.dto';\nimport { AddressDto } from '../../address/dto/address.dto';\nimport { HarvesthoneyByBeekeeperDto } from './dto/harvesthoneyBeBeekeeper.dto';\n\n@Injectable()\nexport class HarvesthoneyService {\n  constructor(\n    private readonly harvesthoneyRepository: HarvesthoneyRepository,\n    private readonly honeycropService: HoneycropService,\n  ) {}\n\n  /**\n   * Création des récoltes et du stockage\n   * @param harvesthoneyDto\n   */\n  async createHoneycrop(harvesthoneyDto: HarvesthoneyDto) {\n    try {\n      let id = harvesthoneyDto.id;\n      let total_honey_kg = harvesthoneyDto.total_honey_kg;\n\n      // controle si c'est la première récolte, si oui création du stockage\n      if (!id || id === 0) {\n        const [result] =\n          await this.harvesthoneyRepository.create(harvesthoneyDto);\n        id = (result as any).insertId;\n        if (!id) {\n          throw new HttpException(\n            `Erreur dans la création de la récolte`,\n            HttpStatus.BAD_REQUEST,\n          );\n        }\n      }\n\n      // création de la récolte\n      const honeycrop: HoneycropDto = await this.honeycropService.create(\n        harvesthoneyDto.honeycrops[0],\n      );\n\n      // création de la relation entre le stockage et la récolte\n      const relHarvesthoney: RelHarvestHoneycropDto = {\n        idHarvestHoney: id,\n        idHoneycrop: honeycrop.id,\n      };\n      await this.harvesthoneyRepository.createRelHoneycrop(relHarvesthoney);\n\n      // mise à jour du nombres de kilo récoltés\n      total_honey_kg += honeycrop.honey_kg;\n      const harvesthoney: HarvesthoneyDto = {\n        id: id,\n        date_harvest: harvesthoneyDto.date_harvest,\n        total_honey_kg: total_honey_kg,\n        total_sale_honey_kg: harvesthoneyDto.total_sale_honey_kg,\n        lot_number: harvesthoneyDto.lot_number,\n        storage: harvesthoneyDto.storage,\n        honeycrops: [honeycrop],\n      };\n      await this.update(harvesthoney);\n\n      return harvesthoney;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Mise à jour des données de stockage des récoltes\n   * @param harvesthoneyDto\n   */\n  async update(harvesthoneyDto: HarvesthoneyDto) {\n    try {\n      await this.harvesthoneyRepository.update(harvesthoneyDto);\n      return harvesthoneyDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Suppression du stockage si pplus de récolte\n   * @param id\n   */\n  async deleteHarvesthoney(id: number) {\n    try {\n      return await this.harvesthoneyRepository.delete(id);\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Suppression d'une récolte et de son association au stockage\n   * @param relHarvestHoneycropDto\n   */\n  async deleteHoneycrop(relHarvestHoneycropDto: RelHarvestHoneycropDto) {\n    try {\n      // suppression de la relation\n      await this.harvesthoneyRepository.deleteRelHoneycrop(\n        relHarvestHoneycropDto,\n      );\n      //suppression de la récolte\n      return await this.honeycropService.delete(\n        relHarvestHoneycropDto.idHoneycrop,\n      );\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération de toute les récoltes d'une ruche\n   * @param idBeehive\n   */\n  async findAllByBeehive(idBeehive: number) {\n    try {\n      const [rows] =\n        await this.harvesthoneyRepository.findAllByBeehive(idBeehive);\n      if (!rows) {\n        return undefined;\n      }\n\n      const harvestHoneys: HarvesthoneyByBeehiveDto = {\n        id: rows[0].id,\n        date_harvest: rows[0].date_harvest,\n        total_honey_kg: rows[0].total_honey_kg,\n        total_sale_honey_kg: rows[0].total_sale_honey_kg,\n        lot_number: rows[0].lot_number,\n        storage: rows[0].storage,\n        beehive: {\n          id: rows[0].beehive_id,\n          name: rows[0].beehive_name,\n          bee_type: rows[0].bee_type,\n          type_hive: rows[0].type_hive,\n          beeyard: {\n            id: rows[0].id_beeyard,\n          } as BeeyardDto,\n        },\n        honeycrops: [],\n      };\n\n      for (const row of rows as any) {\n        harvestHoneys.honeycrops.push({\n          id: row.honeycrop_id,\n          name: row.honeycrop_name,\n          honey_kg: row.honey_kg,\n          nb_hausses: row.nb_hausses,\n        } as HoneycropDto);\n      }\n\n      return harvestHoneys;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération de toutes les récolte d'un rucher\n   * @param idBeeyard\n   */\n  async findAllByBeeyard(idBeeyard: number) {\n    try {\n      const [rows] =\n        await this.harvesthoneyRepository.findAllByBeeyard(idBeeyard);\n      if (!rows) {\n        return undefined;\n      }\n\n      const harvestHoneys: HarvesthoneyByBeeyardDto = {\n        id: rows[0].id,\n        date_harvest: rows[0].date_harvest,\n        total_honey_kg: rows[0].total_honey_kg,\n        total_sale_honey_kg: rows[0].total_sale_honey_kg,\n        lot_number: rows[0].lot_number,\n        storage: rows[0].storage,\n        beeyard: {\n          id: rows[0].id_beeyard,\n          name: rows[0].beeyard_name,\n          environment: rows[0].environment,\n          address: {\n            id: rows[0].beeyard_address,\n          } as AddressDto,\n          beekeeper: {\n            id: rows[0].id_beekeeper,\n          } as BeekeeperDto,\n        },\n        honeycrops: [],\n      };\n\n      for (const row of rows as any) {\n        harvestHoneys.honeycrops.push({\n          id: row.honeycrop_id,\n          name: row.honeycrop_name,\n          honey_kg: row.honey_kg,\n          nb_hausses: row.nb_hausses,\n          beehive: {\n            id: row.beehive_id,\n            name: row.beehive_name,\n            bee_type: row.bee_type,\n            type_hive: row.type_hive,\n          },\n        } as HoneycropDto);\n      }\n\n      return harvestHoneys;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération de toute les récoltes d'un apiculteur\n   * @param idBeekeeper\n   */\n  async findAllByBeekeeper(idBeekeeper: number) {\n    try {\n      const [rows] =\n        await this.harvesthoneyRepository.findAllByBeekeeper(idBeekeeper);\n      if (!rows) {\n        return undefined;\n      }\n\n      const harvestHoneys: HarvesthoneyByBeekeeperDto = {\n        id: rows[0].id,\n        date_harvest: rows[0].date_harvest,\n        total_honey_kg: rows[0].total_honey_kg,\n        total_sale_honey_kg: rows[0].total_sale_honey_kg,\n        lot_number: rows[0].lot_number,\n        storage: rows[0].storage,\n        beekeeper: {\n          id: rows[0].beekeeper_id,\n          firstname: rows[0].firstname,\n          lastname: rows[0].lastname,\n          siret: rows[0].siret,\n          napi: rows[0].napi,\n          email: rows[0].email,\n          phone: rows[0].phone,\n          address: {\n            id: rows[0].beekeeper_address,\n          } as AddressDto,\n        },\n        honeycrops: [],\n      };\n\n      for (const row of rows as any) {\n        harvestHoneys.honeycrops.push({\n          id: row.honeycrop_id,\n          name: row.honeycrop_name,\n          honey_kg: row.honey_kg,\n          nb_hausses: row.nb_hausses,\n          beehive: {\n            id: row.beehive_id,\n            name: row.beehive_name,\n            bee_type: row.bee_type,\n            type_hive: row.type_hive,\n            beeyard: {\n              id: row.beeyard_id,\n              name: row.beeyard_name,\n              environment: row.environment,\n              address: {\n                id: row.beeyard_address,\n              } as AddressDto,\n            },\n          },\n        } as HoneycropDto);\n      }\n\n      return harvestHoneys;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Honeycrop.html":{"url":"interfaces/Honeycrop.html","title":"interface - Honeycrop","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Honeycrop\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/honeycrop/interfaces/honeycrop.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            beehive\n                                        \n                                \n                                \n                                        \n                                            honey_kg\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            nb_hausses\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        beehive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beehive:         Beehive\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Beehive\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        honey_kg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        honey_kg:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nb_hausses\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nb_hausses:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Beehive } from '../../../beehive/interfaces/beehive.interface';\n\nexport interface Honeycrop {\n  id: number;\n  name: string;\n  honey_kg: number;\n  nb_hausses: number;\n  beehive: Beehive;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HoneycropController.html":{"url":"controllers/HoneycropController.html","title":"controller - HoneycropController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HoneycropController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/honeycrop/honeycrop.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                honeycrop\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/honey/honeycrop/honeycrop.controller.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(honeycropDto: HoneycropDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in src/beekeeping/honey/honeycrop/honeycrop.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                honeycropDto\n                                            \n                                                            HoneycropDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpStatus,\n  Param,\n  Put,\n  Res,\n} from '@nestjs/common';\nimport { HoneycropService } from './honeycrop.service';\nimport { HoneycropDto } from './dto/honeycrop.dto';\nimport { Response } from 'express';\n\n@Controller('honeycrop')\nexport class HoneycropController {\n  constructor(private readonly honeycropService: HoneycropService) {}\n\n  /**\n   *\n   * @param honeycropDto\n   * @param res\n   */\n  @Put()\n  async update(@Body() honeycropDto: HoneycropDto, @Res() res: Response) {\n    try {\n      const honeycrop = await this.honeycropService.update(honeycropDto);\n      res.status(HttpStatus.OK).json(honeycrop);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la mise a jour de la récolte : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Get(':id')\n  async findOne(@Param('id') id: string, @Res() res: Response) {\n    const honeycropId = Number(id);\n    if (isNaN(honeycropId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant récolte invalide' });\n    }\n\n    try {\n      const honeycrop = await this.honeycropService.findOne(honeycropId);\n      res.status(HttpStatus.OK).json(honeycrop);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur lors de la récupération de la récolte : ${err.message}`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HoneycropDto.html":{"url":"classes/HoneycropDto.html","title":"class - HoneycropDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HoneycropDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/honeycrop/dto/honeycrop.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Honeycrop\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                beehive\n                            \n                            \n                                    \n                                    \n                                honey_kg\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                nb_hausses\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        beehive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BeehiveDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'La ruche ne peut pas être vide.'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/honeycrop/dto/honeycrop.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        honey_kg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/honeycrop/dto/honeycrop.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber({}, {message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/honeycrop/dto/honeycrop.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString({message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/honeycrop/dto/honeycrop.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        nb_hausses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/honeycrop/dto/honeycrop.dto.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Honeycrop } from '../interfaces/honeycrop.interface';\nimport { BeehiveDto } from '../../../beehive/dto/beehive.dto';\nimport { IsNotEmpty, IsNumber, IsOptional, IsString } from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class HoneycropDto implements Honeycrop {\n  @IsOptional()\n  @IsNumber({}, { message: 'la validation échoué' })\n  id: number;\n\n  @IsNotEmpty()\n  @IsString({ message: 'la validation échoué' })\n  name: string;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  honey_kg: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  nb_hausses: number;\n\n  @IsNotEmpty({ message: 'La ruche ne peut pas être vide.' })\n  @Type(() => BeehiveDto)\n  beehive: BeehiveDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HoneycropModule.html":{"url":"modules/HoneycropModule.html","title":"module - HoneycropModule","body":"\n                   \n\n\n\n\n    Modules\n    HoneycropModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HoneycropModule\n\n\n\ncluster_HoneycropModule_exports\n\n\n\ncluster_HoneycropModule_providers\n\n\n\n\nHoneycropService \n\nHoneycropService \n\n\n\nHoneycropModule\n\nHoneycropModule\n\nHoneycropService  -->\n\nHoneycropModule->HoneycropService \n\n\n\n\n\nHoneycropRepository\n\nHoneycropRepository\n\nHoneycropModule -->\n\nHoneycropRepository->HoneycropModule\n\n\n\n\n\nHoneycropService\n\nHoneycropService\n\nHoneycropModule -->\n\nHoneycropService->HoneycropModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/beekeeping/honey/honeycrop/honeycrop.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HoneycropRepository\n                        \n                        \n                            HoneycropService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HoneycropController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HoneycropService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HoneycropController } from './honeycrop.controller';\nimport { HoneycropService } from './honeycrop.service';\nimport { HoneycropRepository } from './honeycrop.repository';\n\n@Module({\n  controllers: [HoneycropController],\n  providers: [HoneycropService, HoneycropRepository],\n  exports: [HoneycropService],\n})\nexport class HoneycropModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HoneycropRepository.html":{"url":"injectables/HoneycropRepository.html","title":"injectable - HoneycropRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HoneycropRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/honeycrop/honeycrop.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                SQL_DELETE\n                            \n                            \n                                SQL_FIND_ONE\n                            \n                            \n                                SQL_INSERT\n                            \n                            \n                                SQL_UPDATE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(honeycropDto: HoneycropDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/honeycrop/honeycrop.repository.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                honeycropDto\n                                            \n                                                            HoneycropDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/honeycrop/honeycrop.repository.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/honeycrop/honeycrop.repository.ts:72\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(honeycropDto: HoneycropDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/honeycrop/honeycrop.repository.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                honeycropDto\n                                            \n                                                            HoneycropDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(HoneycropRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/honeycrop/honeycrop.repository.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_DELETE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `DELETE FROM honeycrop WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/honeycrop/honeycrop.repository.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_FIND_ONE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT * FROM honeycrop WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/honeycrop/honeycrop.repository.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_INSERT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `INSERT INTO honeycrop SET name = ?, honey_kg = ?, nb_hausses = ?, id_beehive = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/honeycrop/honeycrop.repository.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_UPDATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `UPDATE honeycrop SET name = ?, honey_kg = ?, nb_hausses = ?, id_beehive = ? WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/honeycrop/honeycrop.repository.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common';\nimport { HoneycropDto } from './dto/honeycrop.dto';\nimport { pool } from '../../../database/mysql.config';\n\n@Injectable()\nexport class HoneycropRepository {\n  SQL_INSERT = `INSERT INTO honeycrop SET name = ?, honey_kg = ?, nb_hausses = ?, id_beehive = ?`;\n  SQL_UPDATE = `UPDATE honeycrop SET name = ?, honey_kg = ?, nb_hausses = ?, id_beehive = ? WHERE id = ?`;\n  SQL_DELETE = `DELETE FROM honeycrop WHERE id = ?`;\n  SQL_FIND_ONE = `SELECT * FROM honeycrop WHERE id = ?`;\n\n  private readonly logger = new Logger(HoneycropRepository.name);\n\n  /**\n   *\n   * @param honeycropDto\n   */\n  async create(honeycropDto: HoneycropDto) {\n    try {\n      return await pool.execute(this.SQL_INSERT, [\n        honeycropDto.name,\n        honeycropDto.honey_kg,\n        honeycropDto.nb_hausses,\n        honeycropDto.beehive.id,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error inserting honeycrop data', err.stack);\n      throw new BadRequestException(`Erreur d'insertion des données`);\n    }\n  }\n\n  /**\n   *\n   * @param honeycropDto\n   */\n  async update(honeycropDto: HoneycropDto) {\n    try {\n      return await pool.execute(this.SQL_UPDATE, [\n        honeycropDto.name,\n        honeycropDto.honey_kg,\n        honeycropDto.nb_hausses,\n        honeycropDto.beehive.id,\n        honeycropDto.id,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error updating honeycrop data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la mise à jour des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      return await pool.execute(this.SQL_DELETE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error deleting honeycrop data', err.stack);\n      throw new BadRequestException(\n        `Erreur de suppression des données des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      return await pool.execute(this.SQL_FIND_ONE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error getting honeycrop data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HoneycropService.html":{"url":"injectables/HoneycropService.html","title":"injectable - HoneycropService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HoneycropService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/honeycrop/honeycrop.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(honeycropRepository: HoneycropRepository)\n                    \n                \n                        \n                            \n                                Defined in src/beekeeping/honey/honeycrop/honeycrop.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        honeycropRepository\n                                                  \n                                                        \n                                                                        HoneycropRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(honeycropDto: HoneycropDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/honeycrop/honeycrop.service.ts:13\n                        \n                    \n\n\n            \n                \n                        Création d'une récolte d'une ruche\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                honeycropDto\n                                            \n                                                            HoneycropDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/honeycrop/honeycrop.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Suppression d'une récolte\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/honeycrop/honeycrop.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Récupération d'une récolte\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(honeycropDto: HoneycropDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/beekeeping/honey/honeycrop/honeycrop.service.ts:40\n                        \n                    \n\n\n            \n                \n                        Mise à jour d'une récolte\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                honeycropDto\n                                            \n                                                            HoneycropDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { HoneycropDto } from './dto/honeycrop.dto';\nimport { HoneycropRepository } from './honeycrop.repository';\n\n@Injectable()\nexport class HoneycropService {\n  constructor(private readonly honeycropRepository: HoneycropRepository) {}\n\n  /**\n   * Création d'une récolte d'une ruche\n   * @param honeycropDto\n   */\n  async create(honeycropDto: HoneycropDto) {\n    try {\n      const [result] = await this.honeycropRepository.create(honeycropDto);\n      const id = (result as any).insertId;\n      if (!id) {\n        throw new HttpException(\n          `Erreur dans la création de la récolte`,\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n\n      return {\n        id: id,\n        name: honeycropDto.name,\n        honey_kg: honeycropDto.honey_kg,\n        nb_hausses: honeycropDto.nb_hausses,\n        beehive: honeycropDto.beehive,\n      } as HoneycropDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Mise à jour d'une récolte\n   * @param honeycropDto\n   */\n  async update(honeycropDto: HoneycropDto) {\n    try {\n      await this.honeycropRepository.update(honeycropDto);\n      return honeycropDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Suppression d'une récolte\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      const result = await this.honeycropRepository.delete(id);\n      return result;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération d'une récolte\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      const [rows] = await this.honeycropRepository.findOne(id);\n      if (!rows) {\n        return undefined;\n      }\n      const row = rows[0];\n\n      return {\n        id: row.id,\n        name: row.name,\n        honey_kg: row.honey_kg,\n        nb_hausses: row.nb_hausses,\n        beehive: {\n          id: row.id_beehive,\n        },\n      } as HoneycropDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/product/interfaces/product.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date_packaging\n                                        \n                                \n                                \n                                        \n                                            DLUO\n                                        \n                                \n                                \n                                        \n                                            harvesthoney\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lot_number\n                                        \n                                \n                                \n                                        \n                                            price\n                                        \n                                \n                                \n                                        \n                                            quantity\n                                        \n                                \n                                \n                                        \n                                            quantity_sale\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            weight\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date_packaging\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date_packaging:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        DLUO\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        DLUO:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        harvesthoney\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        harvesthoney:         HarvesthoneyDto\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         HarvesthoneyDto\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lot_number\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lot_number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        price\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        price:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        quantity_sale\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        quantity_sale:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         TypeProduct\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TypeProduct\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        weight:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HarvesthoneyDto } from '../../../beekeeping/honey/harvesthoney/dto/harvesthoney.dto';\nimport { TypeProduct } from '../model/TypeProduct.enum';\n\nexport interface Product {\n  id: number;\n  price: number;\n  type: TypeProduct;\n  weight: number;\n  quantity: number;\n  quantity_sale: number;\n  lot_number: number;\n  DLUO: Date;\n  date_packaging: Date;\n  harvesthoney: HarvesthoneyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                create\n                            \n                            \n                                    \n                                    Async\n                                delete\n                            \n                            \n                                    \n                                    Async\n                                findAll\n                            \n                            \n                                    \n                                    Async\n                                findAllByBeekeeper\n                            \n                            \n                                    \n                                    Async\n                                findAllByHarvesthoney\n                            \n                            \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    Async\n                                getTracking\n                            \n                            \n                                    \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(productDto: ProductDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/store/product/product.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productDto\n                                            \n                                                            ProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n                    \n                        \n                            Defined in src/store/product/product.controller.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/store/product/product.controller.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAllByBeekeeper\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeekeeper(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/beekeeper/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/store/product/product.controller.ts:151\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findAllByHarvesthoney\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByHarvesthoney(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/harvesthoney/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/store/product/product.controller.ts:126\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n                    \n                        \n                            Defined in src/store/product/product.controller.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getTracking\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTracking(id: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('tracking/:id')\n                \n            \n\n                    \n                        \n                            Defined in src/store/product/product.controller.ts:176\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(productDto: ProductDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put()\n                \n            \n\n                    \n                        \n                            Defined in src/store/product/product.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productDto\n                                            \n                                                            ProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Post,\n  Put,\n  Res,\n} from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductDto } from './dto/product.dto';\nimport { Response } from 'express';\n\n@Controller('product')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  /**\n   *\n   * @param productDto\n   * @param res\n   */\n  @Post()\n  async create(@Body() productDto: ProductDto, @Res() res: Response) {\n    try {\n      const product: ProductDto = await this.productService.create(productDto);\n      res.status(HttpStatus.OK).json(product);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la création du produit : : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param productDto\n   * @param res\n   */\n  @Put()\n  async update(@Body() productDto: ProductDto, @Res() res: Response) {\n    try {\n      await this.productService.update(productDto);\n      res.status(HttpStatus.OK).json(productDto);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la mise a jour du produit : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Delete()\n  async delete(@Param('id') id: string, @Res() res: Response) {\n    const productId: number = Number(id);\n    if (isNaN(productId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant du produit invalide' });\n    }\n\n    try {\n      await this.productService.delete(productId);\n      res\n        .status(HttpStatus.OK)\n        .json({ message: 'Produit supprimée avec succès' });\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur dans la suppression du produit : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Get(':id')\n  async findOne(@Param('id') id: string, @Res() res: Response) {\n    const productId: number = Number(id);\n    if (isNaN(productId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant du produit invalide' });\n    }\n\n    try {\n      const product = await this.productService.findOne(productId);\n      res.status(HttpStatus.OK).json(product);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur lors de la récupération des données : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param res\n   */\n  @Get()\n  async findAll(@Res() res: Response) {\n    try {\n      const products = await this.productService.findAll();\n      res.status(HttpStatus.OK).json(products);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur lors de la récupération des données : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Get('/harvesthoney/:id')\n  async findAllByHarvesthoney(@Param('id') id: string, @Res() res: Response) {\n    const harvesthoneiId: number = Number(id);\n    if (isNaN(harvesthoneiId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant de la récolte invalide' });\n    }\n\n    try {\n      const products =\n        await this.productService.findAllByHarvesthoney(harvesthoneiId);\n      res.status(HttpStatus.OK).json(products);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur lors de la récupération des données : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Get('/beekeeper/:id')\n  async findAllByBeekeeper(@Param('id') id: string, @Res() res: Response) {\n    const beekeeperId: number = Number(id);\n    if (isNaN(beekeeperId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: \"Identifiant de l'apiculteur invalide\" });\n    }\n\n    try {\n      const products =\n        await this.productService.findAllByBeekeeper(beekeeperId);\n      res.status(HttpStatus.OK).json(products);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur lors de la récupération des données : ${err.message}`,\n      });\n    }\n  }\n\n  /**\n   *\n   * @param id\n   * @param res\n   */\n  @Get('tracking/:id')\n  async getTracking(@Param('id') id: string, @Res() res: Response) {\n    const productId: number = Number(id);\n    if (isNaN(productId)) {\n      res\n        .status(HttpStatus.BAD_REQUEST)\n        .json({ message: 'Identifiant du produit invalide' });\n    }\n\n    try {\n      const products = await this.productService.getTracking(productId);\n      res.status(HttpStatus.OK).json(products);\n    } catch (err: any) {\n      res.status(HttpStatus.BAD_REQUEST).json({\n        message: `Erreur lors de la récupération des données : ${err.message}`,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDto.html":{"url":"classes/ProductDto.html","title":"class - ProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/product/dto/product.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Product\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                date_packaging\n                            \n                            \n                                    \n                                    \n                                    \n                                DLUO\n                            \n                            \n                                    \n                                    \n                                    \n                                harvesthoney\n                            \n                            \n                                    \n                                    \n                                id\n                            \n                            \n                                    \n                                    \n                                lot_number\n                            \n                            \n                                    \n                                    \n                                price\n                            \n                            \n                                    \n                                    \n                                quantity\n                            \n                            \n                                    \n                                    \n                                quantity_sale\n                            \n                            \n                                    \n                                    \n                                type\n                            \n                            \n                                    \n                                    \n                                weight\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        date_packaging\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@Type(undefined)@IsDate({message: 'La date de conditionnement doit être une date valide.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/product.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        DLUO\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@Type(undefined)@IsDate({message: 'La DLUO doit être une date valide.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/product.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        harvesthoney\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HarvesthoneyDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'La récolte de miel ne peut pas être vides.'})@ValidateNested({each: true, message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/product.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber({}, {message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/product.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        lot_number\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/product.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/product.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        quantity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/product.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        quantity_sale\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsNumber({}, {message: 'la validation échoué'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/product.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TypeProduct\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué.'})@IsEnum(TypeProduct, {message: 'Le type n'est pas un enum valide.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/product.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        weight\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/product.dto.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product } from '../interfaces/product.interface';\nimport { HarvesthoneyDto } from '../../../beekeeping/honey/harvesthoney/dto/harvesthoney.dto';\nimport { TypeProduct } from '../model/TypeProduct.enum';\nimport {\n  IsDate,\n  IsEnum,\n  IsNotEmpty,\n  IsNumber,\n  IsOptional,\n  ValidateNested,\n} from 'class-validator';\nimport { Type } from 'class-transformer';\n\nexport class ProductDto implements Product {\n  @IsOptional()\n  @IsNumber({}, { message: 'la validation échoué' })\n  id: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  price: number;\n\n  @IsNotEmpty({ message: 'la validation échoué.' })\n  @IsEnum(TypeProduct, { message: \"Le type n'est pas un enum valide.\" })\n  type: TypeProduct;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  weight: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  quantity: number;\n\n  @IsOptional()\n  @IsNumber({}, { message: 'la validation échoué' })\n  quantity_sale: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @IsNumber()\n  lot_number: number;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @Type(() => Date)\n  @IsDate({ message: 'La DLUO doit être une date valide.' })\n  DLUO: Date;\n\n  @IsNotEmpty({ message: 'la validation échoué' })\n  @Type(() => Date)\n  @IsDate({ message: 'La date de conditionnement doit être une date valide.' })\n  date_packaging: Date;\n\n  @IsNotEmpty({ message: 'La récolte de miel ne peut pas être vides.' })\n  @ValidateNested({ each: true, message: 'la validation échoué' })\n  @Type(() => HarvesthoneyDto)\n  harvesthoney: HarvesthoneyDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nProductRepository\n\nProductRepository\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nProductRepository->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/store/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductRepository\n                        \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductController } from './product.controller';\nimport { ProductRepository } from './product.repository';\n\n@Module({\n  providers: [ProductService, ProductRepository],\n  controllers: [ProductController]\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductRepository.html":{"url":"injectables/ProductRepository.html","title":"injectable - ProductRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/product/product.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                FIND_ALL\n                            \n                            \n                                FIND_ALL_BY_BEEKEEPER\n                            \n                            \n                                FIND_ALL_BY_HARVESTHONEY\n                            \n                            \n                                FIND_ONE\n                            \n                            \n                                GET_TRACKING_PRODUCT\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                SQL_DELETE\n                            \n                            \n                                SQL_INSERT\n                            \n                            \n                                SQL_UPDATE\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllByBeekeeper\n                            \n                            \n                                    Async\n                                findAllByHarvesthoney\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getTracking\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(productDto: ProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.repository.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productDto\n                                            \n                                                            ProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.repository.ts:164\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.repository.ts:190\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByBeekeeper\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeekeeper(idBeekeeper: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.repository.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idBeekeeper\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByHarvesthoney\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByHarvesthoney(idHarvesthoney: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.repository.ts:205\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idHarvesthoney\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.repository.ts:179\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTracking\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTracking(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.repository.ts:240\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(productDto: ProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.repository.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productDto\n                                            \n                                                            ProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        FIND_ALL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT * FROM product`\n                    \n                \n                    \n                        \n                                Defined in src/store/product/product.repository.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FIND_ALL_BY_BEEKEEPER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT DISTINCT p.* \n                      FROM product p \n                      INNER JOIN harvesthoney h ON p.id_harvesthoney = h.id\n                      INNER JOIN rel_harvesthoney_honeycrop relhh ON relhh.id_harvesthoney = h.id\n                      INNER JOIN honeycrop hc ON relhh.id_honeycrop = hc.id\n                      INNER JOIN beehive be ON hc.id_beehive = be.id\n                      INNER JOIN beeyard bya ON be.id_beeyard = bya.id\n                      INNER JOIN beekeeper bk ON bya.id_beekeeper = bk.id\n                      WHERE bk.id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/store/product/product.repository.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FIND_ALL_BY_HARVESTHONEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT DISTINCT p.* \n                      FROM product p \n                      INNER JOIN harvesthoney h ON p.id_harvesthoney = h.id\n                      WHERE h.id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/store/product/product.repository.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FIND_ONE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT * FROM product WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/store/product/product.repository.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GET_TRACKING_PRODUCT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `SELECT\n    p.*,\n    h.id as harvesthoney_id, h.date_harvest, h.total_honey_kg, h.total_sale_honey_kg, h.lot_number as harvesthoney_lot_number, h.storage,\n    (SELECT\n        JSON_ARRAYAGG(\n                JSON_OBJECT(\n                        'honeycrop_id', hc.id,\n                        'honeycrop_name', hc.name,\n                        'honey_kg', hc.honey_kg,\n                        'nb_hausses', hc.nb_hausses,\n                        'beehive', JSON_OBJECT(\n                                'beehive_id', be.id,\n                                'beehive_name', be.name,\n                                'bee_type', be.bee_type,\n                                'type_hive', be.type_hive\n                       ),\n                        'beeyard', JSON_OBJECT(\n                                'beeyard_id', bya.id,\n                                'environment', bya.environment,\n                                'beeyard_name', bya.name\n                       ),\n                        'address_beeyard', JSON_OBJECT(\n                                'address_id', a.id,\n                                'street', a.street,\n                                'additional_address', a.additional_address,\n                                'zipcode', a.zipcode,\n                                'city', a.city,\n                                'state', a.state,\n                                'country', a.country\n                         ),\n                        'beekeeper', JSON_OBJECT(\n                                'beekeeper_id', bk.id,\n                                'firstname', bk.firstname,\n                                'lastname', bk.lastname,\n                                'siret', bk.siret,\n                                'napi', bk.napi,\n                                'email', bk.email,\n                                'phone', bk.phone,\n                                'beekeeper_address', bk.id_address\n                         ),\n                        'address_beekeeper', JSON_OBJECT(\n                                'address_id', ab.id,\n                                'street', ab.street,\n                                'additional_address', ab.additional_address,\n                                'zipcode', ab.zipcode,\n                                'city', ab.city,\n                                'state', ab.state,\n                                'country', ab.country\n                       )\n                )\n        \n    )\n    FROM rel_harvesthoney_honeycrop AS relhh\n    INNER JOIN honeycrop hc ON hc.id = relhh.id_honeycrop\n    INNER JOIN beehive be ON hc.id_beehive = be.id\n    INNER JOIN beeyard bya ON be.id_beeyard = bya.id\n    INNER JOIN address a ON bya.id_address = a.id\n    INNER JOIN beekeeper bk ON bya.id_beekeeper = bk.id\n    INNER JOIN address ab ON bk.id_address = ab.id\n    WHERE relhh.id_harvesthoney = h.id\n  ) AS honeycrops\n  FROM product p\n  INNER JOIN harvesthoney h ON p.id_harvesthoney = h.id\n  WHERE p.id = ?;\n`\n                    \n                \n                    \n                        \n                                Defined in src/store/product/product.repository.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(ProductRepository.name)\n                    \n                \n                    \n                        \n                                Defined in src/store/product/product.repository.ts:109\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_DELETE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `DELETE FROM product WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/store/product/product.repository.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_INSERT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `INSERT INTO product SET price = ?, type = ?, weight = ?, quantity = ?, quantity_sale = ?, lot_number = ?, DLUO = ?, date_packaging = ?, id_harvesthoney = ?`\n                    \n                \n                    \n                        \n                                Defined in src/store/product/product.repository.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SQL_UPDATE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `UPDATE product SET price = ?, type = ?, weight = ?, quantity = ?, quantity_sale = ?, lot_number = ?, DLUO = ?, date_packaging = ?, id_harvesthoney = ? WHERE id = ?`\n                    \n                \n                    \n                        \n                                Defined in src/store/product/product.repository.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common';\nimport { ProductDto } from './dto/product.dto';\nimport { pool } from '../../database/mysql.config';\n\n@Injectable()\nexport class ProductRepository {\n  SQL_INSERT = `INSERT INTO product SET price = ?, type = ?, weight = ?, quantity = ?, quantity_sale = ?, lot_number = ?, DLUO = ?, date_packaging = ?, id_harvesthoney = ?`;\n  SQL_UPDATE = `UPDATE product SET price = ?, type = ?, weight = ?, quantity = ?, quantity_sale = ?, lot_number = ?, DLUO = ?, date_packaging = ?, id_harvesthoney = ? WHERE id = ?`;\n  SQL_DELETE = `DELETE FROM product WHERE id = ?`;\n\n  FIND_ONE = `SELECT * FROM product WHERE id = ?`;\n  FIND_ALL = `SELECT * FROM product`;\n  FIND_ALL_BY_HARVESTHONEY = `SELECT DISTINCT p.* \n                      FROM product p \n                      INNER JOIN harvesthoney h ON p.id_harvesthoney = h.id\n                      WHERE h.id = ?`;\n\n  FIND_ALL_BY_BEEKEEPER = `SELECT DISTINCT p.* \n                      FROM product p \n                      INNER JOIN harvesthoney h ON p.id_harvesthoney = h.id\n                      INNER JOIN rel_harvesthoney_honeycrop relhh ON relhh.id_harvesthoney = h.id\n                      INNER JOIN honeycrop hc ON relhh.id_honeycrop = hc.id\n                      INNER JOIN beehive be ON hc.id_beehive = be.id\n                      INNER JOIN beeyard bya ON be.id_beeyard = bya.id\n                      INNER JOIN beekeeper bk ON bya.id_beekeeper = bk.id\n                      WHERE bk.id = ?`;\n\n  /*GET_TRACKING_PRODUCT = `SELECT p.*,\n                     h.id as harvesthoney_id, h.date_harvest, h.total_honey_kg, h.total_sale_honey_kg, h.lot_number as harvesthoney_lot_number, h.storage,\n                     hc.id as honeycrop_id, hc.name as honeycrop_name, hc.honey_kg, hc.nb_hausses,\n                     be.id as beehive_id, be.name as beehive_name, be.bee_type, be.type_hive,\n                     bya.id as beeyard_id, bya.environment, bya.name as beeyard_name, bya.id_address as beeyard_address,\n                     bk.id as beekeeper_id, bk.firstname, bk.lastname, bk.siret, bk.napi, bk.email, bk.phone, bk.id_address as beekeeper_address\n                     FROM product p\n                     INNER JOIN harvesthoney h ON p.id_harvesthoney = h.id\n                     INNER JOIN rel_harvesthoney_honeycrop relhh ON relhh.id_harvesthoney = h.id\n                     INNER JOIN honeycrop hc ON relhh.id_honeycrop = hc.id\n                     INNER JOIN beehive be ON hc.id_beehive = be.id\n                     INNER JOIN beeyard bya ON be.id_beeyard = bya.id\n                     INNER JOIN beekeeper bk ON bya.id_beekeeper = bk.id \n                     WHERE p.id = ?`;*/\n\n  GET_TRACKING_PRODUCT = `SELECT\n    p.*,\n    h.id as harvesthoney_id, h.date_harvest, h.total_honey_kg, h.total_sale_honey_kg, h.lot_number as harvesthoney_lot_number, h.storage,\n    (SELECT\n        JSON_ARRAYAGG(\n                JSON_OBJECT(\n                        'honeycrop_id', hc.id,\n                        'honeycrop_name', hc.name,\n                        'honey_kg', hc.honey_kg,\n                        'nb_hausses', hc.nb_hausses,\n                        'beehive', JSON_OBJECT(\n                                'beehive_id', be.id,\n                                'beehive_name', be.name,\n                                'bee_type', be.bee_type,\n                                'type_hive', be.type_hive\n                       ),\n                        'beeyard', JSON_OBJECT(\n                                'beeyard_id', bya.id,\n                                'environment', bya.environment,\n                                'beeyard_name', bya.name\n                       ),\n                        'address_beeyard', JSON_OBJECT(\n                                'address_id', a.id,\n                                'street', a.street,\n                                'additional_address', a.additional_address,\n                                'zipcode', a.zipcode,\n                                'city', a.city,\n                                'state', a.state,\n                                'country', a.country\n                         ),\n                        'beekeeper', JSON_OBJECT(\n                                'beekeeper_id', bk.id,\n                                'firstname', bk.firstname,\n                                'lastname', bk.lastname,\n                                'siret', bk.siret,\n                                'napi', bk.napi,\n                                'email', bk.email,\n                                'phone', bk.phone,\n                                'beekeeper_address', bk.id_address\n                         ),\n                        'address_beekeeper', JSON_OBJECT(\n                                'address_id', ab.id,\n                                'street', ab.street,\n                                'additional_address', ab.additional_address,\n                                'zipcode', ab.zipcode,\n                                'city', ab.city,\n                                'state', ab.state,\n                                'country', ab.country\n                       )\n                )\n        \n    )\n    FROM rel_harvesthoney_honeycrop AS relhh\n    INNER JOIN honeycrop hc ON hc.id = relhh.id_honeycrop\n    INNER JOIN beehive be ON hc.id_beehive = be.id\n    INNER JOIN beeyard bya ON be.id_beeyard = bya.id\n    INNER JOIN address a ON bya.id_address = a.id\n    INNER JOIN beekeeper bk ON bya.id_beekeeper = bk.id\n    INNER JOIN address ab ON bk.id_address = ab.id\n    WHERE relhh.id_harvesthoney = h.id\n  ) AS honeycrops\n  FROM product p\n  INNER JOIN harvesthoney h ON p.id_harvesthoney = h.id\n  WHERE p.id = ?;\n`;\n\n  private readonly logger = new Logger(ProductRepository.name);\n\n  /**\n   *\n   * @param productDto\n   */\n  async create(productDto: ProductDto) {\n    try {\n      return pool.execute(this.SQL_INSERT, [\n        productDto.price,\n        productDto.type,\n        productDto.weight,\n        productDto.quantity,\n        productDto.quantity_sale,\n        productDto.lot_number,\n        productDto.DLUO,\n        productDto.date_packaging,\n        productDto.harvesthoney.id,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error inserting prodcut data', err.stack);\n      throw new BadRequestException(`Erreur d'insertion des données`);\n    }\n  }\n\n  /**\n   *\n   * @param productDto\n   */\n  async update(productDto: ProductDto) {\n    try {\n      return pool.execute(this.SQL_UPDATE, [\n        productDto.price,\n        productDto.type,\n        productDto.weight,\n        productDto.quantity,\n        productDto.quantity_sale,\n        productDto.lot_number,\n        productDto.DLUO,\n        productDto.date_packaging,\n        productDto.harvesthoney.id,\n        productDto.id,\n      ]);\n    } catch (err: any) {\n      this.logger.error('Error updating product data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la mise à jour des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      return await pool.execute(this.SQL_DELETE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error deleting product data', err.stack);\n      throw new BadRequestException(\n        `Erreur de suppression des données des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      return await pool.execute(this.FIND_ONE, [id]);\n    } catch (err: any) {\n      this.logger.error('Error getting product data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n\n  async findAll() {\n    try {\n      return await pool.execute(this.FIND_ALL);\n    } catch (err: any) {\n      this.logger.error('Error getting all product data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param idHarvesthoney\n   */\n  async findAllByHarvesthoney(idHarvesthoney: number) {\n    try {\n      return await pool.execute(this.FIND_ALL_BY_HARVESTHONEY, [\n        idHarvesthoney,\n      ]);\n    } catch (err: any) {\n      this.logger.error(\n        'Error getting product by harvesthoney data',\n        err.stack,\n      );\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param idBeekeeper\n   */\n  async findAllByBeekeeper(idBeekeeper: number) {\n    try {\n      return await pool.execute(this.FIND_ALL_BY_BEEKEEPER, [idBeekeeper]);\n    } catch (err: any) {\n      this.logger.error('Error getting product by beekeeper data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n\n  /**\n   *\n   * @param id\n   */\n  async getTracking(id: number) {\n    try {\n      return await pool.execute(this.GET_TRACKING_PRODUCT, [id]);\n    } catch (err: any) {\n      this.logger.error('Error getting tracking data', err.stack);\n      throw new BadRequestException(\n        `Erreur lors de la récupération des données`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findAllByBeekeeper\n                            \n                            \n                                    Async\n                                findAllByHarvesthoney\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getTracking\n                            \n                            \n                                    Private\n                                    Async\n                                mapperListProductDto\n                            \n                            \n                                    Private\n                                    Async\n                                mapperProductDto\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productRepository: ProductRepository)\n                    \n                \n                        \n                            \n                                Defined in src/store/product/product.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productRepository\n                                                  \n                                                        \n                                                                        ProductRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(productDto: ProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.service.ts:20\n                        \n                    \n\n\n            \n                \n                        Création d'un produit\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productDto\n                                            \n                                                            ProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Suppression d'un produit\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.service.ts:94\n                        \n                    \n\n\n            \n                \n                        Récupération de tout les produits créé\n\n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByBeekeeper\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByBeekeeper(idBeekeeper: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.service.ts:129\n                        \n                    \n\n\n            \n                \n                        Récupération de tout les produits d'un apiculteur\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idBeekeeper\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllByHarvesthoney\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllByHarvesthoney(idHarvesthoney: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.service.ts:111\n                        \n                    \n\n\n            \n                \n                        Récupération de tout les produits d'une récolte\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                idHarvesthoney\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.service.ts:78\n                        \n                    \n\n\n            \n                \n                        Récupération d'un produit\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getTracking\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTracking(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.service.ts:147\n                        \n                    \n\n\n            \n                \n                        Permet de tracé l'histoire d'un produit\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        mapperListProductDto\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapperListProductDto(rows: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.service.ts:302\n                        \n                    \n\n\n            \n                \n                        Méthode qui permet de mapper un tableau d'objet en une liste de ProductDto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rows\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        mapperProductDto\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapperProductDto(row: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.service.ts:317\n                        \n                    \n\n\n            \n                \n                        methode qui permet de mapper un objet en ProductDto\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                row\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(productDto: ProductDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/store/product/product.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Mise à jour du produit\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                productDto\n                                            \n                                                            ProductDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { ProductDto } from './dto/product.dto';\nimport { BeeyardDto } from '../../beekeeping/beeyard/dto/beeyard.dto';\nimport { HarvesthoneyDto } from '../../beekeeping/honey/harvesthoney/dto/harvesthoney.dto';\nimport { HoneycropDto } from '../../beekeeping/honey/honeycrop/dto/honeycrop.dto';\nimport { BeehiveDto } from '../../beekeeping/beehive/dto/beehive.dto';\nimport { AddressDto } from '../../beekeeping/address/dto/address.dto';\nimport { BeekeeperDto } from '../../beekeeping/beekeeper/dto/beekeeper.dto';\nimport { TrackingDto } from './dto/tracking.dto';\nimport { ProductRepository } from './product.repository';\n\n@Injectable()\nexport class ProductService {\n  constructor(private readonly productRepository: ProductRepository) {}\n\n  /**\n   * Création d'un produit\n   * @param productDto\n   */\n  async create(productDto: ProductDto) {\n    try {\n      const [result] = await this.productRepository.create(productDto);\n      const id = (result as any).insertId;\n      if (!id) {\n        throw new HttpException(\n          `Erreur dans la création du client`,\n          HttpStatus.BAD_REQUEST,\n        );\n      }\n      return {\n        id: id,\n        price: productDto.price,\n        type: productDto.type,\n        weight: productDto.weight,\n        quantity: productDto.quantity,\n        quantity_sale: productDto.quantity_sale,\n        lot_number: productDto.lot_number,\n        DLUO: productDto.DLUO,\n        date_packaging: productDto.date_packaging,\n        harvesthoney: {\n          id: productDto.harvesthoney.id,\n        },\n      } as ProductDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Mise à jour du produit\n   * @param productDto\n   */\n  async update(productDto: ProductDto) {\n    try {\n      await this.productRepository.update(productDto);\n      return productDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Suppression d'un produit\n   * @param id\n   */\n  async delete(id: number) {\n    try {\n      return await this.productRepository.delete(id);\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération d'un produit\n   * @param id\n   */\n  async findOne(id: number) {\n    try {\n      const [row] = await this.productRepository.findOne(id);\n      if (!row) {\n        return undefined;\n      }\n\n      return await this.mapperProductDto(row);\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération de tout les produits créé\n   */\n  async findAll() {\n    try {\n      const [rows] = await this.productRepository.findAll();\n      if (!rows) {\n        return undefined;\n      }\n\n      return await this.mapperListProductDto(rows);\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération de tout les produits d'une récolte\n   * @param idHarvesthoney\n   */\n  async findAllByHarvesthoney(idHarvesthoney: number) {\n    try {\n      const [rows] =\n        await this.productRepository.findAllByHarvesthoney(idHarvesthoney);\n      if (!rows) {\n        return undefined;\n      }\n\n      return await this.mapperListProductDto(rows);\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Récupération de tout les produits d'un apiculteur\n   * @param idBeekeeper\n   */\n  async findAllByBeekeeper(idBeekeeper: number) {\n    try {\n      const [rows] =\n        await this.productRepository.findAllByBeekeeper(idBeekeeper);\n      if (!rows) {\n        return undefined;\n      }\n\n      return await this.mapperListProductDto(rows);\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Permet de tracé l'histoire d'un produit\n   * @param id\n   */\n  async getTracking(id: number) {\n    try {\n      const [rows] = await this.productRepository.getTracking(id);\n      if (!rows) {\n        return undefined;\n      }\n\n      const row = rows[0] as any;\n\n      const product: ProductDto = {\n        id: row.id,\n        price: row.price,\n        type: row.type,\n        weight: row.weight,\n        quantity: row.quantity,\n        quantity_sale: row.quantity_sale,\n        lot_number: row.lot_number,\n        DLUO: row.DLUO,\n        date_packaging: row.date_packaging,\n      } as ProductDto;\n\n      const harvesthoney: HarvesthoneyDto = {\n        id: row.harvesthoney_id,\n        date_harvest: row.date_harvest,\n        total_honey_kg: row.total_honey_kg,\n        total_sale_honey_kg: row.total_sale_honey_kg,\n        lot_number: row.lot_number,\n        storage: row.storage,\n      } as HarvesthoneyDto;\n\n      const honeycrops: HoneycropDto[] = [];\n      const beehives: BeehiveDto[] = [];\n      const beeyards: BeeyardDto[] = [];\n      const beekeepers: BeekeeperDto[] = [];\n\n      for (const honeycrop of row.honeycrops as any) {\n        if (!honeycrops.find((el) => el.id === honeycrop.honeycrop_id)) {\n          honeycrops.push({\n            id: honeycrop.honeycrop_id,\n            name: honeycrop.honeycrop_name,\n            honey_kg: honeycrop.honey_kg,\n            nb_hausses: honeycrop.nb_hausses,\n          } as HoneycropDto);\n        }\n        if (!beehives.find((el) => el.id === honeycrop.beehive.beehive_id)) {\n          beehives.push({\n            id: honeycrop.beehive.beehive_id,\n            bee_type: honeycrop.beehive.bee_type,\n            name: honeycrop.beehive.beehive_name,\n            type_hive: honeycrop.beehive.type_hive,\n          } as BeehiveDto);\n        }\n        if (!beeyards.find((el) => el.id === honeycrop.beeyard.beeyard_id)) {\n          beeyards.push({\n            id: honeycrop.beeyard.beeyard_id,\n            name: honeycrop.beeyard.beeyard_name,\n            environment: honeycrop.beeyard.environment,\n            address: {\n              id: honeycrop.address_beeyard.address_id,\n              street: honeycrop.address_beeyard.street,\n              additional_address: honeycrop.address_beeyard.additional_address,\n              zipcode: honeycrop.address_beeyard.zipcode,\n              city: honeycrop.address_beeyard.city,\n              state: honeycrop.address_beeyard.state,\n              country: honeycrop.address_beeyard.country,\n            } as AddressDto,\n          } as BeeyardDto);\n        }\n        if (\n          !beekeepers.find((el) => el.id === honeycrop.beekeeper.beekeeper_id)\n        ) {\n          beekeepers.push({\n            id: honeycrop.beekeeper.beekeeper_id,\n            firstname: honeycrop.beekeeper.firstname,\n            lastname: honeycrop.beekeeper.lastname,\n            siret: honeycrop.beekeeper.siret,\n            napi: honeycrop.beekeeper.napi,\n            email: honeycrop.beekeeper.email,\n            phone: honeycrop.beekeeper.phone,\n            address: {\n              id: honeycrop.address_beekeeper.address_id,\n              street: honeycrop.address_beekeeper.street,\n              additional_address:\n                honeycrop.address_beekeeper.additional_address,\n              zipcode: honeycrop.address_beekeeper.zipcode,\n              city: honeycrop.address_beekeeper.city,\n              state: honeycrop.address_beekeeper.state,\n              country: honeycrop.address_beekeeper.country,\n            } as AddressDto,\n          } as BeekeeperDto);\n        }\n      }\n\n      /*const honeycrop: HoneycropDto = {\n        id: row.honeycrop_id,\n        name: row.name,\n        honey_kg: row.honey_kg,\n        nb_hausses: row.nb_hausses,\n        beehive: {\n          id: row.beehive_id,\n        },\n      } as HoneycropDto;\n\n      const beehive: BeehiveDto = {\n        id: row.beehive_id,\n        bee_type: row.bee_type,\n        name: row.name,\n        type_hive: row.type_hive,\n        beeyard: { id: row.beeyard_id },\n      } as BeehiveDto;\n\n      const beeyard: BeeyardDto = {\n        id: row.beeyard_id,\n        name: row.beeyard_name,\n        environment: row.environment,\n        address: {\n          id: 0,\n        } as AddressDto,\n        beekeeper: {\n          id: row.beekeeper_id,\n        } as BeekeeperDto,\n      } as BeeyardDto;\n\n      const beekeeper: BeekeeperDto = {\n        id: row.beekeeper_id,\n        firstname: row.firstname,\n        lastname: row.lastname,\n        siret: row.siret,\n        napi: row.napi,\n        email: row.email,\n        phone: row.phone,\n        address: {\n          id: 0,\n        } as AddressDto,\n      } as BeekeeperDto;*/\n\n      const trackingDto: TrackingDto = {\n        productDto: product,\n        harvesthoney: harvesthoney,\n        honeycrop: honeycrops,\n        beehive: beehives,\n        beeyard: beeyards,\n        beekeeper: beekeepers,\n      };\n      return trackingDto;\n    } catch (err: any) {\n      throw new HttpException(err.message, HttpStatus.BAD_REQUEST);\n    }\n  }\n\n  /**\n   * Méthode qui permet de mapper un tableau d'objet en une liste de ProductDto\n   * @param rows\n   * @private\n   */\n  private async mapperListProductDto(rows: any) {\n    const products: ProductDto[] = [];\n\n    for (const row of rows as any) {\n      products.push(await this.mapperProductDto(row));\n    }\n\n    return products;\n  }\n\n  /**\n   * methode qui permet de mapper un objet en ProductDto\n   * @param row\n   * @private\n   */\n  private async mapperProductDto(row: any) {\n    return {\n      id: row.id,\n      price: row.price,\n      type: row.type,\n      weight: row.weight,\n      quantity: row.quantity,\n      quantity_sale: row.quantity_sale,\n      lot_number: row.lot_number,\n      DLUO: row.DLUO,\n      date_packaging: row.date_packaging,\n      harvesthoney: {\n        id: row.id_harvesthoney,\n      },\n    } as ProductDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RelHarvestHoneycropDto.html":{"url":"classes/RelHarvestHoneycropDto.html","title":"class - RelHarvestHoneycropDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RelHarvestHoneycropDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/beekeeping/honey/harvesthoney/dto/relHarvestHoneycropDto.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                idHarvestHoney\n                            \n                            \n                                    \n                                    \n                                    \n                                idHoneycrop\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        idHarvestHoney\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ValidateNested({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/relHarvestHoneycropDto.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        idHoneycrop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ValidateNested({message: 'la validation échoué'})@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/beekeeping/honey/harvesthoney/dto/relHarvestHoneycropDto.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsNumber, ValidateNested } from 'class-validator';\n\nexport class RelHarvestHoneycropDto {\n  @IsNotEmpty()\n  @ValidateNested({ message: 'la validation échoué' })\n  @IsNumber()\n  idHarvestHoney: number;\n\n  @IsNotEmpty()\n  @ValidateNested({ message: 'la validation échoué' })\n  @IsNumber()\n  idHoneycrop: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TrackingDto.html":{"url":"classes/TrackingDto.html","title":"class - TrackingDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TrackingDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/store/product/dto/tracking.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                beehive\n                            \n                            \n                                    \n                                    \n                                    \n                                beekeeper\n                            \n                            \n                                    \n                                    \n                                    \n                                beeyard\n                            \n                            \n                                    \n                                    \n                                    \n                                harvesthoney\n                            \n                            \n                                    \n                                    \n                                    \n                                honeycrop\n                            \n                            \n                                    \n                                    \n                                    \n                                productDto\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        beehive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BeehiveDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'La ruche ne peut pas être vide.'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/tracking.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        beekeeper\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BeekeeperDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ValidateNested({message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/tracking.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        beeyard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BeeyardDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@ValidateNested({message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/tracking.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        harvesthoney\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HarvesthoneyDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'La récolte de miel ne peut pas être vides.'})@ValidateNested({each: true, message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/tracking.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        honeycrop\n                        \n                    \n                \n            \n                \n                    \n                        Type :         HoneycropDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'Les récoltes de miel ne peuvent pas être vides.'})@ValidateNested({each: true, message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/tracking.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        productDto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty({message: 'La produit ne peut pas être vides.'})@ValidateNested({each: true, message: 'la validation échoué'})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/store/product/dto/tracking.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ProductDto } from './product.dto';\nimport { HarvesthoneyDto } from '../../../beekeeping/honey/harvesthoney/dto/harvesthoney.dto';\nimport { HoneycropDto } from '../../../beekeeping/honey/honeycrop/dto/honeycrop.dto';\nimport { BeehiveDto } from '../../../beekeeping/beehive/dto/beehive.dto';\nimport { IsNotEmpty, ValidateNested } from 'class-validator';\nimport { Type } from 'class-transformer';\nimport { BeeyardDto } from '../../../beekeeping/beeyard/dto/beeyard.dto';\nimport { BeekeeperDto } from '../../../beekeeping/beekeeper/dto/beekeeper.dto';\n\nexport class TrackingDto {\n  @IsNotEmpty({ message: 'La produit ne peut pas être vides.' })\n  @ValidateNested({ each: true, message: 'la validation échoué' })\n  @Type(() => ProductDto)\n  productDto: ProductDto;\n\n  @IsNotEmpty({ message: 'La récolte de miel ne peut pas être vides.' })\n  @ValidateNested({ each: true, message: 'la validation échoué' })\n  @Type(() => HarvesthoneyDto)\n  harvesthoney: HarvesthoneyDto;\n\n  @IsNotEmpty({ message: 'Les récoltes de miel ne peuvent pas être vides.' })\n  @ValidateNested({ each: true, message: 'la validation échoué' })\n  @Type(() => HoneycropDto)\n  honeycrop: HoneycropDto[];\n\n  @IsNotEmpty({ message: 'La ruche ne peut pas être vide.' })\n  @Type(() => BeehiveDto)\n  beehive: BeehiveDto[];\n\n  @IsNotEmpty()\n  @ValidateNested({ message: 'la validation échoué' })\n  @Type(() => BeeyardDto)\n  beeyard: BeeyardDto[];\n\n  @IsNotEmpty()\n  @ValidateNested({ message: 'la validation échoué' })\n  @Type(() => BeekeeperDto)\n  beekeeper: BeekeeperDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/beekeeping/address/address.controller.ts\n            \n            controller\n            AddressController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/beekeeping/address/address.repository.ts\n            \n            injectable\n            AddressRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/beekeeping/address/address.service.ts\n            \n            injectable\n            AddressService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/beekeeping/address/dto/address.dto.ts\n            \n            class\n            AddressDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/beekeeping/address/interfaces/address.interface.ts\n            \n            interface\n            Address\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/beekeeping/beehive/beehive.controller.ts\n            \n            controller\n            BeehiveController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/beekeeping/beehive/beehive.repository.ts\n            \n            injectable\n            BeehiveRepository\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/beekeeping/beehive/beehive.service.ts\n            \n            injectable\n            BeehiveService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/beekeeping/beehive/dto/beehive.dto.ts\n            \n            class\n            BeehiveDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/beekeeping/beehive/interfaces/beehive.interface.ts\n            \n            interface\n            Beehive\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/beekeeping/beekeeper/beekeeper.controller.ts\n            \n            controller\n            BeekeeperController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/beekeeping/beekeeper/beekeeper.repository.ts\n            \n            injectable\n            BeekeeperRepository\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/beekeeping/beekeeper/beekeeper.service.ts\n            \n            injectable\n            BeekeeperService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/beekeeping/beekeeper/dto/beekeeper.dto.ts\n            \n            class\n            BeekeeperDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/beekeeping/beekeeper/interfaces/beekeeper.interface.ts\n            \n            interface\n            Beekeeper\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/beekeeping/beeyard/beeyard.controller.ts\n            \n            controller\n            BeeyardController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/beekeeping/beeyard/beeyard.repository.ts\n            \n            injectable\n            BeeyardRepository\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/beekeeping/beeyard/beeyard.service.ts\n            \n            injectable\n            BeeyardService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/beekeeping/beeyard/dto/beeyard.dto.ts\n            \n            class\n            BeeyardDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/beekeeping/beeyard/interfaces/beeyard.interface.ts\n            \n            interface\n            Beeyard\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/harvesthoney/dto/harvesthoney.dto.ts\n            \n            class\n            HarvesthoneyDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/harvesthoney/dto/harvesthoneyBeBeekeeper.dto.ts\n            \n            class\n            HarvesthoneyByBeekeeperDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeehive.dto.ts\n            \n            class\n            HarvesthoneyByBeehiveDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/harvesthoney/dto/harvesthoneyByBeeyard.dto.ts\n            \n            class\n            HarvesthoneyByBeeyardDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/harvesthoney/dto/relHarvestHoneycropDto.dto.ts\n            \n            class\n            RelHarvestHoneycropDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/harvesthoney/harvesthoney.controller.ts\n            \n            controller\n            HarvesthoneyController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/harvesthoney/harvesthoney.repository.ts\n            \n            injectable\n            HarvesthoneyRepository\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/harvesthoney/harvesthoney.service.ts\n            \n            injectable\n            HarvesthoneyService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/harvesthoney/interfaces/harvesthoney.interface.ts\n            \n            interface\n            Harvesthoney\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/honeycrop/dto/honeycrop.dto.ts\n            \n            class\n            HoneycropDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/honeycrop/honeycrop.controller.ts\n            \n            controller\n            HoneycropController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/honeycrop/honeycrop.repository.ts\n            \n            injectable\n            HoneycropRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/honeycrop/honeycrop.service.ts\n            \n            injectable\n            HoneycropService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/beekeeping/honey/honeycrop/interfaces/honeycrop.interface.ts\n            \n            interface\n            Honeycrop\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/database/mysql.config.ts\n            \n            variable\n            mysqlConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/mysql.config.ts\n            \n            variable\n            pool\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/store/client/client.controller.ts\n            \n            controller\n            ClientController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/store/client/client.repository.ts\n            \n            injectable\n            ClientRepository\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/store/client/client.service.ts\n            \n            injectable\n            ClientService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/store/client/dto/client.dto.ts\n            \n            class\n            ClientDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/store/client/interfaces/client.interface.ts\n            \n            interface\n            Client\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/store/product/dto/product.dto.ts\n            \n            class\n            ProductDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/store/product/dto/tracking.dto.ts\n            \n            class\n            TrackingDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/store/product/interfaces/product.interface.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/store/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/store/product/product.repository.ts\n            \n            injectable\n            ProductRepository\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/store/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                83 %\n                (10/12)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.2.3\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/passport : ^10.0.3\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            bcrypt : ^5.1.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            mysql2 : ^3.10.3\n        \n            passport : ^0.7.0\n        \n            passport-jwt : ^4.0.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TypeProduct   (src/.../TypeProduct.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/store/product/model/TypeProduct.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        TypeProduct\n                    \n                \n                        \n                            \n                                 POT\n                            \n                        \n                        \n                            \n                                Value : POT\n                            \n                        \n                        \n                            \n                                 SACHET\n                            \n                        \n                        \n                            \n                                Value : SACHET\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n🐝 BEE API'C 🐝\nDescription\nProject to traking a jar of honey, so that a consumer can know the origin of the product\nStructure\nExample :api-project\n|\n+--src\n    |\n    +--database\n    |\n    +--store\n        |\n        +--client\n        +--order\n        +--product\n    |\n    +--beekeeping\n        |\n        +-- address\n        +--beekeeper\n        +--beeyard\n        +--beehive\n        +--honey\n            |\n            +--honeycrop\n            +--harvesthoneySchéma de base de données\n\nDocumentation\npour plus de détail, consulter la documentation du projet\nInstallation\nInstaller la base de donnée, run script: script.sql\nExample :api-project\n|\n+-- src\n    |\n    --+ databaseModifier le fichier .env avec vos configurations :\nExample :DATABASE_HOST=localhost\nDATABASE_PORT=3306\nDATABASE_USER=root\nDATABASE_PASSWORD=\nDATABASE_NAME=apic-projectInstaller les dépendances :\nExample :$ npm installRunning the app\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run dev\n\n# production mode\n$ npm run prodTest\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covStay in touch\n\nAuthor - COLAS Vincent\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nExample :                GNU GENERAL PUBLIC LICENSE\n                   Version 2, June 1991 Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\nExample :                        Preamble  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\nExample :                GNU GENERAL PUBLIC LICENSE   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\nThis License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\nYou may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\nYou may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\nExample :a) You must cause the modified files to carry prominent notices\nstating that you changed the files and the date of any change.\n\nb) You must cause any work that you distribute or publish, that in\nwhole or in part contains or is derived from the Program or any\npart thereof, to be licensed as a whole at no charge to all third\nparties under the terms of this License.\n\nc) If the modified program normally reads commands interactively\nwhen run, you must cause it, when started running for such\ninteractive use in the most ordinary way, to print or display an\nannouncement including an appropriate copyright notice and a\nnotice that there is no warranty (or else, saying that you provide\na warranty) and that users may redistribute the program under\nthese conditions, and telling the user how to view a copy of this\nLicense.  (Exception: if the Program itself is interactive but\ndoes not normally print such an announcement, your work based on\nthe Program is not required to print an announcement.)These requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\nYou may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\nExample :a) Accompany it with the complete corresponding machine-readable\nsource code, which must be distributed under the terms of Sections\n1 and 2 above on a medium customarily used for software interchange; or,\n\nb) Accompany it with a written offer, valid for at least three\nyears, to give any third party, for a charge no more than your\ncost of physically performing source distribution, a complete\nmachine-readable copy of the corresponding source code, to be\ndistributed under the terms of Sections 1 and 2 above on a medium\ncustomarily used for software interchange; or,\n\nc) Accompany it with the information you received as to the offer\nto distribute corresponding source code.  (This alternative is\nallowed only for noncommercial distribution and only if you\nreceived the program in object code or executable form with such\nan offer, in accord with Subsection b above.)The source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\nYou may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\nYou are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\nEach time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\nIf, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\nIf the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\nThe Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\nIf you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\nExample :                  NO WARRANTY\nBECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\nExample :           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\nExample :\nCopyright (C)   \n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along\nwith this program; if not, write to the Free Software Foundation, Inc.,\n51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.Also add information on how to contact you by electronic and paper mail.\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\nExample :Gnomovision version 69, Copyright (C) year name of author\nGnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' and show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than show w' and show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n  , 1 April 1989\n  Ty Coon, President of Vice\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AddressModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BeehiveModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BeekeeperModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BeeyardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HarvesthoneyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HoneycropModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AddressModule\n\n\n\ncluster_AddressModule_exports\n\n\n\ncluster_AddressModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BeehiveModule\n\n\n\ncluster_BeehiveModule_providers\n\n\n\ncluster_BeekeeperModule\n\n\n\ncluster_BeekeeperModule_providers\n\n\n\ncluster_BeeyardModule\n\n\n\ncluster_BeeyardModule_providers\n\n\n\ncluster_ClientModule\n\n\n\ncluster_ClientModule_providers\n\n\n\ncluster_HarvesthoneyModule\n\n\n\ncluster_HarvesthoneyModule_providers\n\n\n\ncluster_HoneycropModule\n\n\n\ncluster_HoneycropModule_exports\n\n\n\ncluster_HoneycropModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\n\nAddressService \n\nAddressService \n\n\n\nAddressModule\n\nAddressModule\n\nAddressService  -->\n\nAddressModule->AddressService \n\n\n\n\n\nBeekeeperModule\n\nBeekeeperModule\n\nBeekeeperModule -->\n\nAddressModule->BeekeeperModule\n\n\n\n\n\nBeeyardModule\n\nBeeyardModule\n\nBeeyardModule -->\n\nAddressModule->BeeyardModule\n\n\n\n\n\nClientModule\n\nClientModule\n\nClientModule -->\n\nAddressModule->ClientModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAddressModule->AppModule\n\n\n\n\n\nAddressRepository\n\nAddressRepository\n\nAddressModule -->\n\nAddressRepository->AddressModule\n\n\n\n\n\nAddressService\n\nAddressService\n\nAddressModule -->\n\nAddressService->AddressModule\n\n\n\n\n\nBeehiveModule\n\nBeehiveModule\n\nAppModule -->\n\nBeehiveModule->AppModule\n\n\n\nAppModule -->\n\nBeekeeperModule->AppModule\n\n\n\nAppModule -->\n\nBeeyardModule->AppModule\n\n\n\nAppModule -->\n\nClientModule->AppModule\n\n\n\n\n\nHarvesthoneyModule\n\nHarvesthoneyModule\n\nAppModule -->\n\nHarvesthoneyModule->AppModule\n\n\n\n\n\nHoneycropModule\n\nHoneycropModule\n\nHarvesthoneyModule -->\n\nHoneycropModule->HarvesthoneyModule\n\n\n\nAppModule -->\n\nHoneycropModule->AppModule\n\n\n\n\n\nHoneycropService \n\nHoneycropService \n\nHoneycropService  -->\n\nHoneycropModule->HoneycropService \n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBeehiveRepository\n\nBeehiveRepository\n\nBeehiveModule -->\n\nBeehiveRepository->BeehiveModule\n\n\n\n\n\nBeehiveService\n\nBeehiveService\n\nBeehiveModule -->\n\nBeehiveService->BeehiveModule\n\n\n\n\n\nBeekeeperRepository\n\nBeekeeperRepository\n\nBeekeeperModule -->\n\nBeekeeperRepository->BeekeeperModule\n\n\n\n\n\nBeekeeperService\n\nBeekeeperService\n\nBeekeeperModule -->\n\nBeekeeperService->BeekeeperModule\n\n\n\n\n\nBeeyardRepository\n\nBeeyardRepository\n\nBeeyardModule -->\n\nBeeyardRepository->BeeyardModule\n\n\n\n\n\nBeeyardService\n\nBeeyardService\n\nBeeyardModule -->\n\nBeeyardService->BeeyardModule\n\n\n\n\n\nClientRepository\n\nClientRepository\n\nClientModule -->\n\nClientRepository->ClientModule\n\n\n\n\n\nClientService\n\nClientService\n\nClientModule -->\n\nClientService->ClientModule\n\n\n\n\n\nHarvesthoneyRepository\n\nHarvesthoneyRepository\n\nHarvesthoneyModule -->\n\nHarvesthoneyRepository->HarvesthoneyModule\n\n\n\n\n\nHarvesthoneyService\n\nHarvesthoneyService\n\nHarvesthoneyModule -->\n\nHarvesthoneyService->HarvesthoneyModule\n\n\n\n\n\nHoneycropRepository\n\nHoneycropRepository\n\nHoneycropModule -->\n\nHoneycropRepository->HoneycropModule\n\n\n\n\n\nHoneycropService\n\nHoneycropService\n\nHoneycropModule -->\n\nHoneycropService->HoneycropModule\n\n\n\n\n\nProductRepository\n\nProductRepository\n\nProductModule -->\n\nProductRepository->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    17 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : Project to traking a jar of honey, so that a consumer can know the origin of the product.\n        \n            License : GNU V2\n        \n            Author : COLAS Vincent\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            mysqlConfig   (src/.../mysql.config.ts)\n                        \n                        \n                            pool   (src/.../mysql.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/mysql.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mysqlConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  user: process.env.DATABASE_USER,\n  password: process.env.DATABASE_PASSWORD,\n  database: process.env.DATABASE_NAME,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pool\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mysql.createPool(mysqlConfig)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
